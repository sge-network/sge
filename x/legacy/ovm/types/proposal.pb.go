// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sge/legacy/ovm/v1beta/proposal.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// ProposalResult is the enum type for the proposal result.
type ProposalResult int32

const (
	// unchosen value
	ProposalResult_PROPOSAL_RESULT_UNSPECIFIED ProposalResult = 0
	// approved
	ProposalResult_PROPOSAL_RESULT_APPROVED ProposalResult = 1
	// rejected
	ProposalResult_PROPOSAL_RESULT_REJECTED ProposalResult = 2
	// expired
	ProposalResult_PROPOSAL_RESULT_EXPIRED ProposalResult = 3
)

var ProposalResult_name = map[int32]string{
	0: "PROPOSAL_RESULT_UNSPECIFIED",
	1: "PROPOSAL_RESULT_APPROVED",
	2: "PROPOSAL_RESULT_REJECTED",
	3: "PROPOSAL_RESULT_EXPIRED",
}

var ProposalResult_value = map[string]int32{
	"PROPOSAL_RESULT_UNSPECIFIED": 0,
	"PROPOSAL_RESULT_APPROVED":    1,
	"PROPOSAL_RESULT_REJECTED":    2,
	"PROPOSAL_RESULT_EXPIRED":     3,
}

func (x ProposalResult) String() string {
	return proto.EnumName(ProposalResult_name, int32(x))
}

func (ProposalResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fb8a796386c96608, []int{0}
}

// ProposalStatus is the enum type for the proposal status.
type ProposalStatus int32

const (
	// unchosen value
	ProposalStatus_PROPOSAL_STATUS_UNSPECIFIED ProposalStatus = 0
	// active
	ProposalStatus_PROPOSAL_STATUS_ACTIVE ProposalStatus = 1
	// finished
	ProposalStatus_PROPOSAL_STATUS_FINISHED ProposalStatus = 2
)

var ProposalStatus_name = map[int32]string{
	0: "PROPOSAL_STATUS_UNSPECIFIED",
	1: "PROPOSAL_STATUS_ACTIVE",
	2: "PROPOSAL_STATUS_FINISHED",
}

var ProposalStatus_value = map[string]int32{
	"PROPOSAL_STATUS_UNSPECIFIED": 0,
	"PROPOSAL_STATUS_ACTIVE":      1,
	"PROPOSAL_STATUS_FINISHED":    2,
}

func (x ProposalStatus) String() string {
	return proto.EnumName(ProposalStatus_name, int32(x))
}

func (ProposalStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fb8a796386c96608, []int{1}
}

// PublicKeysChangeProposal is the type for the proposal for additions and
// removals of pub keys.
type PublicKeysChangeProposal struct {
	// id is the sequential id of the proposal generated by the blockchain.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// creator is the account address of the proposal creator.
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	// modifications contain the ticket payload of the proposal.
	Modifications PubkeysChangeProposalPayload `protobuf:"bytes,3,opt,name=modifications,proto3" json:"modifications"`
	// votes contains the votes of the proposal.
	Votes []*Vote `protobuf:"bytes,4,rep,name=votes,proto3" json:"votes,omitempty"`
	// start_ts is the block time that the proposal is set.
	StartTS int64 `protobuf:"varint,5,opt,name=start_ts,proto3" json:"start_ts"`
	// result is the result of the finished proposal.
	Result ProposalResult `protobuf:"varint,6,opt,name=result,proto3,enum=sge.legacy.ovm.v1beta.ProposalResult" json:"result,omitempty"`
	// result_meta is the metadata related to the result of the finished proposal.
	ResultMeta string `protobuf:"bytes,7,opt,name=result_meta,json=resultMeta,proto3" json:"result_meta,omitempty"`
	// finish_ts is the block time that the proposal is set as finished.
	FinishTS int64 `protobuf:"varint,8,opt,name=finish_ts,proto3" json:"finish_ts"`
	// status is the status of a proposal.
	Status ProposalStatus `protobuf:"varint,9,opt,name=status,proto3,enum=sge.legacy.ovm.v1beta.ProposalStatus" json:"status,omitempty"`
}

func (m *PublicKeysChangeProposal) Reset()         { *m = PublicKeysChangeProposal{} }
func (m *PublicKeysChangeProposal) String() string { return proto.CompactTextString(m) }
func (*PublicKeysChangeProposal) ProtoMessage()    {}
func (*PublicKeysChangeProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb8a796386c96608, []int{0}
}
func (m *PublicKeysChangeProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PublicKeysChangeProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PublicKeysChangeProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PublicKeysChangeProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicKeysChangeProposal.Merge(m, src)
}
func (m *PublicKeysChangeProposal) XXX_Size() int {
	return m.Size()
}
func (m *PublicKeysChangeProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicKeysChangeProposal.DiscardUnknown(m)
}

var xxx_messageInfo_PublicKeysChangeProposal proto.InternalMessageInfo

func (m *PublicKeysChangeProposal) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PublicKeysChangeProposal) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *PublicKeysChangeProposal) GetModifications() PubkeysChangeProposalPayload {
	if m != nil {
		return m.Modifications
	}
	return PubkeysChangeProposalPayload{}
}

func (m *PublicKeysChangeProposal) GetVotes() []*Vote {
	if m != nil {
		return m.Votes
	}
	return nil
}

func (m *PublicKeysChangeProposal) GetStartTS() int64 {
	if m != nil {
		return m.StartTS
	}
	return 0
}

func (m *PublicKeysChangeProposal) GetResult() ProposalResult {
	if m != nil {
		return m.Result
	}
	return ProposalResult_PROPOSAL_RESULT_UNSPECIFIED
}

func (m *PublicKeysChangeProposal) GetResultMeta() string {
	if m != nil {
		return m.ResultMeta
	}
	return ""
}

func (m *PublicKeysChangeProposal) GetFinishTS() int64 {
	if m != nil {
		return m.FinishTS
	}
	return 0
}

func (m *PublicKeysChangeProposal) GetStatus() ProposalStatus {
	if m != nil {
		return m.Status
	}
	return ProposalStatus_PROPOSAL_STATUS_UNSPECIFIED
}

func init() {
	proto.RegisterEnum("sge.legacy.ovm.v1beta.ProposalResult", ProposalResult_name, ProposalResult_value)
	proto.RegisterEnum("sge.legacy.ovm.v1beta.ProposalStatus", ProposalStatus_name, ProposalStatus_value)
	proto.RegisterType((*PublicKeysChangeProposal)(nil), "sge.legacy.ovm.v1beta.PublicKeysChangeProposal")
}

func init() {
	proto.RegisterFile("sge/legacy/ovm/v1beta/proposal.proto", fileDescriptor_fb8a796386c96608)
}

var fileDescriptor_fb8a796386c96608 = []byte{
	// 579 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0x4d, 0x6f, 0xd3, 0x30,
	0x1c, 0xc6, 0x9b, 0x76, 0xaf, 0x9e, 0x98, 0x2a, 0x6b, 0xb0, 0x6c, 0x43, 0x49, 0x34, 0x81, 0x14,
	0x4d, 0x5a, 0xa2, 0x75, 0x07, 0x4e, 0x1c, 0xfa, 0x92, 0x41, 0x60, 0x6c, 0x91, 0x93, 0x56, 0x88,
	0x4b, 0xe4, 0x26, 0x5e, 0x1a, 0xb5, 0xa9, 0xab, 0xd8, 0x2d, 0xf4, 0x2b, 0x70, 0xe2, 0xc3, 0xf0,
	0x21, 0x76, 0x9c, 0x38, 0x71, 0xaa, 0x50, 0x7b, 0xe3, 0x4b, 0x80, 0xf2, 0xc2, 0x4a, 0x4b, 0x27,
	0x71, 0x7b, 0xf2, 0xfc, 0x7f, 0x76, 0x7e, 0xb6, 0x64, 0xf0, 0x8c, 0x05, 0x44, 0xef, 0x91, 0x00,
	0x7b, 0x63, 0x9d, 0x8e, 0x22, 0x7d, 0x74, 0xd6, 0x26, 0x1c, 0xeb, 0x83, 0x98, 0x0e, 0x28, 0xc3,
	0x3d, 0x6d, 0x10, 0x53, 0x4e, 0xe1, 0x63, 0x16, 0x10, 0x2d, 0xa3, 0x34, 0x3a, 0x8a, 0xb4, 0x8c,
	0x3a, 0x3c, 0xf0, 0x28, 0x8b, 0x28, 0x73, 0x53, 0x48, 0xcf, 0x3e, 0xb2, 0x15, 0x87, 0x7b, 0x01,
	0x0d, 0x68, 0xd6, 0x27, 0x29, 0x6f, 0x8f, 0x57, 0xff, 0x8d, 0x87, 0x5e, 0x97, 0xf0, 0x9c, 0x51,
	0x56, 0x33, 0x23, 0xca, 0x49, 0x46, 0x1c, 0xff, 0x2a, 0x01, 0xd1, 0x1a, 0xb6, 0x7b, 0xa1, 0xf7,
	0x96, 0x8c, 0x59, 0xbd, 0x83, 0xfb, 0x01, 0xb1, 0x72, 0x61, 0xb8, 0x0b, 0x8a, 0xa1, 0x2f, 0x0a,
	0x8a, 0xa0, 0xae, 0xa1, 0x62, 0xe8, 0xc3, 0x0a, 0xd8, 0xf4, 0x62, 0x82, 0x39, 0x8d, 0xc5, 0xa2,
	0x22, 0xa8, 0xdb, 0x35, 0xf1, 0xdb, 0xd7, 0xd3, 0xbd, 0xdc, 0xb5, 0xea, 0xfb, 0x31, 0x61, 0xcc,
	0xe6, 0x71, 0xd8, 0x0f, 0xd0, 0x1f, 0x10, 0xba, 0xe0, 0x51, 0x44, 0xfd, 0xf0, 0x26, 0xf4, 0x30,
	0x0f, 0x69, 0x9f, 0x89, 0x25, 0x45, 0x50, 0x77, 0x2a, 0xe7, 0xda, 0xca, 0x6b, 0xd0, 0xac, 0x61,
	0xbb, 0xfb, 0x8f, 0x88, 0x85, 0xc7, 0x3d, 0x8a, 0xfd, 0xda, 0xda, 0xed, 0x44, 0x2e, 0xa0, 0xc5,
	0xfd, 0xe0, 0x19, 0x58, 0x4f, 0xce, 0xc3, 0xc4, 0x35, 0xa5, 0xa4, 0xee, 0x54, 0x8e, 0x1e, 0xd8,
	0xb8, 0x45, 0x39, 0x41, 0x19, 0x09, 0xcf, 0xc1, 0x16, 0xe3, 0x38, 0xe6, 0x2e, 0x67, 0xe2, 0xba,
	0x22, 0xa8, 0xa5, 0xda, 0xfe, 0x74, 0x22, 0x6f, 0xda, 0x49, 0xe7, 0xd8, 0x3f, 0x27, 0xf2, 0xfd,
	0x18, 0xdd, 0x27, 0xf8, 0x12, 0x6c, 0xc4, 0x84, 0x0d, 0x7b, 0x5c, 0xdc, 0x50, 0x04, 0x75, 0xb7,
	0xf2, 0xfc, 0xa1, 0x13, 0xe4, 0xd2, 0x28, 0x85, 0x51, 0xbe, 0x08, 0xca, 0x60, 0x27, 0x4b, 0x6e,
	0x44, 0x38, 0x16, 0x37, 0x93, 0xfb, 0x43, 0x20, 0xab, 0xde, 0x11, 0x8e, 0xe1, 0x0b, 0xb0, 0x7d,
	0x13, 0xf6, 0x43, 0xd6, 0x49, 0xac, 0xb6, 0x52, 0xab, 0x83, 0xe9, 0x44, 0xde, 0xba, 0x48, 0xcb,
	0x54, 0x6b, 0x0e, 0xa0, 0x79, 0x4c, 0xc4, 0x18, 0xc7, 0x7c, 0xc8, 0xc4, 0xed, 0xff, 0x12, 0xb3,
	0x53, 0x18, 0xe5, 0x8b, 0x4e, 0x3e, 0x0b, 0x60, 0x77, 0xd1, 0x19, 0xca, 0xe0, 0xc8, 0x42, 0xd7,
	0xd6, 0xb5, 0x5d, 0xbd, 0x74, 0x91, 0x61, 0x37, 0x2f, 0x1d, 0xb7, 0x79, 0x65, 0x5b, 0x46, 0xdd,
	0xbc, 0x30, 0x8d, 0x46, 0xb9, 0x00, 0x9f, 0x02, 0x71, 0x19, 0xa8, 0x5a, 0x16, 0xba, 0x6e, 0x19,
	0x8d, 0xb2, 0xb0, 0x6a, 0x8a, 0x8c, 0x37, 0x46, 0xdd, 0x31, 0x1a, 0xe5, 0x22, 0x3c, 0x02, 0xfb,
	0xcb, 0x53, 0xe3, 0xbd, 0x65, 0x22, 0xa3, 0x51, 0x2e, 0x9d, 0x74, 0xe7, 0x2e, 0x99, 0xe6, 0x82,
	0x8b, 0xed, 0x54, 0x9d, 0xa6, 0xbd, 0xe4, 0x72, 0x08, 0x9e, 0x2c, 0x03, 0xd5, 0xba, 0x63, 0xb6,
	0x8c, 0x25, 0x93, 0x7c, 0x76, 0x61, 0x5e, 0x99, 0xf6, 0xeb, 0xc4, 0xa4, 0xf6, 0xea, 0x76, 0x2a,
	0x09, 0x77, 0x53, 0x49, 0xf8, 0x31, 0x95, 0x84, 0x2f, 0x33, 0xa9, 0x70, 0x37, 0x93, 0x0a, 0xdf,
	0x67, 0x52, 0xe1, 0xc3, 0x69, 0x10, 0xf2, 0xce, 0xb0, 0xad, 0x79, 0x34, 0xd2, 0x59, 0x40, 0x4e,
	0xfb, 0x84, 0x7f, 0xa4, 0x71, 0x37, 0xc9, 0xfa, 0xa7, 0xbf, 0x1f, 0x14, 0x1f, 0x0f, 0x08, 0x6b,
	0x6f, 0xa4, 0x6f, 0xe9, 0xfc, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xef, 0x25, 0x8b, 0xd7, 0x01,
	0x04, 0x00, 0x00,
}

func (m *PublicKeysChangeProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PublicKeysChangeProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PublicKeysChangeProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Status != 0 {
		i = encodeVarintProposal(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x48
	}
	if m.FinishTS != 0 {
		i = encodeVarintProposal(dAtA, i, uint64(m.FinishTS))
		i--
		dAtA[i] = 0x40
	}
	if len(m.ResultMeta) > 0 {
		i -= len(m.ResultMeta)
		copy(dAtA[i:], m.ResultMeta)
		i = encodeVarintProposal(dAtA, i, uint64(len(m.ResultMeta)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Result != 0 {
		i = encodeVarintProposal(dAtA, i, uint64(m.Result))
		i--
		dAtA[i] = 0x30
	}
	if m.StartTS != 0 {
		i = encodeVarintProposal(dAtA, i, uint64(m.StartTS))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Votes) > 0 {
		for iNdEx := len(m.Votes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Votes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProposal(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	{
		size, err := m.Modifications.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintProposal(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintProposal(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintProposal(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintProposal(dAtA []byte, offset int, v uint64) int {
	offset -= sovProposal(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PublicKeysChangeProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProposal(uint64(m.Id))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovProposal(uint64(l))
	}
	l = m.Modifications.Size()
	n += 1 + l + sovProposal(uint64(l))
	if len(m.Votes) > 0 {
		for _, e := range m.Votes {
			l = e.Size()
			n += 1 + l + sovProposal(uint64(l))
		}
	}
	if m.StartTS != 0 {
		n += 1 + sovProposal(uint64(m.StartTS))
	}
	if m.Result != 0 {
		n += 1 + sovProposal(uint64(m.Result))
	}
	l = len(m.ResultMeta)
	if l > 0 {
		n += 1 + l + sovProposal(uint64(l))
	}
	if m.FinishTS != 0 {
		n += 1 + sovProposal(uint64(m.FinishTS))
	}
	if m.Status != 0 {
		n += 1 + sovProposal(uint64(m.Status))
	}
	return n
}

func sovProposal(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozProposal(x uint64) (n int) {
	return sovProposal(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PublicKeysChangeProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProposal
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PublicKeysChangeProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PublicKeysChangeProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProposal
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProposal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Modifications", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProposal
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProposal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Modifications.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Votes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProposal
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProposal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Votes = append(m.Votes, &Vote{})
			if err := m.Votes[len(m.Votes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartTS", wireType)
			}
			m.StartTS = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StartTS |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			m.Result = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Result |= ProposalResult(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResultMeta", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProposal
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProposal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResultMeta = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FinishTS", wireType)
			}
			m.FinishTS = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FinishTS |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= ProposalStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProposal(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProposal
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipProposal(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowProposal
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProposal
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProposal
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthProposal
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupProposal
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthProposal
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthProposal        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowProposal          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupProposal = fmt.Errorf("proto: unexpected end of group")
)
