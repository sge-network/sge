syntax = "proto3";
package sgenetwork.sge.ovm;

import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "sgenetwork/sge/ovm/params.proto";
import "sgenetwork/sge/ovm/proposal.proto";

option go_package = "github.com/sge-network/sge/x/legacy/ovm/types";

// Query defines the gRPC querier service.
service Query {
  // Params queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/sge/ovm/params";
  }
  // Queries a list of PubKeys items.
  rpc PubKeys(QueryPubKeysRequest) returns (QueryPubKeysResponse) {
    option (google.api.http).get = "/sge/ovm/pub_keys";
  }
  // Queries an proposal by id and status.
  rpc PublicKeysChangeProposal(QueryPublicKeysChangeProposalRequest)
      returns (QueryPublicKeysChangeProposalResponse) {
    option (google.api.http).get = "/sge/ovm/pubkeys_proposal/{status}/{id}";
  }
  // Queries a list of proposal items by status.
  rpc PublicKeysChangeProposals(QueryPublicKeysChangeProposalsRequest)
      returns (QueryPublicKeysChangeProposalsResponse) {
    option (google.api.http).get = "/sge/ovm/pubkeys_proposals/{status}";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
// Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
// Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

// QueryPubKeysRequest is the request type for the public keys list query.
// Query/PubKeys RPC method.
message QueryPubKeysRequest {}

// QueryPubKeysResponse is the response type for the public keys list query.
// Query/PubKeys RPC method.
message QueryPubKeysResponse {
  // list is the list of allowed public keys.
  repeated string list = 1;
}

// QueryPublicKeysChangeProposalRequest is the request type for the
// Query/PublicKeysChangeProposal RPC method.
message QueryPublicKeysChangeProposalRequest {
  uint64 id = 1;
  ProposalStatus status = 2;
}

// QueryPublicKeysChangeProposalResponse is the response type for the
// Query/PublicKeysChangeProposal RPC method.
message QueryPublicKeysChangeProposalResponse {
  // proposal holds the proposal.
  PublicKeysChangeProposal proposal = 1 [ (gogoproto.nullable) = false ];
}

// QueryPublicKeysChangeProposalsRequest is the request type for the
// Query/PublicKeysChangeProposals RPC method.
message QueryPublicKeysChangeProposalsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
  ProposalStatus status = 2;
}

// QueryPublicKeysChangeProposalsResponse is the response type for the
// Query/PublicKeysChangeProposals RPC method.
message QueryPublicKeysChangeProposalsResponse {
  // proposals hold the proposals.
  repeated PublicKeysChangeProposal proposals = 1
      [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
