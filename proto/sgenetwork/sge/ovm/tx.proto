syntax = "proto3";
package sgenetwork.sge.ovm;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "sgenetwork/sge/ovm/params.proto";

option go_package = "github.com/sge-network/sge/x/legacy/ovm/types";

// Msg defines the Msg service.
service Msg {
  // PubkeysChangeProposal defines a method to submit a proposal for changing
  // the allowed public keys.
  rpc SubmitPubkeysChangeProposal(MsgSubmitPubkeysChangeProposalRequest)
      returns (MsgSubmitPubkeysChangeProposalResponse) {
    option deprecated = true;
  }
  // VotePubkeysChange defines a method to vote for a proposal for changing the
  // allowed public keys.
  rpc VotePubkeysChange(MsgVotePubkeysChangeRequest)
      returns (MsgVotePubkeysChangeResponse) {
    option deprecated = true;
  }
  // UpdateParams defines a governance operation for updating the x/ovm module
  // parameters. The authority is defined in the keeper.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse) {
    option (cosmos_proto.method_added_in) = "sge-network 1.7.1";
    option deprecated = true;
  }
}

// MsgPubkeysChangeProposalRequest is the type of request for modification of
// public keys.
message MsgSubmitPubkeysChangeProposalRequest {
  option (cosmos.msg.v1.signer) = "creator";

  // creator is the account address of the creator.
  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  // ticket is the jwt ticket data.
  string ticket = 2;
}

// MsgPubkeysChangeProposalResponse is the type of response for modification of
// public keys.
message MsgSubmitPubkeysChangeProposalResponse { bool success = 1; }

// MsgVotePubkeysChangeRequest is the type of request to vote on the
// modification of public keys proposal.
message MsgVotePubkeysChangeRequest {
  option (cosmos.msg.v1.signer) = "creator";

  // creator is the account address of the creator.
  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  // ticket is the jwt ticket data.
  string ticket = 2;
  // voter_key_index is the public key index of the voter in the current list
  // of public keys in the vault.
  uint32 voter_key_index = 3;
}

// MsgVotePubkeysChangeResponse is the type of response vote for public keys
// modification.
message MsgVotePubkeysChangeResponse { bool success = 1; }

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos_proto.message_added_in) = "sge-network 1.7.1";
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address that controls the module (defaults to x/gov unless
  // overwritten).
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // params defines the x/bet parameters.
  Params params = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {
  option (cosmos_proto.message_added_in) = "sge-network 1.7.1";
}
