syntax = "proto3";
package sgenetwork.sge.orderbook;

import "gogoproto/gogo.proto";

option go_package = "github.com/sge-network/sge/x/legacy/orderbook/types";

// OrderBookOddsExposure represents the exposures taken on odds.
message OrderBookOddsExposure {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  // order_book_uid is the universally unique identifier corresponding to the
  // order book.
  string order_book_uid = 1 [
    (gogoproto.customname) = "OrderBookUID",
    (gogoproto.jsontag) = "order_book_uid",
    json_name = "order_book_uid"
  ];

  // odds_uid is the universally unique identifier of the odds.
  string odds_uid = 2 [
    (gogoproto.customname) = "OddsUID",
    (gogoproto.jsontag) = "odds_uid",
    json_name = "odds_uid"
  ];

  // fulfillment_queue is the slice of indices of participations to be
  // fulfilled.
  repeated uint64 fulfillment_queue = 3
      [ (gogoproto.moretags) = "yaml:\"fulfillment_queue\"" ];
}

// ParticipationExposure represents the exposures taken on odds by
// participations.
message ParticipationExposure {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  // order_book_uid is the universally unique identifier of the order book that
  // the exposure is being set.
  string order_book_uid = 1 [
    (gogoproto.customname) = "OrderBookUID",
    (gogoproto.jsontag) = "order_book_uid",
    json_name = "order_book_uid"
  ];

  // odds_uid is the odds universal unique identifier that the exposure is being
  // set.
  string odds_uid = 2 [
    (gogoproto.customname) = "OddsUID",
    (gogoproto.jsontag) = "odds_uid",
    json_name = "odds_uid"
  ];

  // participation_index is the index of participation in the queue.
  uint64 participation_index = 3
      [ (gogoproto.moretags) = "yaml:\"participation_index\"" ];

  // exposure is the total exposure taken on given odds.
  string exposure = 4 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"exposure\""
  ];

  // bet_amount is the total bet amount corresponding to the exposure.
  string bet_amount = 5 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"bet_amount\""
  ];

  // is_fulfilled represents if the participation exposure is fulfilled or not.
  bool is_fulfilled = 6 [ (gogoproto.moretags) = "yaml:\"is_fulfilled\"" ];

  // round is the current round number in the queue.
  uint64 round = 7 [ (gogoproto.moretags) = "yaml:\"round\"" ];
}
