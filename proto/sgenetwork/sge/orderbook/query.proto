syntax = "proto3";
package sgenetwork.sge.orderbook;

import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "sgenetwork/sge/orderbook/exposure.proto";
import "sgenetwork/sge/orderbook/orderbook.proto";
import "sgenetwork/sge/orderbook/params.proto";
import "sgenetwork/sge/orderbook/participation.proto";

option go_package = "github.com/sge-network/sge/x/legacy/orderbook/types";

// Query defines the gRPC querier service.
service Query {
  // Params queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/sge/orderbook/params";
  }

  // OrderBooks queries all order books that match the given status.
  rpc OrderBooks(QueryOrderBooksRequest) returns (QueryOrderBooksResponse) {
    option (google.api.http).get = "/sge/orderbook/{status}";
  }

  // OrderBook queries order book info for given order book universal unique
  // identifier.
  rpc OrderBook(QueryOrderBookRequest) returns (QueryOrderBookResponse) {
    option (google.api.http).get = "/sge/orderbook/{order_book_uid}";
  }

  // OrderBookParticipations queries participation info for given order book.
  rpc OrderBookParticipations(QueryOrderBookParticipationsRequest)
      returns (QueryOrderBookParticipationsResponse) {
    option (google.api.http).get =
        "/sge/orderbook/{order_book_uid}/participations";
  }

  // OrderBookParticipation queries participation info for given order book and
  // participation index.
  rpc OrderBookParticipation(QueryOrderBookParticipationRequest)
      returns (QueryOrderBookParticipationResponse) {
    option (google.api.http).get =
        "/sge/orderbook/{order_book_uid}/participations/{participation_index}";
  }

  // OrderBookExposures queries exposures info for the given order book.
  rpc OrderBookExposures(QueryOrderBookExposuresRequest)
      returns (QueryOrderBookExposuresResponse) {
    option (google.api.http).get = "/sge/orderbook/{order_book_uid}/exposures";
  }

  // OrderBookExposure queries exposure info for the given order book and odds
  // universal unique identifier.
  rpc OrderBookExposure(QueryOrderBookExposureRequest)
      returns (QueryOrderBookExposureResponse) {
    option (google.api.http).get =
        "/sge/orderbook/{order_book_uid}/exposures/{odds_uid}";
  }

  // OrderBookParticipationExposures queries exposures info for given order book
  // participations.
  rpc OrderBookParticipationExposures(
      QueryOrderBookParticipationExposuresRequest)
      returns (QueryOrderBookParticipationExposuresResponse) {
    option (google.api.http).get =
        "/sge/orderbook/{order_book_uid}/participation-exposures";
  }

  // ParticipationExposures queries exposure info for given order book
  // participation.
  rpc ParticipationExposures(QueryParticipationExposuresRequest)
      returns (QueryParticipationExposuresResponse) {
    option (google.api.http).get =
        "/sge/orderbook/{order_book_uid}/participation-exposures/"
        "{participation_index}";
  }

  // HistoricalParticipationExposures queries historical exposures info for
  // the given order book participation.
  rpc HistoricalParticipationExposures(
      QueryHistoricalParticipationExposuresRequest)
      returns (QueryHistoricalParticipationExposuresResponse) {
    option (google.api.http).get =
        "/sge/orderbook/{order_book_uid}/historical-participation-exposures";
  }

  // ParticipationFulfilledBets queries fulfilled bets for given order book
  // participation.
  rpc ParticipationFulfilledBets(QueryParticipationFulfilledBetsRequest)
      returns (QueryParticipationFulfilledBetsResponse) {
    option (google.api.http).get =
        "/sge/orderbook/{order_book_uid}/participations/"
        "{participation_index}/fulfilled_bets";
  }

  // Queries list of settled Orderbook Participation items of a certain height.
  rpc SettledOrderBookParticipationsOfHeight(
      QuerySettledOrderBookParticipationsOfHeightRequest)
      returns (QuerySettledOrderBookParticipationsOfHeightResponse) {
    option (google.api.http).get =
        "/sge/orderbook/participations/settled/{block_height}";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method
// Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method
// Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

// QueryOrderBooksRequest is the request type for the Query/OrderBooks RPC
// method.
message QueryOrderBooksRequest {
  // status enables query for order books matching a given status.
  string status = 1;

  // pagination defines optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryOrderBooksResponse is the response type for the Query/OrderBooks RPC
// method.
message QueryOrderBooksResponse {
  // orderbooks contains all the queried order books.
  repeated OrderBook orderbooks = 1 [ (gogoproto.nullable) = false ];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryOrderBookRequest is the request type for the Query/OrderBook RPC method.
message QueryOrderBookRequest {
  // order_book_uid defines the order book uid to query for.
  string order_book_uid = 1;
}

// QueryOrderBookResponse is the response type for the Query/OrderBook RPC
// method.
message QueryOrderBookResponse {
  // orderBook defines the order book info.
  OrderBook order_book = 1 [ (gogoproto.nullable) = false ];
}

// QueryOrderBookParticipationsRequest is the request type for the
// Query/OrderBookParticipations RPC method
message QueryOrderBookParticipationsRequest {
  // order_book_uid defines the order book universal unique identifier to query
  // for.
  string order_book_uid = 1;

  // pagination defines optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryOrderBookParticipationsResponse is the response type for the
// Query/OrderBookParticipations RPC method
message QueryOrderBookParticipationsResponse {
  repeated OrderBookParticipation order_book_participations = 1
      [ (gogoproto.nullable) = false ];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryOrderBookParticipationRequest is the request type for the
// Query/OrderBookParticipation RPC method.
message QueryOrderBookParticipationRequest {
  // order_book_uid defines the order book universal unique identifier to query
  // for.
  string order_book_uid = 1;

  // participation_index defines the participation index to query for.
  uint64 participation_index = 2;
}

// QueryOrderBookParticipationResponse is the response type for the
// Query/OrderBookParticipation RPC method.
message QueryOrderBookParticipationResponse {
  // order_book_participation defines the book participation info.
  OrderBookParticipation order_book_participation = 1
      [ (gogoproto.nullable) = false ];
}

// QueryOrderBookExposuresRequest is the request type for the
// Query/OrderBookExposures RPC method
message QueryOrderBookExposuresRequest {
  // order_book_uid defines the order book uid to query for.
  string order_book_uid = 1;

  // pagination defines optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryOrderBookExposuresResponse is the response type for the
// Query/OrderBookExposures RPC method.
message QueryOrderBookExposuresResponse {
  repeated OrderBookOddsExposure order_book_exposures = 1
      [ (gogoproto.nullable) = false ];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryOrderBookExposureRequest is the request type for the
// Query/OrderBookExposure RPC method.
message QueryOrderBookExposureRequest {
  // order_book_uid defines the order book uid to query for.
  string order_book_uid = 1;

  // odds_uid defines the odds id to query for.
  string odds_uid = 2;
}

// QueryOrderBookExposureResponse is the response type for the
// Query/OrderBookExposure RPC method.
message QueryOrderBookExposureResponse {
  // order_book_exposure defines the order book exposure info.
  OrderBookOddsExposure order_book_exposure = 1
      [ (gogoproto.nullable) = false ];
}

// QueryOrderBookParticipationExposuresRequest is the request type for the
// Query/OrderBookParticipationExposures RPC method
message QueryOrderBookParticipationExposuresRequest {
  // order_book_uid defines the order book uid to query for.
  string order_book_uid = 1;

  // pagination defines optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryOrderBookParticipationExposuresResponse is the response type for the
// Query/OrderBookParticipationExposures RPC method.
message QueryOrderBookParticipationExposuresResponse {
  repeated ParticipationExposure participation_exposures = 1
      [ (gogoproto.nullable) = false ];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryParticipationExposuresRequest is the request type for the
// Query/ParticipationExposures RPC method.
message QueryParticipationExposuresRequest {
  // order_book_uid defines the order book id to query for.
  string order_book_uid = 1;

  // participation_index is the index of participation to query for.
  uint64 participation_index = 2;

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

// QueryParticipationExposureResponse is the response type for the
// Query/ParticipationExposures RPC method.
message QueryParticipationExposuresResponse {
  // participation_exposure defines the participation exposure info.
  repeated ParticipationExposure participation_exposures = 1
      [ (gogoproto.nullable) = false ];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryHistoricalParticipationExposuresRequest is the request type for the
// Query/HistoricalParticipationExposures RPC method
message QueryHistoricalParticipationExposuresRequest {
  // order_book_uid defines the order book uid to query for.
  string order_book_uid = 1;

  // pagination defines optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryHistoricalParticipationExposuresResponse is the response type for the
// Query/HistoricalParticipationExposures RPC method.
message QueryHistoricalParticipationExposuresResponse {
  repeated ParticipationExposure participation_exposures = 1
      [ (gogoproto.nullable) = false ];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryParticipationFulfilledBetsRequest is the request type for the
// Query/ParticipationFulfilledBets RPC method.
message QueryParticipationFulfilledBetsRequest {
  // order_book_uid defines the order book uid to query for.
  string order_book_uid = 1;

  // participation_index is the index of participation to query for.
  uint64 participation_index = 2;

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

// QueryParticipationFulfilledBetsResponse is the response type for the
// Query/ParticipationFulfilledBets RPC method.
message QueryParticipationFulfilledBetsResponse {
  // participation_bets is the bets of the participation.
  repeated ParticipationBetPair participation_bets = 1
      [ (gogoproto.nullable) = false ];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QuerySettledOrderBookParticipationsOfHeightRequest is the request type for
// the settled orderbook participations of a certain height list query.
message QuerySettledOrderBookParticipationsOfHeightRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
  int64 block_height = 2;
}

// QuerySettledOrderBookParticipationsOfHeightResponse is the response type for
// the settled orderbook participations of a certain height list query.
message QuerySettledOrderBookParticipationsOfHeightResponse {
  repeated OrderBookParticipation participations = 1
      [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
