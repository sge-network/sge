syntax = "proto3";
package sgenetwork.sge.house;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/sge-network/sge/x/legacy/house/types";

// Deposit represents the deposit against a market held by an account.
message Deposit {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  // creator is the bech32-encoded address of the depositor.
  string creator = 1 [ (gogoproto.moretags) = "yaml:\"creator\"" ];

  // creator is the bech32-encoded address of the depositor.
  string depositor_address = 2 [
    (gogoproto.moretags) = "yaml:\"depositor_address\"",
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];

  // market_uid is the uid of market/order book against which deposit is being
  // made.
  string market_uid = 3 [
    (gogoproto.customname) = "MarketUID",
    (gogoproto.jsontag) = "market_uid",
    json_name = "market_uid"
  ];

  // participation_index is the index corresponding to the order book
  // participation
  uint64 participation_index = 4
      [ (gogoproto.moretags) = "yaml:\"participation_index\"" ];

  // amount is the amount being deposited on an order book to be a house
  string amount = 5 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"amount\""
  ];

  // withdrawal_count is the total count of the withdrawals from an order book
  uint64 withdrawal_count = 6 [ (gogoproto.moretags) = "yaml:\"withdrawals\"" ];

  // total_withdrawal_amount is the total amount withdrawn from the liquidity
  // provided
  string total_withdrawal_amount = 7 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"total_withdrawal_amount\""
  ];
}
