syntax = "proto3";
package sgenetwork.sge.bet;
import "gogoproto/gogo.proto";
import "sge/bet/bet_place_fields.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/sge-network/sge/x/bet/types";

// Msg defines the Msg service.
service Msg {

  // PlaceBet defines a method to place a bet with the given data
  rpc PlaceBet(MsgPlaceBet) returns (MsgPlaceBetResponse);

  // SettleBet defines a method to settle the given bet
  rpc SettleBet(MsgSettleBet) returns (MsgSettleBetResponse);
}

// MsgPlaceBet defines a message to place a bet with the given data
message MsgPlaceBet {
  // creator is the bettor address
  string creator = 1;

  // bet is the info of bet to place
  BetPlaceFields bet = 2;
}

// MsgPlaceBetResponse is the returning value in the response of MsgPlaceBet request
message MsgPlaceBetResponse {
  string error = 1;
  BetPlaceFields bet = 2;
}

// MsgSettleBet defines a message to settle the given bet
message MsgSettleBet {
  // creator is the bettor address
  string creator = 1;

  // bet_uid is the unique uuid of the bet to settle
  string bet_uid = 2 [(gogoproto.customname) = "BetUID" ,(gogoproto.jsontag) = "bet_uid", json_name = "bet_uid"];
}

// MsgSettleBetResponse is the returning value in the response of MsgSettleBet request
message MsgSettleBetResponse {
  string error = 1;
  string bet_uid = 2 [(gogoproto.customname) = "BetUID" ,(gogoproto.jsontag) = "bet_uid", json_name = "bet_uid"];
}
