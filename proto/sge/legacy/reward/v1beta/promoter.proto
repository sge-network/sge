syntax = "proto3";
package sge.legacy.reward.v1beta;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "sge/legacy/reward/v1beta/reward.proto";

option go_package = "github.com/sge-network/sge/x/legacy/reward/types";

// Promoter is type for defining the reward promoter properties and
// configuration.
message Promoter {
  // creator is the address of promoter.
  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // uid is the unique identifier of a promoter.
  string uid = 2 [
    (gogoproto.customname) = "UID",
    (gogoproto.jsontag) = "uid",
    json_name = "uid"
  ];

  // addresses is the list of account addresses of promoter.
  repeated string addresses = 3;

  // conf is the configurations of the current promoter for the reward grant.
  PromoterConf conf = 4 [ (gogoproto.nullable) = false ];
}

// PromoterConf is type for defining the promoter specific configurations.
message PromoterConf {
  // category_cap is the maximium allowed cap for each category.
  repeated CategoryCap category_cap = 1 [ (gogoproto.nullable) = false ];
}

// CategoryCap is type to define category and its maximum cap.
message CategoryCap {
  RewardCategory category = 1;
  int32 cap_per_acc = 2;
}

// PromoterByAddress is type for defining the promoter by address.
message PromoterByAddress {
  // promoter_uid is the unique identifier of a certain promoter.
  string promoter_uid = 1 [
    (gogoproto.customname) = "PromoterUID",
    (gogoproto.jsontag) = "promoter_uid",
    json_name = "promoter_uid"
  ];
  // address is the address of the promoter account.
  string address = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}
