syntax = "proto3";
package sgenetwork.sge.orderbook;

import "gogoproto/gogo.proto";

option go_package = "github.com/sge-network/sge/x/orderbook/types";

// BookParticipation represents the participants of an order book.
message BookParticipation {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  // index is the id of initial participation queue
  uint64 index = 1 [ (gogoproto.moretags) = "yaml:\"index\"" ];

  // book_uid is the unique identifier corresponding to the book
  string book_uid = 2 [
    (gogoproto.customname) = "BookUID",
    (gogoproto.jsontag) = "book_uid",
    json_name = "book_uid"
  ];

  // participant_address is the bech32-encoded address of the participant.
  string participant_address = 3
      [ (gogoproto.moretags) = "yaml:\"participant_address\"" ];

  // if participation is a module account
  bool is_module_account = 4
      [ (gogoproto.moretags) = "yaml:\"is_module_account\"" ];
  

  // liquidity is the total initial liquidity provided
  string liquidity = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"liquidity\""
  ];

  // current round liquidity is the liquidity provided for current round
  string current_round_liquidity = 6 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"current_round_liquidity\""
  ];

  uint64 exposures_not_filled = 7
      [ (gogoproto.moretags) = "yaml:\"exposures_not_filled\"" ];
  ;

  // total_bet_amount is the total bet amount corresponding to all exposure
  string total_bet_amount = 8 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"total_bet_amount\""
  ];

  // current_round_total_bet_amount is the total bet amount corresponding to all
  // exposure
  string current_round_total_bet_amount = 9 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"current_round_total_bet_amount\""
  ];

  // max_loss is the total bet amount corresponding to all exposure
  string max_loss = 10 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"max_loss\""
  ];

  // current_round_max_loss is the total bet amount corresponding to all
  // exposure
  string current_round_max_loss = 11 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"current_round_max_loss\""
  ];

  // current_round_max_loss_odds_uid is the total bet amount corresponding to
  // all exposure
  string current_round_max_loss_odds_uid = 12 [
    (gogoproto.customname) = "CurrentRoundMaxLossOddsUID",
    (gogoproto.jsontag) = "current_round_max_loss_odds_uid",
    json_name = "current_round_max_loss_odds_uid",
    (gogoproto.moretags) = "yaml:\"current_round_max_loss_odds_uid\""
  ];

  // actual_profit is the actual profit
  string actual_profit = 13 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"actual_profit\""
  ];

  // if participation is settled
  bool is_settled = 14 [ (gogoproto.moretags) = "yaml:\"is_settled\"" ];
  ;
}

// ParticipationBetPair represents the book participation and bet bond
message ParticipationBetPair {
  // book_uid is the unique identifier corresponding to the book
  string book_uid = 1 [
    (gogoproto.customname) = "BookUID",
    (gogoproto.jsontag) = "book_uid",
    json_name = "book_uid"
  ];

  // participation_index is the count of initial participation queue
  uint64 participation_index = 2
      [ (gogoproto.moretags) = "yaml:\"participation_index\"" ];

  // bet_uid is bet's uuid
  string bet_uid = 3 [
    (gogoproto.customname) = "BetUID",
    (gogoproto.jsontag) = "bet_uid",
    json_name = "bet_uid"
  ];
}
