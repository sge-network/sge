// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package rewardv1beta

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_Reward               protoreflect.MessageDescriptor
	fd_Reward_uid           protoreflect.FieldDescriptor
	fd_Reward_creator       protoreflect.FieldDescriptor
	fd_Reward_receiver      protoreflect.FieldDescriptor
	fd_Reward_campaign_uid  protoreflect.FieldDescriptor
	fd_Reward_reward_amount protoreflect.FieldDescriptor
	fd_Reward_source_uid    protoreflect.FieldDescriptor
	fd_Reward_meta          protoreflect.FieldDescriptor
)

func init() {
	file_sge_legacy_reward_v1beta_reward_proto_init()
	md_Reward = File_sge_legacy_reward_v1beta_reward_proto.Messages().ByName("Reward")
	fd_Reward_uid = md_Reward.Fields().ByName("uid")
	fd_Reward_creator = md_Reward.Fields().ByName("creator")
	fd_Reward_receiver = md_Reward.Fields().ByName("receiver")
	fd_Reward_campaign_uid = md_Reward.Fields().ByName("campaign_uid")
	fd_Reward_reward_amount = md_Reward.Fields().ByName("reward_amount")
	fd_Reward_source_uid = md_Reward.Fields().ByName("source_uid")
	fd_Reward_meta = md_Reward.Fields().ByName("meta")
}

var _ protoreflect.Message = (*fastReflection_Reward)(nil)

type fastReflection_Reward Reward

func (x *Reward) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Reward)(x)
}

func (x *Reward) slowProtoReflect() protoreflect.Message {
	mi := &file_sge_legacy_reward_v1beta_reward_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Reward_messageType fastReflection_Reward_messageType
var _ protoreflect.MessageType = fastReflection_Reward_messageType{}

type fastReflection_Reward_messageType struct{}

func (x fastReflection_Reward_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Reward)(nil)
}
func (x fastReflection_Reward_messageType) New() protoreflect.Message {
	return new(fastReflection_Reward)
}
func (x fastReflection_Reward_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Reward
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Reward) Descriptor() protoreflect.MessageDescriptor {
	return md_Reward
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Reward) Type() protoreflect.MessageType {
	return _fastReflection_Reward_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Reward) New() protoreflect.Message {
	return new(fastReflection_Reward)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Reward) Interface() protoreflect.ProtoMessage {
	return (*Reward)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Reward) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Uid != "" {
		value := protoreflect.ValueOfString(x.Uid)
		if !f(fd_Reward_uid, value) {
			return
		}
	}
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_Reward_creator, value) {
			return
		}
	}
	if x.Receiver != "" {
		value := protoreflect.ValueOfString(x.Receiver)
		if !f(fd_Reward_receiver, value) {
			return
		}
	}
	if x.CampaignUid != "" {
		value := protoreflect.ValueOfString(x.CampaignUid)
		if !f(fd_Reward_campaign_uid, value) {
			return
		}
	}
	if x.RewardAmount != nil {
		value := protoreflect.ValueOfMessage(x.RewardAmount.ProtoReflect())
		if !f(fd_Reward_reward_amount, value) {
			return
		}
	}
	if x.SourceUid != "" {
		value := protoreflect.ValueOfString(x.SourceUid)
		if !f(fd_Reward_source_uid, value) {
			return
		}
	}
	if x.Meta != "" {
		value := protoreflect.ValueOfString(x.Meta)
		if !f(fd_Reward_meta, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Reward) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sge.legacy.reward.v1beta.Reward.uid":
		return x.Uid != ""
	case "sge.legacy.reward.v1beta.Reward.creator":
		return x.Creator != ""
	case "sge.legacy.reward.v1beta.Reward.receiver":
		return x.Receiver != ""
	case "sge.legacy.reward.v1beta.Reward.campaign_uid":
		return x.CampaignUid != ""
	case "sge.legacy.reward.v1beta.Reward.reward_amount":
		return x.RewardAmount != nil
	case "sge.legacy.reward.v1beta.Reward.source_uid":
		return x.SourceUid != ""
	case "sge.legacy.reward.v1beta.Reward.meta":
		return x.Meta != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sge.legacy.reward.v1beta.Reward"))
		}
		panic(fmt.Errorf("message sge.legacy.reward.v1beta.Reward does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Reward) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sge.legacy.reward.v1beta.Reward.uid":
		x.Uid = ""
	case "sge.legacy.reward.v1beta.Reward.creator":
		x.Creator = ""
	case "sge.legacy.reward.v1beta.Reward.receiver":
		x.Receiver = ""
	case "sge.legacy.reward.v1beta.Reward.campaign_uid":
		x.CampaignUid = ""
	case "sge.legacy.reward.v1beta.Reward.reward_amount":
		x.RewardAmount = nil
	case "sge.legacy.reward.v1beta.Reward.source_uid":
		x.SourceUid = ""
	case "sge.legacy.reward.v1beta.Reward.meta":
		x.Meta = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sge.legacy.reward.v1beta.Reward"))
		}
		panic(fmt.Errorf("message sge.legacy.reward.v1beta.Reward does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Reward) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sge.legacy.reward.v1beta.Reward.uid":
		value := x.Uid
		return protoreflect.ValueOfString(value)
	case "sge.legacy.reward.v1beta.Reward.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "sge.legacy.reward.v1beta.Reward.receiver":
		value := x.Receiver
		return protoreflect.ValueOfString(value)
	case "sge.legacy.reward.v1beta.Reward.campaign_uid":
		value := x.CampaignUid
		return protoreflect.ValueOfString(value)
	case "sge.legacy.reward.v1beta.Reward.reward_amount":
		value := x.RewardAmount
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "sge.legacy.reward.v1beta.Reward.source_uid":
		value := x.SourceUid
		return protoreflect.ValueOfString(value)
	case "sge.legacy.reward.v1beta.Reward.meta":
		value := x.Meta
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sge.legacy.reward.v1beta.Reward"))
		}
		panic(fmt.Errorf("message sge.legacy.reward.v1beta.Reward does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Reward) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sge.legacy.reward.v1beta.Reward.uid":
		x.Uid = value.Interface().(string)
	case "sge.legacy.reward.v1beta.Reward.creator":
		x.Creator = value.Interface().(string)
	case "sge.legacy.reward.v1beta.Reward.receiver":
		x.Receiver = value.Interface().(string)
	case "sge.legacy.reward.v1beta.Reward.campaign_uid":
		x.CampaignUid = value.Interface().(string)
	case "sge.legacy.reward.v1beta.Reward.reward_amount":
		x.RewardAmount = value.Message().Interface().(*RewardAmount)
	case "sge.legacy.reward.v1beta.Reward.source_uid":
		x.SourceUid = value.Interface().(string)
	case "sge.legacy.reward.v1beta.Reward.meta":
		x.Meta = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sge.legacy.reward.v1beta.Reward"))
		}
		panic(fmt.Errorf("message sge.legacy.reward.v1beta.Reward does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Reward) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sge.legacy.reward.v1beta.Reward.reward_amount":
		if x.RewardAmount == nil {
			x.RewardAmount = new(RewardAmount)
		}
		return protoreflect.ValueOfMessage(x.RewardAmount.ProtoReflect())
	case "sge.legacy.reward.v1beta.Reward.uid":
		panic(fmt.Errorf("field uid of message sge.legacy.reward.v1beta.Reward is not mutable"))
	case "sge.legacy.reward.v1beta.Reward.creator":
		panic(fmt.Errorf("field creator of message sge.legacy.reward.v1beta.Reward is not mutable"))
	case "sge.legacy.reward.v1beta.Reward.receiver":
		panic(fmt.Errorf("field receiver of message sge.legacy.reward.v1beta.Reward is not mutable"))
	case "sge.legacy.reward.v1beta.Reward.campaign_uid":
		panic(fmt.Errorf("field campaign_uid of message sge.legacy.reward.v1beta.Reward is not mutable"))
	case "sge.legacy.reward.v1beta.Reward.source_uid":
		panic(fmt.Errorf("field source_uid of message sge.legacy.reward.v1beta.Reward is not mutable"))
	case "sge.legacy.reward.v1beta.Reward.meta":
		panic(fmt.Errorf("field meta of message sge.legacy.reward.v1beta.Reward is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sge.legacy.reward.v1beta.Reward"))
		}
		panic(fmt.Errorf("message sge.legacy.reward.v1beta.Reward does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Reward) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sge.legacy.reward.v1beta.Reward.uid":
		return protoreflect.ValueOfString("")
	case "sge.legacy.reward.v1beta.Reward.creator":
		return protoreflect.ValueOfString("")
	case "sge.legacy.reward.v1beta.Reward.receiver":
		return protoreflect.ValueOfString("")
	case "sge.legacy.reward.v1beta.Reward.campaign_uid":
		return protoreflect.ValueOfString("")
	case "sge.legacy.reward.v1beta.Reward.reward_amount":
		m := new(RewardAmount)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "sge.legacy.reward.v1beta.Reward.source_uid":
		return protoreflect.ValueOfString("")
	case "sge.legacy.reward.v1beta.Reward.meta":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sge.legacy.reward.v1beta.Reward"))
		}
		panic(fmt.Errorf("message sge.legacy.reward.v1beta.Reward does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Reward) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sge.legacy.reward.v1beta.Reward", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Reward) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Reward) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Reward) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Reward) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Reward)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Uid)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Receiver)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CampaignUid)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.RewardAmount != nil {
			l = options.Size(x.RewardAmount)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.SourceUid)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Meta)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Reward)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Meta) > 0 {
			i -= len(x.Meta)
			copy(dAtA[i:], x.Meta)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Meta)))
			i--
			dAtA[i] = 0x62
		}
		if len(x.SourceUid) > 0 {
			i -= len(x.SourceUid)
			copy(dAtA[i:], x.SourceUid)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SourceUid)))
			i--
			dAtA[i] = 0x42
		}
		if x.RewardAmount != nil {
			encoded, err := options.Marshal(x.RewardAmount)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.CampaignUid) > 0 {
			i -= len(x.CampaignUid)
			copy(dAtA[i:], x.CampaignUid)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CampaignUid)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Receiver) > 0 {
			i -= len(x.Receiver)
			copy(dAtA[i:], x.Receiver)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Receiver)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Uid) > 0 {
			i -= len(x.Uid)
			copy(dAtA[i:], x.Uid)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Uid)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Reward)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Reward: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Reward: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Uid = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Receiver = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CampaignUid", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CampaignUid = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardAmount", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.RewardAmount == nil {
					x.RewardAmount = &RewardAmount{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.RewardAmount); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SourceUid", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SourceUid = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Meta", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Meta = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_RewardAmount                         protoreflect.MessageDescriptor
	fd_RewardAmount_main_account_amount     protoreflect.FieldDescriptor
	fd_RewardAmount_subaccount_amount       protoreflect.FieldDescriptor
	fd_RewardAmount_unlock_period           protoreflect.FieldDescriptor
	fd_RewardAmount_main_account_percentage protoreflect.FieldDescriptor
	fd_RewardAmount_subaccount_percentage   protoreflect.FieldDescriptor
)

func init() {
	file_sge_legacy_reward_v1beta_reward_proto_init()
	md_RewardAmount = File_sge_legacy_reward_v1beta_reward_proto.Messages().ByName("RewardAmount")
	fd_RewardAmount_main_account_amount = md_RewardAmount.Fields().ByName("main_account_amount")
	fd_RewardAmount_subaccount_amount = md_RewardAmount.Fields().ByName("subaccount_amount")
	fd_RewardAmount_unlock_period = md_RewardAmount.Fields().ByName("unlock_period")
	fd_RewardAmount_main_account_percentage = md_RewardAmount.Fields().ByName("main_account_percentage")
	fd_RewardAmount_subaccount_percentage = md_RewardAmount.Fields().ByName("subaccount_percentage")
}

var _ protoreflect.Message = (*fastReflection_RewardAmount)(nil)

type fastReflection_RewardAmount RewardAmount

func (x *RewardAmount) ProtoReflect() protoreflect.Message {
	return (*fastReflection_RewardAmount)(x)
}

func (x *RewardAmount) slowProtoReflect() protoreflect.Message {
	mi := &file_sge_legacy_reward_v1beta_reward_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_RewardAmount_messageType fastReflection_RewardAmount_messageType
var _ protoreflect.MessageType = fastReflection_RewardAmount_messageType{}

type fastReflection_RewardAmount_messageType struct{}

func (x fastReflection_RewardAmount_messageType) Zero() protoreflect.Message {
	return (*fastReflection_RewardAmount)(nil)
}
func (x fastReflection_RewardAmount_messageType) New() protoreflect.Message {
	return new(fastReflection_RewardAmount)
}
func (x fastReflection_RewardAmount_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_RewardAmount
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_RewardAmount) Descriptor() protoreflect.MessageDescriptor {
	return md_RewardAmount
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_RewardAmount) Type() protoreflect.MessageType {
	return _fastReflection_RewardAmount_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_RewardAmount) New() protoreflect.Message {
	return new(fastReflection_RewardAmount)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_RewardAmount) Interface() protoreflect.ProtoMessage {
	return (*RewardAmount)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_RewardAmount) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.MainAccountAmount != "" {
		value := protoreflect.ValueOfString(x.MainAccountAmount)
		if !f(fd_RewardAmount_main_account_amount, value) {
			return
		}
	}
	if x.SubaccountAmount != "" {
		value := protoreflect.ValueOfString(x.SubaccountAmount)
		if !f(fd_RewardAmount_subaccount_amount, value) {
			return
		}
	}
	if x.UnlockPeriod != uint64(0) {
		value := protoreflect.ValueOfUint64(x.UnlockPeriod)
		if !f(fd_RewardAmount_unlock_period, value) {
			return
		}
	}
	if x.MainAccountPercentage != "" {
		value := protoreflect.ValueOfString(x.MainAccountPercentage)
		if !f(fd_RewardAmount_main_account_percentage, value) {
			return
		}
	}
	if x.SubaccountPercentage != "" {
		value := protoreflect.ValueOfString(x.SubaccountPercentage)
		if !f(fd_RewardAmount_subaccount_percentage, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_RewardAmount) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sge.legacy.reward.v1beta.RewardAmount.main_account_amount":
		return x.MainAccountAmount != ""
	case "sge.legacy.reward.v1beta.RewardAmount.subaccount_amount":
		return x.SubaccountAmount != ""
	case "sge.legacy.reward.v1beta.RewardAmount.unlock_period":
		return x.UnlockPeriod != uint64(0)
	case "sge.legacy.reward.v1beta.RewardAmount.main_account_percentage":
		return x.MainAccountPercentage != ""
	case "sge.legacy.reward.v1beta.RewardAmount.subaccount_percentage":
		return x.SubaccountPercentage != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sge.legacy.reward.v1beta.RewardAmount"))
		}
		panic(fmt.Errorf("message sge.legacy.reward.v1beta.RewardAmount does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RewardAmount) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sge.legacy.reward.v1beta.RewardAmount.main_account_amount":
		x.MainAccountAmount = ""
	case "sge.legacy.reward.v1beta.RewardAmount.subaccount_amount":
		x.SubaccountAmount = ""
	case "sge.legacy.reward.v1beta.RewardAmount.unlock_period":
		x.UnlockPeriod = uint64(0)
	case "sge.legacy.reward.v1beta.RewardAmount.main_account_percentage":
		x.MainAccountPercentage = ""
	case "sge.legacy.reward.v1beta.RewardAmount.subaccount_percentage":
		x.SubaccountPercentage = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sge.legacy.reward.v1beta.RewardAmount"))
		}
		panic(fmt.Errorf("message sge.legacy.reward.v1beta.RewardAmount does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_RewardAmount) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sge.legacy.reward.v1beta.RewardAmount.main_account_amount":
		value := x.MainAccountAmount
		return protoreflect.ValueOfString(value)
	case "sge.legacy.reward.v1beta.RewardAmount.subaccount_amount":
		value := x.SubaccountAmount
		return protoreflect.ValueOfString(value)
	case "sge.legacy.reward.v1beta.RewardAmount.unlock_period":
		value := x.UnlockPeriod
		return protoreflect.ValueOfUint64(value)
	case "sge.legacy.reward.v1beta.RewardAmount.main_account_percentage":
		value := x.MainAccountPercentage
		return protoreflect.ValueOfString(value)
	case "sge.legacy.reward.v1beta.RewardAmount.subaccount_percentage":
		value := x.SubaccountPercentage
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sge.legacy.reward.v1beta.RewardAmount"))
		}
		panic(fmt.Errorf("message sge.legacy.reward.v1beta.RewardAmount does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RewardAmount) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sge.legacy.reward.v1beta.RewardAmount.main_account_amount":
		x.MainAccountAmount = value.Interface().(string)
	case "sge.legacy.reward.v1beta.RewardAmount.subaccount_amount":
		x.SubaccountAmount = value.Interface().(string)
	case "sge.legacy.reward.v1beta.RewardAmount.unlock_period":
		x.UnlockPeriod = value.Uint()
	case "sge.legacy.reward.v1beta.RewardAmount.main_account_percentage":
		x.MainAccountPercentage = value.Interface().(string)
	case "sge.legacy.reward.v1beta.RewardAmount.subaccount_percentage":
		x.SubaccountPercentage = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sge.legacy.reward.v1beta.RewardAmount"))
		}
		panic(fmt.Errorf("message sge.legacy.reward.v1beta.RewardAmount does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RewardAmount) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sge.legacy.reward.v1beta.RewardAmount.main_account_amount":
		panic(fmt.Errorf("field main_account_amount of message sge.legacy.reward.v1beta.RewardAmount is not mutable"))
	case "sge.legacy.reward.v1beta.RewardAmount.subaccount_amount":
		panic(fmt.Errorf("field subaccount_amount of message sge.legacy.reward.v1beta.RewardAmount is not mutable"))
	case "sge.legacy.reward.v1beta.RewardAmount.unlock_period":
		panic(fmt.Errorf("field unlock_period of message sge.legacy.reward.v1beta.RewardAmount is not mutable"))
	case "sge.legacy.reward.v1beta.RewardAmount.main_account_percentage":
		panic(fmt.Errorf("field main_account_percentage of message sge.legacy.reward.v1beta.RewardAmount is not mutable"))
	case "sge.legacy.reward.v1beta.RewardAmount.subaccount_percentage":
		panic(fmt.Errorf("field subaccount_percentage of message sge.legacy.reward.v1beta.RewardAmount is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sge.legacy.reward.v1beta.RewardAmount"))
		}
		panic(fmt.Errorf("message sge.legacy.reward.v1beta.RewardAmount does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_RewardAmount) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sge.legacy.reward.v1beta.RewardAmount.main_account_amount":
		return protoreflect.ValueOfString("")
	case "sge.legacy.reward.v1beta.RewardAmount.subaccount_amount":
		return protoreflect.ValueOfString("")
	case "sge.legacy.reward.v1beta.RewardAmount.unlock_period":
		return protoreflect.ValueOfUint64(uint64(0))
	case "sge.legacy.reward.v1beta.RewardAmount.main_account_percentage":
		return protoreflect.ValueOfString("")
	case "sge.legacy.reward.v1beta.RewardAmount.subaccount_percentage":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sge.legacy.reward.v1beta.RewardAmount"))
		}
		panic(fmt.Errorf("message sge.legacy.reward.v1beta.RewardAmount does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_RewardAmount) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sge.legacy.reward.v1beta.RewardAmount", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_RewardAmount) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RewardAmount) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_RewardAmount) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_RewardAmount) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*RewardAmount)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.MainAccountAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.SubaccountAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.UnlockPeriod != 0 {
			n += 1 + runtime.Sov(uint64(x.UnlockPeriod))
		}
		l = len(x.MainAccountPercentage)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.SubaccountPercentage)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*RewardAmount)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.SubaccountPercentage) > 0 {
			i -= len(x.SubaccountPercentage)
			copy(dAtA[i:], x.SubaccountPercentage)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SubaccountPercentage)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.MainAccountPercentage) > 0 {
			i -= len(x.MainAccountPercentage)
			copy(dAtA[i:], x.MainAccountPercentage)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MainAccountPercentage)))
			i--
			dAtA[i] = 0x22
		}
		if x.UnlockPeriod != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.UnlockPeriod))
			i--
			dAtA[i] = 0x18
		}
		if len(x.SubaccountAmount) > 0 {
			i -= len(x.SubaccountAmount)
			copy(dAtA[i:], x.SubaccountAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SubaccountAmount)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.MainAccountAmount) > 0 {
			i -= len(x.MainAccountAmount)
			copy(dAtA[i:], x.MainAccountAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MainAccountAmount)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*RewardAmount)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RewardAmount: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RewardAmount: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MainAccountAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MainAccountAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SubaccountAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SubaccountAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UnlockPeriod", wireType)
				}
				x.UnlockPeriod = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.UnlockPeriod |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MainAccountPercentage", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MainAccountPercentage = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SubaccountPercentage", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SubaccountPercentage = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_RewardByCategory                 protoreflect.MessageDescriptor
	fd_RewardByCategory_uid             protoreflect.FieldDescriptor
	fd_RewardByCategory_addr            protoreflect.FieldDescriptor
	fd_RewardByCategory_reward_category protoreflect.FieldDescriptor
)

func init() {
	file_sge_legacy_reward_v1beta_reward_proto_init()
	md_RewardByCategory = File_sge_legacy_reward_v1beta_reward_proto.Messages().ByName("RewardByCategory")
	fd_RewardByCategory_uid = md_RewardByCategory.Fields().ByName("uid")
	fd_RewardByCategory_addr = md_RewardByCategory.Fields().ByName("addr")
	fd_RewardByCategory_reward_category = md_RewardByCategory.Fields().ByName("reward_category")
}

var _ protoreflect.Message = (*fastReflection_RewardByCategory)(nil)

type fastReflection_RewardByCategory RewardByCategory

func (x *RewardByCategory) ProtoReflect() protoreflect.Message {
	return (*fastReflection_RewardByCategory)(x)
}

func (x *RewardByCategory) slowProtoReflect() protoreflect.Message {
	mi := &file_sge_legacy_reward_v1beta_reward_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_RewardByCategory_messageType fastReflection_RewardByCategory_messageType
var _ protoreflect.MessageType = fastReflection_RewardByCategory_messageType{}

type fastReflection_RewardByCategory_messageType struct{}

func (x fastReflection_RewardByCategory_messageType) Zero() protoreflect.Message {
	return (*fastReflection_RewardByCategory)(nil)
}
func (x fastReflection_RewardByCategory_messageType) New() protoreflect.Message {
	return new(fastReflection_RewardByCategory)
}
func (x fastReflection_RewardByCategory_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_RewardByCategory
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_RewardByCategory) Descriptor() protoreflect.MessageDescriptor {
	return md_RewardByCategory
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_RewardByCategory) Type() protoreflect.MessageType {
	return _fastReflection_RewardByCategory_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_RewardByCategory) New() protoreflect.Message {
	return new(fastReflection_RewardByCategory)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_RewardByCategory) Interface() protoreflect.ProtoMessage {
	return (*RewardByCategory)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_RewardByCategory) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Uid != "" {
		value := protoreflect.ValueOfString(x.Uid)
		if !f(fd_RewardByCategory_uid, value) {
			return
		}
	}
	if x.Addr != "" {
		value := protoreflect.ValueOfString(x.Addr)
		if !f(fd_RewardByCategory_addr, value) {
			return
		}
	}
	if x.RewardCategory != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.RewardCategory))
		if !f(fd_RewardByCategory_reward_category, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_RewardByCategory) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sge.legacy.reward.v1beta.RewardByCategory.uid":
		return x.Uid != ""
	case "sge.legacy.reward.v1beta.RewardByCategory.addr":
		return x.Addr != ""
	case "sge.legacy.reward.v1beta.RewardByCategory.reward_category":
		return x.RewardCategory != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sge.legacy.reward.v1beta.RewardByCategory"))
		}
		panic(fmt.Errorf("message sge.legacy.reward.v1beta.RewardByCategory does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RewardByCategory) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sge.legacy.reward.v1beta.RewardByCategory.uid":
		x.Uid = ""
	case "sge.legacy.reward.v1beta.RewardByCategory.addr":
		x.Addr = ""
	case "sge.legacy.reward.v1beta.RewardByCategory.reward_category":
		x.RewardCategory = 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sge.legacy.reward.v1beta.RewardByCategory"))
		}
		panic(fmt.Errorf("message sge.legacy.reward.v1beta.RewardByCategory does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_RewardByCategory) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sge.legacy.reward.v1beta.RewardByCategory.uid":
		value := x.Uid
		return protoreflect.ValueOfString(value)
	case "sge.legacy.reward.v1beta.RewardByCategory.addr":
		value := x.Addr
		return protoreflect.ValueOfString(value)
	case "sge.legacy.reward.v1beta.RewardByCategory.reward_category":
		value := x.RewardCategory
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sge.legacy.reward.v1beta.RewardByCategory"))
		}
		panic(fmt.Errorf("message sge.legacy.reward.v1beta.RewardByCategory does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RewardByCategory) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sge.legacy.reward.v1beta.RewardByCategory.uid":
		x.Uid = value.Interface().(string)
	case "sge.legacy.reward.v1beta.RewardByCategory.addr":
		x.Addr = value.Interface().(string)
	case "sge.legacy.reward.v1beta.RewardByCategory.reward_category":
		x.RewardCategory = (RewardCategory)(value.Enum())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sge.legacy.reward.v1beta.RewardByCategory"))
		}
		panic(fmt.Errorf("message sge.legacy.reward.v1beta.RewardByCategory does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RewardByCategory) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sge.legacy.reward.v1beta.RewardByCategory.uid":
		panic(fmt.Errorf("field uid of message sge.legacy.reward.v1beta.RewardByCategory is not mutable"))
	case "sge.legacy.reward.v1beta.RewardByCategory.addr":
		panic(fmt.Errorf("field addr of message sge.legacy.reward.v1beta.RewardByCategory is not mutable"))
	case "sge.legacy.reward.v1beta.RewardByCategory.reward_category":
		panic(fmt.Errorf("field reward_category of message sge.legacy.reward.v1beta.RewardByCategory is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sge.legacy.reward.v1beta.RewardByCategory"))
		}
		panic(fmt.Errorf("message sge.legacy.reward.v1beta.RewardByCategory does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_RewardByCategory) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sge.legacy.reward.v1beta.RewardByCategory.uid":
		return protoreflect.ValueOfString("")
	case "sge.legacy.reward.v1beta.RewardByCategory.addr":
		return protoreflect.ValueOfString("")
	case "sge.legacy.reward.v1beta.RewardByCategory.reward_category":
		return protoreflect.ValueOfEnum(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sge.legacy.reward.v1beta.RewardByCategory"))
		}
		panic(fmt.Errorf("message sge.legacy.reward.v1beta.RewardByCategory does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_RewardByCategory) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sge.legacy.reward.v1beta.RewardByCategory", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_RewardByCategory) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RewardByCategory) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_RewardByCategory) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_RewardByCategory) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*RewardByCategory)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Uid)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Addr)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.RewardCategory != 0 {
			n += 1 + runtime.Sov(uint64(x.RewardCategory))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*RewardByCategory)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.RewardCategory != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RewardCategory))
			i--
			dAtA[i] = 0x18
		}
		if len(x.Addr) > 0 {
			i -= len(x.Addr)
			copy(dAtA[i:], x.Addr)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Addr)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Uid) > 0 {
			i -= len(x.Uid)
			copy(dAtA[i:], x.Uid)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Uid)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*RewardByCategory)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RewardByCategory: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RewardByCategory: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Uid = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Addr", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Addr = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardCategory", wireType)
				}
				x.RewardCategory = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RewardCategory |= RewardCategory(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_RewardByCampaign              protoreflect.MessageDescriptor
	fd_RewardByCampaign_uid          protoreflect.FieldDescriptor
	fd_RewardByCampaign_campaign_uid protoreflect.FieldDescriptor
)

func init() {
	file_sge_legacy_reward_v1beta_reward_proto_init()
	md_RewardByCampaign = File_sge_legacy_reward_v1beta_reward_proto.Messages().ByName("RewardByCampaign")
	fd_RewardByCampaign_uid = md_RewardByCampaign.Fields().ByName("uid")
	fd_RewardByCampaign_campaign_uid = md_RewardByCampaign.Fields().ByName("campaign_uid")
}

var _ protoreflect.Message = (*fastReflection_RewardByCampaign)(nil)

type fastReflection_RewardByCampaign RewardByCampaign

func (x *RewardByCampaign) ProtoReflect() protoreflect.Message {
	return (*fastReflection_RewardByCampaign)(x)
}

func (x *RewardByCampaign) slowProtoReflect() protoreflect.Message {
	mi := &file_sge_legacy_reward_v1beta_reward_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_RewardByCampaign_messageType fastReflection_RewardByCampaign_messageType
var _ protoreflect.MessageType = fastReflection_RewardByCampaign_messageType{}

type fastReflection_RewardByCampaign_messageType struct{}

func (x fastReflection_RewardByCampaign_messageType) Zero() protoreflect.Message {
	return (*fastReflection_RewardByCampaign)(nil)
}
func (x fastReflection_RewardByCampaign_messageType) New() protoreflect.Message {
	return new(fastReflection_RewardByCampaign)
}
func (x fastReflection_RewardByCampaign_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_RewardByCampaign
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_RewardByCampaign) Descriptor() protoreflect.MessageDescriptor {
	return md_RewardByCampaign
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_RewardByCampaign) Type() protoreflect.MessageType {
	return _fastReflection_RewardByCampaign_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_RewardByCampaign) New() protoreflect.Message {
	return new(fastReflection_RewardByCampaign)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_RewardByCampaign) Interface() protoreflect.ProtoMessage {
	return (*RewardByCampaign)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_RewardByCampaign) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Uid != "" {
		value := protoreflect.ValueOfString(x.Uid)
		if !f(fd_RewardByCampaign_uid, value) {
			return
		}
	}
	if x.CampaignUid != "" {
		value := protoreflect.ValueOfString(x.CampaignUid)
		if !f(fd_RewardByCampaign_campaign_uid, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_RewardByCampaign) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sge.legacy.reward.v1beta.RewardByCampaign.uid":
		return x.Uid != ""
	case "sge.legacy.reward.v1beta.RewardByCampaign.campaign_uid":
		return x.CampaignUid != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sge.legacy.reward.v1beta.RewardByCampaign"))
		}
		panic(fmt.Errorf("message sge.legacy.reward.v1beta.RewardByCampaign does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RewardByCampaign) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sge.legacy.reward.v1beta.RewardByCampaign.uid":
		x.Uid = ""
	case "sge.legacy.reward.v1beta.RewardByCampaign.campaign_uid":
		x.CampaignUid = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sge.legacy.reward.v1beta.RewardByCampaign"))
		}
		panic(fmt.Errorf("message sge.legacy.reward.v1beta.RewardByCampaign does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_RewardByCampaign) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sge.legacy.reward.v1beta.RewardByCampaign.uid":
		value := x.Uid
		return protoreflect.ValueOfString(value)
	case "sge.legacy.reward.v1beta.RewardByCampaign.campaign_uid":
		value := x.CampaignUid
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sge.legacy.reward.v1beta.RewardByCampaign"))
		}
		panic(fmt.Errorf("message sge.legacy.reward.v1beta.RewardByCampaign does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RewardByCampaign) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sge.legacy.reward.v1beta.RewardByCampaign.uid":
		x.Uid = value.Interface().(string)
	case "sge.legacy.reward.v1beta.RewardByCampaign.campaign_uid":
		x.CampaignUid = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sge.legacy.reward.v1beta.RewardByCampaign"))
		}
		panic(fmt.Errorf("message sge.legacy.reward.v1beta.RewardByCampaign does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RewardByCampaign) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sge.legacy.reward.v1beta.RewardByCampaign.uid":
		panic(fmt.Errorf("field uid of message sge.legacy.reward.v1beta.RewardByCampaign is not mutable"))
	case "sge.legacy.reward.v1beta.RewardByCampaign.campaign_uid":
		panic(fmt.Errorf("field campaign_uid of message sge.legacy.reward.v1beta.RewardByCampaign is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sge.legacy.reward.v1beta.RewardByCampaign"))
		}
		panic(fmt.Errorf("message sge.legacy.reward.v1beta.RewardByCampaign does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_RewardByCampaign) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sge.legacy.reward.v1beta.RewardByCampaign.uid":
		return protoreflect.ValueOfString("")
	case "sge.legacy.reward.v1beta.RewardByCampaign.campaign_uid":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sge.legacy.reward.v1beta.RewardByCampaign"))
		}
		panic(fmt.Errorf("message sge.legacy.reward.v1beta.RewardByCampaign does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_RewardByCampaign) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sge.legacy.reward.v1beta.RewardByCampaign", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_RewardByCampaign) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RewardByCampaign) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_RewardByCampaign) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_RewardByCampaign) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*RewardByCampaign)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Uid)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CampaignUid)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*RewardByCampaign)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CampaignUid) > 0 {
			i -= len(x.CampaignUid)
			copy(dAtA[i:], x.CampaignUid)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CampaignUid)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Uid) > 0 {
			i -= len(x.Uid)
			copy(dAtA[i:], x.Uid)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Uid)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*RewardByCampaign)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RewardByCampaign: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RewardByCampaign: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Uid = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CampaignUid", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CampaignUid = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: sge/legacy/reward/v1beta/reward.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RewardType defines supported types of rewards in reward module.
type RewardCategory int32

const (
	// the invalid or unknown
	RewardCategory_REWARD_CATEGORY_UNSPECIFIED RewardCategory = 0
	// signup reward
	RewardCategory_REWARD_CATEGORY_SIGNUP RewardCategory = 1
	// referral reward
	RewardCategory_REWARD_CATEGORY_REFERRAL RewardCategory = 2
	// affiliate reward
	RewardCategory_REWARD_CATEGORY_AFFILIATE RewardCategory = 3
	// bet refunds
	RewardCategory_REWARD_CATEGORY_BET_REFUND RewardCategory = 4
	// milestone reward
	RewardCategory_REWARD_CATEGORY_MILESTONE RewardCategory = 5
	// bet discounts
	RewardCategory_REWARD_CATEGORY_BET_DISCOUNT RewardCategory = 6
	// other rewards
	RewardCategory_REWARD_CATEGORY_OTHER RewardCategory = 7
)

// Enum value maps for RewardCategory.
var (
	RewardCategory_name = map[int32]string{
		0: "REWARD_CATEGORY_UNSPECIFIED",
		1: "REWARD_CATEGORY_SIGNUP",
		2: "REWARD_CATEGORY_REFERRAL",
		3: "REWARD_CATEGORY_AFFILIATE",
		4: "REWARD_CATEGORY_BET_REFUND",
		5: "REWARD_CATEGORY_MILESTONE",
		6: "REWARD_CATEGORY_BET_DISCOUNT",
		7: "REWARD_CATEGORY_OTHER",
	}
	RewardCategory_value = map[string]int32{
		"REWARD_CATEGORY_UNSPECIFIED":  0,
		"REWARD_CATEGORY_SIGNUP":       1,
		"REWARD_CATEGORY_REFERRAL":     2,
		"REWARD_CATEGORY_AFFILIATE":    3,
		"REWARD_CATEGORY_BET_REFUND":   4,
		"REWARD_CATEGORY_MILESTONE":    5,
		"REWARD_CATEGORY_BET_DISCOUNT": 6,
		"REWARD_CATEGORY_OTHER":        7,
	}
)

func (x RewardCategory) Enum() *RewardCategory {
	p := new(RewardCategory)
	*p = x
	return p
}

func (x RewardCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RewardCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_sge_legacy_reward_v1beta_reward_proto_enumTypes[0].Descriptor()
}

func (RewardCategory) Type() protoreflect.EnumType {
	return &file_sge_legacy_reward_v1beta_reward_proto_enumTypes[0]
}

func (x RewardCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RewardCategory.Descriptor instead.
func (RewardCategory) EnumDescriptor() ([]byte, []int) {
	return file_sge_legacy_reward_v1beta_reward_proto_rawDescGZIP(), []int{0}
}

// RewardType defines supported types of rewards of reward module.
type RewardType int32

const (
	// the invalid or unknown
	RewardType_REWARD_TYPE_UNSPECIFIED RewardType = 0
	// signup reward
	RewardType_REWARD_TYPE_SIGNUP RewardType = 1
	// referral signup reward
	RewardType_REWARD_TYPE_REFERRAL_SIGNUP RewardType = 2
	// affiliate signup reward
	RewardType_REWARD_TYPE_AFFILIATE_SIGNUP RewardType = 3
	// referral reward
	RewardType_REWARD_TYPE_REFERRAL RewardType = 4
	// affiliate reward
	RewardType_REWARD_TYPE_AFFILIATE RewardType = 5
	// bet refunds
	RewardType_REWARD_TYPE_BET_REFUND RewardType = 6
	// milestone reward
	RewardType_REWARD_TYPE_MILESTONE RewardType = 7
	// bet discounts
	RewardType_REWARD_TYPE_BET_DISCOUNT RewardType = 8
	// other rewards
	RewardType_REWARD_TYPE_OTHER RewardType = 9
)

// Enum value maps for RewardType.
var (
	RewardType_name = map[int32]string{
		0: "REWARD_TYPE_UNSPECIFIED",
		1: "REWARD_TYPE_SIGNUP",
		2: "REWARD_TYPE_REFERRAL_SIGNUP",
		3: "REWARD_TYPE_AFFILIATE_SIGNUP",
		4: "REWARD_TYPE_REFERRAL",
		5: "REWARD_TYPE_AFFILIATE",
		6: "REWARD_TYPE_BET_REFUND",
		7: "REWARD_TYPE_MILESTONE",
		8: "REWARD_TYPE_BET_DISCOUNT",
		9: "REWARD_TYPE_OTHER",
	}
	RewardType_value = map[string]int32{
		"REWARD_TYPE_UNSPECIFIED":      0,
		"REWARD_TYPE_SIGNUP":           1,
		"REWARD_TYPE_REFERRAL_SIGNUP":  2,
		"REWARD_TYPE_AFFILIATE_SIGNUP": 3,
		"REWARD_TYPE_REFERRAL":         4,
		"REWARD_TYPE_AFFILIATE":        5,
		"REWARD_TYPE_BET_REFUND":       6,
		"REWARD_TYPE_MILESTONE":        7,
		"REWARD_TYPE_BET_DISCOUNT":     8,
		"REWARD_TYPE_OTHER":            9,
	}
)

func (x RewardType) Enum() *RewardType {
	p := new(RewardType)
	*p = x
	return p
}

func (x RewardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RewardType) Descriptor() protoreflect.EnumDescriptor {
	return file_sge_legacy_reward_v1beta_reward_proto_enumTypes[1].Descriptor()
}

func (RewardType) Type() protoreflect.EnumType {
	return &file_sge_legacy_reward_v1beta_reward_proto_enumTypes[1]
}

func (x RewardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RewardType.Descriptor instead.
func (RewardType) EnumDescriptor() ([]byte, []int) {
	return file_sge_legacy_reward_v1beta_reward_proto_rawDescGZIP(), []int{1}
}

// RewardType defines supported types of rewards of reward module.
type RewardAmountType int32

const (
	// the invalid or unknown
	RewardAmountType_REWARD_AMOUNT_TYPE_UNSPECIFIED RewardAmountType = 0
	// Fixed amount
	RewardAmountType_REWARD_AMOUNT_TYPE_FIXED RewardAmountType = 1
	// Business logic defined amount
	RewardAmountType_REWARD_AMOUNT_TYPE_LOGIC RewardAmountType = 2
	// Percentage of bet amount
	RewardAmountType_REWARD_AMOUNT_TYPE_PERCENTAGE RewardAmountType = 3
)

// Enum value maps for RewardAmountType.
var (
	RewardAmountType_name = map[int32]string{
		0: "REWARD_AMOUNT_TYPE_UNSPECIFIED",
		1: "REWARD_AMOUNT_TYPE_FIXED",
		2: "REWARD_AMOUNT_TYPE_LOGIC",
		3: "REWARD_AMOUNT_TYPE_PERCENTAGE",
	}
	RewardAmountType_value = map[string]int32{
		"REWARD_AMOUNT_TYPE_UNSPECIFIED": 0,
		"REWARD_AMOUNT_TYPE_FIXED":       1,
		"REWARD_AMOUNT_TYPE_LOGIC":       2,
		"REWARD_AMOUNT_TYPE_PERCENTAGE":  3,
	}
)

func (x RewardAmountType) Enum() *RewardAmountType {
	p := new(RewardAmountType)
	*p = x
	return p
}

func (x RewardAmountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RewardAmountType) Descriptor() protoreflect.EnumDescriptor {
	return file_sge_legacy_reward_v1beta_reward_proto_enumTypes[2].Descriptor()
}

func (RewardAmountType) Type() protoreflect.EnumType {
	return &file_sge_legacy_reward_v1beta_reward_proto_enumTypes[2]
}

func (x RewardAmountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RewardAmountType.Descriptor instead.
func (RewardAmountType) EnumDescriptor() ([]byte, []int) {
	return file_sge_legacy_reward_v1beta_reward_proto_rawDescGZIP(), []int{2}
}

// Reward is the type for transaction made to reward a user
// based on users eligibility.
type Reward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// uid is the unique identifier for a reward.
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// creator is the address of the account that invokes the reward transaction.
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	// receiver is the address of the account that receives the reward.
	Receiver string `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty"`
	// campaign_uid is the unique identifier of the campaign.
	CampaignUid string `protobuf:"bytes,4,opt,name=campaign_uid,proto3" json:"campaign_uid,omitempty"`
	// reward_amount is the amount of the reward.
	RewardAmount *RewardAmount `protobuf:"bytes,7,opt,name=reward_amount,proto3" json:"reward_amount,omitempty"`
	// source_uid is the address of the source.
	// It is used to identify the source of the reward.
	// For example, the source uid of a referral signup
	// reward is the address of the referer.
	SourceUid string `protobuf:"bytes,8,opt,name=source_uid,proto3" json:"source_uid,omitempty"`
	// meta is the metadata of the campaign.
	// It is a stringified base64 encoded json.
	Meta string `protobuf:"bytes,12,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *Reward) Reset() {
	*x = Reward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sge_legacy_reward_v1beta_reward_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reward) ProtoMessage() {}

// Deprecated: Use Reward.ProtoReflect.Descriptor instead.
func (*Reward) Descriptor() ([]byte, []int) {
	return file_sge_legacy_reward_v1beta_reward_proto_rawDescGZIP(), []int{0}
}

func (x *Reward) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Reward) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *Reward) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *Reward) GetCampaignUid() string {
	if x != nil {
		return x.CampaignUid
	}
	return ""
}

func (x *Reward) GetRewardAmount() *RewardAmount {
	if x != nil {
		return x.RewardAmount
	}
	return nil
}

func (x *Reward) GetSourceUid() string {
	if x != nil {
		return x.SourceUid
	}
	return ""
}

func (x *Reward) GetMeta() string {
	if x != nil {
		return x.Meta
	}
	return ""
}

// RewardAmount
type RewardAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// main_account_amount transferred to main account address
	MainAccountAmount string `protobuf:"bytes,1,opt,name=main_account_amount,json=mainAccountAmount,proto3" json:"main_account_amount,omitempty"`
	// subaccount_amount transferred to subaccount address
	SubaccountAmount string `protobuf:"bytes,2,opt,name=subaccount_amount,json=subaccountAmount,proto3" json:"subaccount_amount,omitempty"`
	// unlock_period is the period after which the reward is unlocked.
	UnlockPeriod uint64 `protobuf:"varint,3,opt,name=unlock_period,proto3" json:"unlock_period,omitempty"`
	// main_account_percentage transferred to main account address
	MainAccountPercentage string `protobuf:"bytes,4,opt,name=main_account_percentage,json=mainAccountPercentage,proto3" json:"main_account_percentage,omitempty"`
	// subaccount_percentage amount transferred to subaccount address
	SubaccountPercentage string `protobuf:"bytes,5,opt,name=subaccount_percentage,json=subaccountPercentage,proto3" json:"subaccount_percentage,omitempty"`
}

func (x *RewardAmount) Reset() {
	*x = RewardAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sge_legacy_reward_v1beta_reward_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardAmount) ProtoMessage() {}

// Deprecated: Use RewardAmount.ProtoReflect.Descriptor instead.
func (*RewardAmount) Descriptor() ([]byte, []int) {
	return file_sge_legacy_reward_v1beta_reward_proto_rawDescGZIP(), []int{1}
}

func (x *RewardAmount) GetMainAccountAmount() string {
	if x != nil {
		return x.MainAccountAmount
	}
	return ""
}

func (x *RewardAmount) GetSubaccountAmount() string {
	if x != nil {
		return x.SubaccountAmount
	}
	return ""
}

func (x *RewardAmount) GetUnlockPeriod() uint64 {
	if x != nil {
		return x.UnlockPeriod
	}
	return 0
}

func (x *RewardAmount) GetMainAccountPercentage() string {
	if x != nil {
		return x.MainAccountPercentage
	}
	return ""
}

func (x *RewardAmount) GetSubaccountPercentage() string {
	if x != nil {
		return x.SubaccountPercentage
	}
	return ""
}

// RewardByCategory
type RewardByCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// uid is the unique identifier for a reward.
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// addr is the address of the reward receiver.
	Addr string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	// reward_category is the category of the reward.
	RewardCategory RewardCategory `protobuf:"varint,3,opt,name=reward_category,json=rewardCategory,proto3,enum=sge.legacy.reward.v1beta.RewardCategory" json:"reward_category,omitempty"`
}

func (x *RewardByCategory) Reset() {
	*x = RewardByCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sge_legacy_reward_v1beta_reward_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardByCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardByCategory) ProtoMessage() {}

// Deprecated: Use RewardByCategory.ProtoReflect.Descriptor instead.
func (*RewardByCategory) Descriptor() ([]byte, []int) {
	return file_sge_legacy_reward_v1beta_reward_proto_rawDescGZIP(), []int{2}
}

func (x *RewardByCategory) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *RewardByCategory) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *RewardByCategory) GetRewardCategory() RewardCategory {
	if x != nil {
		return x.RewardCategory
	}
	return RewardCategory_REWARD_CATEGORY_UNSPECIFIED
}

// RewardByCampaign
type RewardByCampaign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// uid is the unique identifier for a reward.
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// campaign_uid is the unique identifier of the campaign.
	CampaignUid string `protobuf:"bytes,2,opt,name=campaign_uid,proto3" json:"campaign_uid,omitempty"`
}

func (x *RewardByCampaign) Reset() {
	*x = RewardByCampaign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sge_legacy_reward_v1beta_reward_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardByCampaign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardByCampaign) ProtoMessage() {}

// Deprecated: Use RewardByCampaign.ProtoReflect.Descriptor instead.
func (*RewardByCampaign) Descriptor() ([]byte, []int) {
	return file_sge_legacy_reward_v1beta_reward_proto_rawDescGZIP(), []int{3}
}

func (x *RewardByCampaign) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *RewardByCampaign) GetCampaignUid() string {
	if x != nil {
		return x.CampaignUid
	}
	return ""
}

var File_sge_legacy_reward_v1beta_reward_proto protoreflect.FileDescriptor

var file_sge_legacy_reward_v1beta_reward_proto_rawDesc = []byte{
	0x0a, 0x25, 0x73, 0x67, 0x65, 0x2f, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x2f, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2f, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x73, 0x67, 0x65, 0x2e, 0x6c, 0x65, 0x67,
	0x61, 0x63, 0x79, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f,
	0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x9b, 0x03, 0x0a, 0x06, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x20, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xe2, 0xde, 0x1f, 0x03,
	0x55, 0x49, 0x44, 0xea, 0xde, 0x1f, 0x03, 0x75, 0x69, 0x64, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x32, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x0c, 0x63, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x1f, 0xe2, 0xde, 0x1f, 0x0b, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x55, 0x49, 0x44,
	0xea, 0xde, 0x1f, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x75, 0x69, 0x64,
	0x52, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x75, 0x69, 0x64, 0x12, 0x6f,
	0x0a, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x67, 0x65, 0x2e, 0x6c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x21, 0xe2,
	0xde, 0x1f, 0x0c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0xea,
	0xde, 0x1f, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x3b, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x1b, 0xe2, 0xde, 0x1f, 0x09, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55,
	0x49, 0x44, 0xea, 0xde, 0x1f, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x69, 0x64,
	0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x22, 0xa5, 0x04, 0x0a, 0x0c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x6b, 0x0a, 0x13, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3b,
	0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64,
	0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f,
	0x1a, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x11, 0x6d, 0x61, 0x69,
	0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x66,
	0x0a, 0x11, 0x73, 0x75, 0x62, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x39, 0xc8, 0xde, 0x1f, 0x00, 0xda,
	0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f,
	0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f, 0x18, 0x79, 0x61, 0x6d, 0x6c,
	0x3a, 0x22, 0x73, 0x75, 0x62, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x52, 0x10, 0x73, 0x75, 0x62, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x0d, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x21, 0xe2,
	0xde, 0x1f, 0x0c, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0xea,
	0xde, 0x1f, 0x0d, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x52, 0x0d, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12,
	0x7d, 0x0a, 0x17, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x45, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x1b, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x4c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x44, 0x65, 0x63, 0xf2, 0xde, 0x1f, 0x1e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0x52, 0x15, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x78,
	0x0a, 0x15, 0x73, 0x75, 0x62, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x43, 0xc8,
	0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x1b, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b,
	0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x44,
	0x65, 0x63, 0xf2, 0xde, 0x1f, 0x1c, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x75, 0x62, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x22, 0x52, 0x14, 0x73, 0x75, 0x62, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xe2, 0xde, 0x1f, 0x03,
	0x55, 0x49, 0x44, 0xea, 0xde, 0x1f, 0x03, 0x75, 0x69, 0x64, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x2c, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2,
	0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x51, 0x0a,
	0x0f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x73, 0x67, 0x65, 0x2e, 0x6c, 0x65, 0x67,
	0x61, 0x63, 0x79, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x22, 0x79, 0x0a, 0x10, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x42, 0x79, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x12, 0x20, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0e, 0xe2, 0xde, 0x1f, 0x03, 0x55, 0x49, 0x44, 0xea, 0xde, 0x1f, 0x03, 0x75, 0x69,
	0x64, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xe2, 0xde,
	0x1f, 0x0b, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x55, 0x49, 0x44, 0xea, 0xde, 0x1f,
	0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x75, 0x69, 0x64, 0x52, 0x0c, 0x63,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x75, 0x69, 0x64, 0x2a, 0x86, 0x02, 0x0a, 0x0e,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1f,
	0x0a, 0x1b, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52,
	0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x1a, 0x0a, 0x16, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f,
	0x52, 0x59, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x55, 0x50, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x52,
	0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x52,
	0x45, 0x46, 0x45, 0x52, 0x52, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x57,
	0x41, 0x52, 0x44, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x41, 0x46, 0x46,
	0x49, 0x4c, 0x49, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x45, 0x57, 0x41,
	0x52, 0x44, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x42, 0x45, 0x54, 0x5f,
	0x52, 0x45, 0x46, 0x55, 0x4e, 0x44, 0x10, 0x04, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x57, 0x41,
	0x52, 0x44, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x4d, 0x49, 0x4c, 0x45,
	0x53, 0x54, 0x4f, 0x4e, 0x45, 0x10, 0x05, 0x12, 0x20, 0x0a, 0x1c, 0x52, 0x45, 0x57, 0x41, 0x52,
	0x44, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x42, 0x45, 0x54, 0x5f, 0x44,
	0x49, 0x53, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x45, 0x57,
	0x41, 0x52, 0x44, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x4f, 0x54, 0x48,
	0x45, 0x52, 0x10, 0x07, 0x2a, 0xa5, 0x02, 0x0a, 0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x53, 0x49, 0x47, 0x4e, 0x55, 0x50, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x45, 0x57, 0x41,
	0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x46, 0x45, 0x52, 0x52, 0x41, 0x4c,
	0x5f, 0x53, 0x49, 0x47, 0x4e, 0x55, 0x50, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x52, 0x45, 0x57,
	0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x46, 0x46, 0x49, 0x4c, 0x49, 0x41,
	0x54, 0x45, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x55, 0x50, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x52,
	0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x46, 0x45, 0x52,
	0x52, 0x41, 0x4c, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x46, 0x46, 0x49, 0x4c, 0x49, 0x41, 0x54, 0x45, 0x10, 0x05,
	0x12, 0x1a, 0x0a, 0x16, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x42, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x46, 0x55, 0x4e, 0x44, 0x10, 0x06, 0x12, 0x19, 0x0a, 0x15,
	0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4c, 0x45,
	0x53, 0x54, 0x4f, 0x4e, 0x45, 0x10, 0x07, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x45, 0x57, 0x41, 0x52,
	0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x45, 0x54, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x10, 0x08, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x09, 0x2a, 0x95, 0x01, 0x0a,
	0x10, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x22, 0x0a, 0x1e, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x41, 0x4d, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f,
	0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49, 0x58, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x41, 0x4d,
	0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x43, 0x10,
	0x02, 0x12, 0x21, 0x0a, 0x1d, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x41, 0x4d, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x45, 0x52, 0x43, 0x45, 0x4e, 0x54, 0x41,
	0x47, 0x45, 0x10, 0x03, 0x42, 0xf4, 0x01, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x67, 0x65,
	0x2e, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x42, 0x0b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x67, 0x65, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x73, 0x67, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x67, 0x65, 0x2f, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x2f,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x3b, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0xa2, 0x02, 0x03, 0x53, 0x4c, 0x52,
	0xaa, 0x02, 0x18, 0x53, 0x67, 0x65, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x2e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x2e, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0xca, 0x02, 0x18, 0x53, 0x67,
	0x65, 0x5c, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5c,
	0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0xe2, 0x02, 0x24, 0x53, 0x67, 0x65, 0x5c, 0x4c, 0x65, 0x67,
	0x61, 0x63, 0x79, 0x5c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1b,
	0x53, 0x67, 0x65, 0x3a, 0x3a, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x3a, 0x3a, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_sge_legacy_reward_v1beta_reward_proto_rawDescOnce sync.Once
	file_sge_legacy_reward_v1beta_reward_proto_rawDescData = file_sge_legacy_reward_v1beta_reward_proto_rawDesc
)

func file_sge_legacy_reward_v1beta_reward_proto_rawDescGZIP() []byte {
	file_sge_legacy_reward_v1beta_reward_proto_rawDescOnce.Do(func() {
		file_sge_legacy_reward_v1beta_reward_proto_rawDescData = protoimpl.X.CompressGZIP(file_sge_legacy_reward_v1beta_reward_proto_rawDescData)
	})
	return file_sge_legacy_reward_v1beta_reward_proto_rawDescData
}

var file_sge_legacy_reward_v1beta_reward_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_sge_legacy_reward_v1beta_reward_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_sge_legacy_reward_v1beta_reward_proto_goTypes = []interface{}{
	(RewardCategory)(0),      // 0: sge.legacy.reward.v1beta.RewardCategory
	(RewardType)(0),          // 1: sge.legacy.reward.v1beta.RewardType
	(RewardAmountType)(0),    // 2: sge.legacy.reward.v1beta.RewardAmountType
	(*Reward)(nil),           // 3: sge.legacy.reward.v1beta.Reward
	(*RewardAmount)(nil),     // 4: sge.legacy.reward.v1beta.RewardAmount
	(*RewardByCategory)(nil), // 5: sge.legacy.reward.v1beta.RewardByCategory
	(*RewardByCampaign)(nil), // 6: sge.legacy.reward.v1beta.RewardByCampaign
}
var file_sge_legacy_reward_v1beta_reward_proto_depIdxs = []int32{
	4, // 0: sge.legacy.reward.v1beta.Reward.reward_amount:type_name -> sge.legacy.reward.v1beta.RewardAmount
	0, // 1: sge.legacy.reward.v1beta.RewardByCategory.reward_category:type_name -> sge.legacy.reward.v1beta.RewardCategory
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_sge_legacy_reward_v1beta_reward_proto_init() }
func file_sge_legacy_reward_v1beta_reward_proto_init() {
	if File_sge_legacy_reward_v1beta_reward_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sge_legacy_reward_v1beta_reward_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sge_legacy_reward_v1beta_reward_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sge_legacy_reward_v1beta_reward_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardByCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sge_legacy_reward_v1beta_reward_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardByCampaign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sge_legacy_reward_v1beta_reward_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sge_legacy_reward_v1beta_reward_proto_goTypes,
		DependencyIndexes: file_sge_legacy_reward_v1beta_reward_proto_depIdxs,
		EnumInfos:         file_sge_legacy_reward_v1beta_reward_proto_enumTypes,
		MessageInfos:      file_sge_legacy_reward_v1beta_reward_proto_msgTypes,
	}.Build()
	File_sge_legacy_reward_v1beta_reward_proto = out.File
	file_sge_legacy_reward_v1beta_reward_proto_rawDesc = nil
	file_sge_legacy_reward_v1beta_reward_proto_goTypes = nil
	file_sge_legacy_reward_v1beta_reward_proto_depIdxs = nil
}
