// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package reward

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	_type "github.com/sge-network/sge/api/sgenetwork/sge/type"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_CreateCampaignPayload                    protoreflect.MessageDescriptor
	fd_CreateCampaignPayload_promoter           protoreflect.FieldDescriptor
	fd_CreateCampaignPayload_start_ts           protoreflect.FieldDescriptor
	fd_CreateCampaignPayload_end_ts             protoreflect.FieldDescriptor
	fd_CreateCampaignPayload_category           protoreflect.FieldDescriptor
	fd_CreateCampaignPayload_reward_type        protoreflect.FieldDescriptor
	fd_CreateCampaignPayload_reward_amount_type protoreflect.FieldDescriptor
	fd_CreateCampaignPayload_reward_amount      protoreflect.FieldDescriptor
	fd_CreateCampaignPayload_is_active          protoreflect.FieldDescriptor
	fd_CreateCampaignPayload_meta               protoreflect.FieldDescriptor
	fd_CreateCampaignPayload_cap_count          protoreflect.FieldDescriptor
	fd_CreateCampaignPayload_constraints        protoreflect.FieldDescriptor
)

func init() {
	file_sgenetwork_sge_reward_ticket_proto_init()
	md_CreateCampaignPayload = File_sgenetwork_sge_reward_ticket_proto.Messages().ByName("CreateCampaignPayload")
	fd_CreateCampaignPayload_promoter = md_CreateCampaignPayload.Fields().ByName("promoter")
	fd_CreateCampaignPayload_start_ts = md_CreateCampaignPayload.Fields().ByName("start_ts")
	fd_CreateCampaignPayload_end_ts = md_CreateCampaignPayload.Fields().ByName("end_ts")
	fd_CreateCampaignPayload_category = md_CreateCampaignPayload.Fields().ByName("category")
	fd_CreateCampaignPayload_reward_type = md_CreateCampaignPayload.Fields().ByName("reward_type")
	fd_CreateCampaignPayload_reward_amount_type = md_CreateCampaignPayload.Fields().ByName("reward_amount_type")
	fd_CreateCampaignPayload_reward_amount = md_CreateCampaignPayload.Fields().ByName("reward_amount")
	fd_CreateCampaignPayload_is_active = md_CreateCampaignPayload.Fields().ByName("is_active")
	fd_CreateCampaignPayload_meta = md_CreateCampaignPayload.Fields().ByName("meta")
	fd_CreateCampaignPayload_cap_count = md_CreateCampaignPayload.Fields().ByName("cap_count")
	fd_CreateCampaignPayload_constraints = md_CreateCampaignPayload.Fields().ByName("constraints")
}

var _ protoreflect.Message = (*fastReflection_CreateCampaignPayload)(nil)

type fastReflection_CreateCampaignPayload CreateCampaignPayload

func (x *CreateCampaignPayload) ProtoReflect() protoreflect.Message {
	return (*fastReflection_CreateCampaignPayload)(x)
}

func (x *CreateCampaignPayload) slowProtoReflect() protoreflect.Message {
	mi := &file_sgenetwork_sge_reward_ticket_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_CreateCampaignPayload_messageType fastReflection_CreateCampaignPayload_messageType
var _ protoreflect.MessageType = fastReflection_CreateCampaignPayload_messageType{}

type fastReflection_CreateCampaignPayload_messageType struct{}

func (x fastReflection_CreateCampaignPayload_messageType) Zero() protoreflect.Message {
	return (*fastReflection_CreateCampaignPayload)(nil)
}
func (x fastReflection_CreateCampaignPayload_messageType) New() protoreflect.Message {
	return new(fastReflection_CreateCampaignPayload)
}
func (x fastReflection_CreateCampaignPayload_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_CreateCampaignPayload
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_CreateCampaignPayload) Descriptor() protoreflect.MessageDescriptor {
	return md_CreateCampaignPayload
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_CreateCampaignPayload) Type() protoreflect.MessageType {
	return _fastReflection_CreateCampaignPayload_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_CreateCampaignPayload) New() protoreflect.Message {
	return new(fastReflection_CreateCampaignPayload)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_CreateCampaignPayload) Interface() protoreflect.ProtoMessage {
	return (*CreateCampaignPayload)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_CreateCampaignPayload) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Promoter != "" {
		value := protoreflect.ValueOfString(x.Promoter)
		if !f(fd_CreateCampaignPayload_promoter, value) {
			return
		}
	}
	if x.StartTs != uint64(0) {
		value := protoreflect.ValueOfUint64(x.StartTs)
		if !f(fd_CreateCampaignPayload_start_ts, value) {
			return
		}
	}
	if x.EndTs != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EndTs)
		if !f(fd_CreateCampaignPayload_end_ts, value) {
			return
		}
	}
	if x.Category != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Category))
		if !f(fd_CreateCampaignPayload_category, value) {
			return
		}
	}
	if x.RewardType != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.RewardType))
		if !f(fd_CreateCampaignPayload_reward_type, value) {
			return
		}
	}
	if x.RewardAmountType != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.RewardAmountType))
		if !f(fd_CreateCampaignPayload_reward_amount_type, value) {
			return
		}
	}
	if x.RewardAmount != nil {
		value := protoreflect.ValueOfMessage(x.RewardAmount.ProtoReflect())
		if !f(fd_CreateCampaignPayload_reward_amount, value) {
			return
		}
	}
	if x.IsActive != false {
		value := protoreflect.ValueOfBool(x.IsActive)
		if !f(fd_CreateCampaignPayload_is_active, value) {
			return
		}
	}
	if x.Meta != "" {
		value := protoreflect.ValueOfString(x.Meta)
		if !f(fd_CreateCampaignPayload_meta, value) {
			return
		}
	}
	if x.CapCount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CapCount)
		if !f(fd_CreateCampaignPayload_cap_count, value) {
			return
		}
	}
	if x.Constraints != nil {
		value := protoreflect.ValueOfMessage(x.Constraints.ProtoReflect())
		if !f(fd_CreateCampaignPayload_constraints, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_CreateCampaignPayload) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.CreateCampaignPayload.promoter":
		return x.Promoter != ""
	case "sgenetwork.sge.reward.CreateCampaignPayload.start_ts":
		return x.StartTs != uint64(0)
	case "sgenetwork.sge.reward.CreateCampaignPayload.end_ts":
		return x.EndTs != uint64(0)
	case "sgenetwork.sge.reward.CreateCampaignPayload.category":
		return x.Category != 0
	case "sgenetwork.sge.reward.CreateCampaignPayload.reward_type":
		return x.RewardType != 0
	case "sgenetwork.sge.reward.CreateCampaignPayload.reward_amount_type":
		return x.RewardAmountType != 0
	case "sgenetwork.sge.reward.CreateCampaignPayload.reward_amount":
		return x.RewardAmount != nil
	case "sgenetwork.sge.reward.CreateCampaignPayload.is_active":
		return x.IsActive != false
	case "sgenetwork.sge.reward.CreateCampaignPayload.meta":
		return x.Meta != ""
	case "sgenetwork.sge.reward.CreateCampaignPayload.cap_count":
		return x.CapCount != uint64(0)
	case "sgenetwork.sge.reward.CreateCampaignPayload.constraints":
		return x.Constraints != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.CreateCampaignPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.CreateCampaignPayload does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CreateCampaignPayload) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.CreateCampaignPayload.promoter":
		x.Promoter = ""
	case "sgenetwork.sge.reward.CreateCampaignPayload.start_ts":
		x.StartTs = uint64(0)
	case "sgenetwork.sge.reward.CreateCampaignPayload.end_ts":
		x.EndTs = uint64(0)
	case "sgenetwork.sge.reward.CreateCampaignPayload.category":
		x.Category = 0
	case "sgenetwork.sge.reward.CreateCampaignPayload.reward_type":
		x.RewardType = 0
	case "sgenetwork.sge.reward.CreateCampaignPayload.reward_amount_type":
		x.RewardAmountType = 0
	case "sgenetwork.sge.reward.CreateCampaignPayload.reward_amount":
		x.RewardAmount = nil
	case "sgenetwork.sge.reward.CreateCampaignPayload.is_active":
		x.IsActive = false
	case "sgenetwork.sge.reward.CreateCampaignPayload.meta":
		x.Meta = ""
	case "sgenetwork.sge.reward.CreateCampaignPayload.cap_count":
		x.CapCount = uint64(0)
	case "sgenetwork.sge.reward.CreateCampaignPayload.constraints":
		x.Constraints = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.CreateCampaignPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.CreateCampaignPayload does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_CreateCampaignPayload) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sgenetwork.sge.reward.CreateCampaignPayload.promoter":
		value := x.Promoter
		return protoreflect.ValueOfString(value)
	case "sgenetwork.sge.reward.CreateCampaignPayload.start_ts":
		value := x.StartTs
		return protoreflect.ValueOfUint64(value)
	case "sgenetwork.sge.reward.CreateCampaignPayload.end_ts":
		value := x.EndTs
		return protoreflect.ValueOfUint64(value)
	case "sgenetwork.sge.reward.CreateCampaignPayload.category":
		value := x.Category
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "sgenetwork.sge.reward.CreateCampaignPayload.reward_type":
		value := x.RewardType
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "sgenetwork.sge.reward.CreateCampaignPayload.reward_amount_type":
		value := x.RewardAmountType
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "sgenetwork.sge.reward.CreateCampaignPayload.reward_amount":
		value := x.RewardAmount
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "sgenetwork.sge.reward.CreateCampaignPayload.is_active":
		value := x.IsActive
		return protoreflect.ValueOfBool(value)
	case "sgenetwork.sge.reward.CreateCampaignPayload.meta":
		value := x.Meta
		return protoreflect.ValueOfString(value)
	case "sgenetwork.sge.reward.CreateCampaignPayload.cap_count":
		value := x.CapCount
		return protoreflect.ValueOfUint64(value)
	case "sgenetwork.sge.reward.CreateCampaignPayload.constraints":
		value := x.Constraints
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.CreateCampaignPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.CreateCampaignPayload does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CreateCampaignPayload) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.CreateCampaignPayload.promoter":
		x.Promoter = value.Interface().(string)
	case "sgenetwork.sge.reward.CreateCampaignPayload.start_ts":
		x.StartTs = value.Uint()
	case "sgenetwork.sge.reward.CreateCampaignPayload.end_ts":
		x.EndTs = value.Uint()
	case "sgenetwork.sge.reward.CreateCampaignPayload.category":
		x.Category = (RewardCategory)(value.Enum())
	case "sgenetwork.sge.reward.CreateCampaignPayload.reward_type":
		x.RewardType = (RewardType)(value.Enum())
	case "sgenetwork.sge.reward.CreateCampaignPayload.reward_amount_type":
		x.RewardAmountType = (RewardAmountType)(value.Enum())
	case "sgenetwork.sge.reward.CreateCampaignPayload.reward_amount":
		x.RewardAmount = value.Message().Interface().(*RewardAmount)
	case "sgenetwork.sge.reward.CreateCampaignPayload.is_active":
		x.IsActive = value.Bool()
	case "sgenetwork.sge.reward.CreateCampaignPayload.meta":
		x.Meta = value.Interface().(string)
	case "sgenetwork.sge.reward.CreateCampaignPayload.cap_count":
		x.CapCount = value.Uint()
	case "sgenetwork.sge.reward.CreateCampaignPayload.constraints":
		x.Constraints = value.Message().Interface().(*CampaignConstraints)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.CreateCampaignPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.CreateCampaignPayload does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CreateCampaignPayload) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.CreateCampaignPayload.reward_amount":
		if x.RewardAmount == nil {
			x.RewardAmount = new(RewardAmount)
		}
		return protoreflect.ValueOfMessage(x.RewardAmount.ProtoReflect())
	case "sgenetwork.sge.reward.CreateCampaignPayload.constraints":
		if x.Constraints == nil {
			x.Constraints = new(CampaignConstraints)
		}
		return protoreflect.ValueOfMessage(x.Constraints.ProtoReflect())
	case "sgenetwork.sge.reward.CreateCampaignPayload.promoter":
		panic(fmt.Errorf("field promoter of message sgenetwork.sge.reward.CreateCampaignPayload is not mutable"))
	case "sgenetwork.sge.reward.CreateCampaignPayload.start_ts":
		panic(fmt.Errorf("field start_ts of message sgenetwork.sge.reward.CreateCampaignPayload is not mutable"))
	case "sgenetwork.sge.reward.CreateCampaignPayload.end_ts":
		panic(fmt.Errorf("field end_ts of message sgenetwork.sge.reward.CreateCampaignPayload is not mutable"))
	case "sgenetwork.sge.reward.CreateCampaignPayload.category":
		panic(fmt.Errorf("field category of message sgenetwork.sge.reward.CreateCampaignPayload is not mutable"))
	case "sgenetwork.sge.reward.CreateCampaignPayload.reward_type":
		panic(fmt.Errorf("field reward_type of message sgenetwork.sge.reward.CreateCampaignPayload is not mutable"))
	case "sgenetwork.sge.reward.CreateCampaignPayload.reward_amount_type":
		panic(fmt.Errorf("field reward_amount_type of message sgenetwork.sge.reward.CreateCampaignPayload is not mutable"))
	case "sgenetwork.sge.reward.CreateCampaignPayload.is_active":
		panic(fmt.Errorf("field is_active of message sgenetwork.sge.reward.CreateCampaignPayload is not mutable"))
	case "sgenetwork.sge.reward.CreateCampaignPayload.meta":
		panic(fmt.Errorf("field meta of message sgenetwork.sge.reward.CreateCampaignPayload is not mutable"))
	case "sgenetwork.sge.reward.CreateCampaignPayload.cap_count":
		panic(fmt.Errorf("field cap_count of message sgenetwork.sge.reward.CreateCampaignPayload is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.CreateCampaignPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.CreateCampaignPayload does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_CreateCampaignPayload) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.CreateCampaignPayload.promoter":
		return protoreflect.ValueOfString("")
	case "sgenetwork.sge.reward.CreateCampaignPayload.start_ts":
		return protoreflect.ValueOfUint64(uint64(0))
	case "sgenetwork.sge.reward.CreateCampaignPayload.end_ts":
		return protoreflect.ValueOfUint64(uint64(0))
	case "sgenetwork.sge.reward.CreateCampaignPayload.category":
		return protoreflect.ValueOfEnum(0)
	case "sgenetwork.sge.reward.CreateCampaignPayload.reward_type":
		return protoreflect.ValueOfEnum(0)
	case "sgenetwork.sge.reward.CreateCampaignPayload.reward_amount_type":
		return protoreflect.ValueOfEnum(0)
	case "sgenetwork.sge.reward.CreateCampaignPayload.reward_amount":
		m := new(RewardAmount)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "sgenetwork.sge.reward.CreateCampaignPayload.is_active":
		return protoreflect.ValueOfBool(false)
	case "sgenetwork.sge.reward.CreateCampaignPayload.meta":
		return protoreflect.ValueOfString("")
	case "sgenetwork.sge.reward.CreateCampaignPayload.cap_count":
		return protoreflect.ValueOfUint64(uint64(0))
	case "sgenetwork.sge.reward.CreateCampaignPayload.constraints":
		m := new(CampaignConstraints)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.CreateCampaignPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.CreateCampaignPayload does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_CreateCampaignPayload) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sgenetwork.sge.reward.CreateCampaignPayload", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_CreateCampaignPayload) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CreateCampaignPayload) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_CreateCampaignPayload) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_CreateCampaignPayload) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*CreateCampaignPayload)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Promoter)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.StartTs != 0 {
			n += 1 + runtime.Sov(uint64(x.StartTs))
		}
		if x.EndTs != 0 {
			n += 1 + runtime.Sov(uint64(x.EndTs))
		}
		if x.Category != 0 {
			n += 1 + runtime.Sov(uint64(x.Category))
		}
		if x.RewardType != 0 {
			n += 1 + runtime.Sov(uint64(x.RewardType))
		}
		if x.RewardAmountType != 0 {
			n += 1 + runtime.Sov(uint64(x.RewardAmountType))
		}
		if x.RewardAmount != nil {
			l = options.Size(x.RewardAmount)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.IsActive {
			n += 2
		}
		l = len(x.Meta)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CapCount != 0 {
			n += 1 + runtime.Sov(uint64(x.CapCount))
		}
		if x.Constraints != nil {
			l = options.Size(x.Constraints)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*CreateCampaignPayload)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Constraints != nil {
			encoded, err := options.Marshal(x.Constraints)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x62
		}
		if x.CapCount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CapCount))
			i--
			dAtA[i] = 0x58
		}
		if len(x.Meta) > 0 {
			i -= len(x.Meta)
			copy(dAtA[i:], x.Meta)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Meta)))
			i--
			dAtA[i] = 0x52
		}
		if x.IsActive {
			i--
			if x.IsActive {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x40
		}
		if x.RewardAmount != nil {
			encoded, err := options.Marshal(x.RewardAmount)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x3a
		}
		if x.RewardAmountType != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RewardAmountType))
			i--
			dAtA[i] = 0x30
		}
		if x.RewardType != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RewardType))
			i--
			dAtA[i] = 0x28
		}
		if x.Category != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Category))
			i--
			dAtA[i] = 0x20
		}
		if x.EndTs != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EndTs))
			i--
			dAtA[i] = 0x18
		}
		if x.StartTs != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.StartTs))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Promoter) > 0 {
			i -= len(x.Promoter)
			copy(dAtA[i:], x.Promoter)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Promoter)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*CreateCampaignPayload)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CreateCampaignPayload: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CreateCampaignPayload: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Promoter", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Promoter = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StartTs", wireType)
				}
				x.StartTs = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.StartTs |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EndTs", wireType)
				}
				x.EndTs = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EndTs |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Category", wireType)
				}
				x.Category = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Category |= RewardCategory(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardType", wireType)
				}
				x.RewardType = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RewardType |= RewardType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardAmountType", wireType)
				}
				x.RewardAmountType = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RewardAmountType |= RewardAmountType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardAmount", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.RewardAmount == nil {
					x.RewardAmount = &RewardAmount{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.RewardAmount); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IsActive", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.IsActive = bool(v != 0)
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Meta", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Meta = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CapCount", wireType)
				}
				x.CapCount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CapCount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Constraints", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Constraints == nil {
					x.Constraints = &CampaignConstraints{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Constraints); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_UpdateCampaignPayload           protoreflect.MessageDescriptor
	fd_UpdateCampaignPayload_end_ts    protoreflect.FieldDescriptor
	fd_UpdateCampaignPayload_is_active protoreflect.FieldDescriptor
)

func init() {
	file_sgenetwork_sge_reward_ticket_proto_init()
	md_UpdateCampaignPayload = File_sgenetwork_sge_reward_ticket_proto.Messages().ByName("UpdateCampaignPayload")
	fd_UpdateCampaignPayload_end_ts = md_UpdateCampaignPayload.Fields().ByName("end_ts")
	fd_UpdateCampaignPayload_is_active = md_UpdateCampaignPayload.Fields().ByName("is_active")
}

var _ protoreflect.Message = (*fastReflection_UpdateCampaignPayload)(nil)

type fastReflection_UpdateCampaignPayload UpdateCampaignPayload

func (x *UpdateCampaignPayload) ProtoReflect() protoreflect.Message {
	return (*fastReflection_UpdateCampaignPayload)(x)
}

func (x *UpdateCampaignPayload) slowProtoReflect() protoreflect.Message {
	mi := &file_sgenetwork_sge_reward_ticket_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_UpdateCampaignPayload_messageType fastReflection_UpdateCampaignPayload_messageType
var _ protoreflect.MessageType = fastReflection_UpdateCampaignPayload_messageType{}

type fastReflection_UpdateCampaignPayload_messageType struct{}

func (x fastReflection_UpdateCampaignPayload_messageType) Zero() protoreflect.Message {
	return (*fastReflection_UpdateCampaignPayload)(nil)
}
func (x fastReflection_UpdateCampaignPayload_messageType) New() protoreflect.Message {
	return new(fastReflection_UpdateCampaignPayload)
}
func (x fastReflection_UpdateCampaignPayload_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_UpdateCampaignPayload
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_UpdateCampaignPayload) Descriptor() protoreflect.MessageDescriptor {
	return md_UpdateCampaignPayload
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_UpdateCampaignPayload) Type() protoreflect.MessageType {
	return _fastReflection_UpdateCampaignPayload_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_UpdateCampaignPayload) New() protoreflect.Message {
	return new(fastReflection_UpdateCampaignPayload)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_UpdateCampaignPayload) Interface() protoreflect.ProtoMessage {
	return (*UpdateCampaignPayload)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_UpdateCampaignPayload) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.EndTs != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EndTs)
		if !f(fd_UpdateCampaignPayload_end_ts, value) {
			return
		}
	}
	if x.IsActive != false {
		value := protoreflect.ValueOfBool(x.IsActive)
		if !f(fd_UpdateCampaignPayload_is_active, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_UpdateCampaignPayload) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.UpdateCampaignPayload.end_ts":
		return x.EndTs != uint64(0)
	case "sgenetwork.sge.reward.UpdateCampaignPayload.is_active":
		return x.IsActive != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.UpdateCampaignPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.UpdateCampaignPayload does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateCampaignPayload) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.UpdateCampaignPayload.end_ts":
		x.EndTs = uint64(0)
	case "sgenetwork.sge.reward.UpdateCampaignPayload.is_active":
		x.IsActive = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.UpdateCampaignPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.UpdateCampaignPayload does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_UpdateCampaignPayload) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sgenetwork.sge.reward.UpdateCampaignPayload.end_ts":
		value := x.EndTs
		return protoreflect.ValueOfUint64(value)
	case "sgenetwork.sge.reward.UpdateCampaignPayload.is_active":
		value := x.IsActive
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.UpdateCampaignPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.UpdateCampaignPayload does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateCampaignPayload) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.UpdateCampaignPayload.end_ts":
		x.EndTs = value.Uint()
	case "sgenetwork.sge.reward.UpdateCampaignPayload.is_active":
		x.IsActive = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.UpdateCampaignPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.UpdateCampaignPayload does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateCampaignPayload) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.UpdateCampaignPayload.end_ts":
		panic(fmt.Errorf("field end_ts of message sgenetwork.sge.reward.UpdateCampaignPayload is not mutable"))
	case "sgenetwork.sge.reward.UpdateCampaignPayload.is_active":
		panic(fmt.Errorf("field is_active of message sgenetwork.sge.reward.UpdateCampaignPayload is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.UpdateCampaignPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.UpdateCampaignPayload does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_UpdateCampaignPayload) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.UpdateCampaignPayload.end_ts":
		return protoreflect.ValueOfUint64(uint64(0))
	case "sgenetwork.sge.reward.UpdateCampaignPayload.is_active":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.UpdateCampaignPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.UpdateCampaignPayload does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_UpdateCampaignPayload) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sgenetwork.sge.reward.UpdateCampaignPayload", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_UpdateCampaignPayload) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateCampaignPayload) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_UpdateCampaignPayload) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_UpdateCampaignPayload) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*UpdateCampaignPayload)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.EndTs != 0 {
			n += 1 + runtime.Sov(uint64(x.EndTs))
		}
		if x.IsActive {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*UpdateCampaignPayload)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.IsActive {
			i--
			if x.IsActive {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x10
		}
		if x.EndTs != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EndTs))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*UpdateCampaignPayload)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UpdateCampaignPayload: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UpdateCampaignPayload: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EndTs", wireType)
				}
				x.EndTs = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EndTs |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IsActive", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.IsActive = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_WithdrawFundsPayload          protoreflect.MessageDescriptor
	fd_WithdrawFundsPayload_promoter protoreflect.FieldDescriptor
)

func init() {
	file_sgenetwork_sge_reward_ticket_proto_init()
	md_WithdrawFundsPayload = File_sgenetwork_sge_reward_ticket_proto.Messages().ByName("WithdrawFundsPayload")
	fd_WithdrawFundsPayload_promoter = md_WithdrawFundsPayload.Fields().ByName("promoter")
}

var _ protoreflect.Message = (*fastReflection_WithdrawFundsPayload)(nil)

type fastReflection_WithdrawFundsPayload WithdrawFundsPayload

func (x *WithdrawFundsPayload) ProtoReflect() protoreflect.Message {
	return (*fastReflection_WithdrawFundsPayload)(x)
}

func (x *WithdrawFundsPayload) slowProtoReflect() protoreflect.Message {
	mi := &file_sgenetwork_sge_reward_ticket_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_WithdrawFundsPayload_messageType fastReflection_WithdrawFundsPayload_messageType
var _ protoreflect.MessageType = fastReflection_WithdrawFundsPayload_messageType{}

type fastReflection_WithdrawFundsPayload_messageType struct{}

func (x fastReflection_WithdrawFundsPayload_messageType) Zero() protoreflect.Message {
	return (*fastReflection_WithdrawFundsPayload)(nil)
}
func (x fastReflection_WithdrawFundsPayload_messageType) New() protoreflect.Message {
	return new(fastReflection_WithdrawFundsPayload)
}
func (x fastReflection_WithdrawFundsPayload_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_WithdrawFundsPayload
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_WithdrawFundsPayload) Descriptor() protoreflect.MessageDescriptor {
	return md_WithdrawFundsPayload
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_WithdrawFundsPayload) Type() protoreflect.MessageType {
	return _fastReflection_WithdrawFundsPayload_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_WithdrawFundsPayload) New() protoreflect.Message {
	return new(fastReflection_WithdrawFundsPayload)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_WithdrawFundsPayload) Interface() protoreflect.ProtoMessage {
	return (*WithdrawFundsPayload)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_WithdrawFundsPayload) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Promoter != "" {
		value := protoreflect.ValueOfString(x.Promoter)
		if !f(fd_WithdrawFundsPayload_promoter, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_WithdrawFundsPayload) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.WithdrawFundsPayload.promoter":
		return x.Promoter != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.WithdrawFundsPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.WithdrawFundsPayload does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WithdrawFundsPayload) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.WithdrawFundsPayload.promoter":
		x.Promoter = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.WithdrawFundsPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.WithdrawFundsPayload does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_WithdrawFundsPayload) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sgenetwork.sge.reward.WithdrawFundsPayload.promoter":
		value := x.Promoter
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.WithdrawFundsPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.WithdrawFundsPayload does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WithdrawFundsPayload) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.WithdrawFundsPayload.promoter":
		x.Promoter = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.WithdrawFundsPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.WithdrawFundsPayload does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WithdrawFundsPayload) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.WithdrawFundsPayload.promoter":
		panic(fmt.Errorf("field promoter of message sgenetwork.sge.reward.WithdrawFundsPayload is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.WithdrawFundsPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.WithdrawFundsPayload does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_WithdrawFundsPayload) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.WithdrawFundsPayload.promoter":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.WithdrawFundsPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.WithdrawFundsPayload does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_WithdrawFundsPayload) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sgenetwork.sge.reward.WithdrawFundsPayload", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_WithdrawFundsPayload) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WithdrawFundsPayload) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_WithdrawFundsPayload) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_WithdrawFundsPayload) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*WithdrawFundsPayload)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Promoter)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*WithdrawFundsPayload)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Promoter) > 0 {
			i -= len(x.Promoter)
			copy(dAtA[i:], x.Promoter)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Promoter)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*WithdrawFundsPayload)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: WithdrawFundsPayload: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: WithdrawFundsPayload: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Promoter", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Promoter = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_RewardPayloadCommon            protoreflect.MessageDescriptor
	fd_RewardPayloadCommon_receiver   protoreflect.FieldDescriptor
	fd_RewardPayloadCommon_source_uid protoreflect.FieldDescriptor
	fd_RewardPayloadCommon_meta       protoreflect.FieldDescriptor
	fd_RewardPayloadCommon_kyc_data   protoreflect.FieldDescriptor
)

func init() {
	file_sgenetwork_sge_reward_ticket_proto_init()
	md_RewardPayloadCommon = File_sgenetwork_sge_reward_ticket_proto.Messages().ByName("RewardPayloadCommon")
	fd_RewardPayloadCommon_receiver = md_RewardPayloadCommon.Fields().ByName("receiver")
	fd_RewardPayloadCommon_source_uid = md_RewardPayloadCommon.Fields().ByName("source_uid")
	fd_RewardPayloadCommon_meta = md_RewardPayloadCommon.Fields().ByName("meta")
	fd_RewardPayloadCommon_kyc_data = md_RewardPayloadCommon.Fields().ByName("kyc_data")
}

var _ protoreflect.Message = (*fastReflection_RewardPayloadCommon)(nil)

type fastReflection_RewardPayloadCommon RewardPayloadCommon

func (x *RewardPayloadCommon) ProtoReflect() protoreflect.Message {
	return (*fastReflection_RewardPayloadCommon)(x)
}

func (x *RewardPayloadCommon) slowProtoReflect() protoreflect.Message {
	mi := &file_sgenetwork_sge_reward_ticket_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_RewardPayloadCommon_messageType fastReflection_RewardPayloadCommon_messageType
var _ protoreflect.MessageType = fastReflection_RewardPayloadCommon_messageType{}

type fastReflection_RewardPayloadCommon_messageType struct{}

func (x fastReflection_RewardPayloadCommon_messageType) Zero() protoreflect.Message {
	return (*fastReflection_RewardPayloadCommon)(nil)
}
func (x fastReflection_RewardPayloadCommon_messageType) New() protoreflect.Message {
	return new(fastReflection_RewardPayloadCommon)
}
func (x fastReflection_RewardPayloadCommon_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_RewardPayloadCommon
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_RewardPayloadCommon) Descriptor() protoreflect.MessageDescriptor {
	return md_RewardPayloadCommon
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_RewardPayloadCommon) Type() protoreflect.MessageType {
	return _fastReflection_RewardPayloadCommon_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_RewardPayloadCommon) New() protoreflect.Message {
	return new(fastReflection_RewardPayloadCommon)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_RewardPayloadCommon) Interface() protoreflect.ProtoMessage {
	return (*RewardPayloadCommon)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_RewardPayloadCommon) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Receiver != "" {
		value := protoreflect.ValueOfString(x.Receiver)
		if !f(fd_RewardPayloadCommon_receiver, value) {
			return
		}
	}
	if x.SourceUid != "" {
		value := protoreflect.ValueOfString(x.SourceUid)
		if !f(fd_RewardPayloadCommon_source_uid, value) {
			return
		}
	}
	if x.Meta != "" {
		value := protoreflect.ValueOfString(x.Meta)
		if !f(fd_RewardPayloadCommon_meta, value) {
			return
		}
	}
	if x.KycData != nil {
		value := protoreflect.ValueOfMessage(x.KycData.ProtoReflect())
		if !f(fd_RewardPayloadCommon_kyc_data, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_RewardPayloadCommon) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.RewardPayloadCommon.receiver":
		return x.Receiver != ""
	case "sgenetwork.sge.reward.RewardPayloadCommon.source_uid":
		return x.SourceUid != ""
	case "sgenetwork.sge.reward.RewardPayloadCommon.meta":
		return x.Meta != ""
	case "sgenetwork.sge.reward.RewardPayloadCommon.kyc_data":
		return x.KycData != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.RewardPayloadCommon"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.RewardPayloadCommon does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RewardPayloadCommon) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.RewardPayloadCommon.receiver":
		x.Receiver = ""
	case "sgenetwork.sge.reward.RewardPayloadCommon.source_uid":
		x.SourceUid = ""
	case "sgenetwork.sge.reward.RewardPayloadCommon.meta":
		x.Meta = ""
	case "sgenetwork.sge.reward.RewardPayloadCommon.kyc_data":
		x.KycData = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.RewardPayloadCommon"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.RewardPayloadCommon does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_RewardPayloadCommon) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sgenetwork.sge.reward.RewardPayloadCommon.receiver":
		value := x.Receiver
		return protoreflect.ValueOfString(value)
	case "sgenetwork.sge.reward.RewardPayloadCommon.source_uid":
		value := x.SourceUid
		return protoreflect.ValueOfString(value)
	case "sgenetwork.sge.reward.RewardPayloadCommon.meta":
		value := x.Meta
		return protoreflect.ValueOfString(value)
	case "sgenetwork.sge.reward.RewardPayloadCommon.kyc_data":
		value := x.KycData
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.RewardPayloadCommon"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.RewardPayloadCommon does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RewardPayloadCommon) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.RewardPayloadCommon.receiver":
		x.Receiver = value.Interface().(string)
	case "sgenetwork.sge.reward.RewardPayloadCommon.source_uid":
		x.SourceUid = value.Interface().(string)
	case "sgenetwork.sge.reward.RewardPayloadCommon.meta":
		x.Meta = value.Interface().(string)
	case "sgenetwork.sge.reward.RewardPayloadCommon.kyc_data":
		x.KycData = value.Message().Interface().(*_type.KycDataPayload)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.RewardPayloadCommon"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.RewardPayloadCommon does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RewardPayloadCommon) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.RewardPayloadCommon.kyc_data":
		if x.KycData == nil {
			x.KycData = new(_type.KycDataPayload)
		}
		return protoreflect.ValueOfMessage(x.KycData.ProtoReflect())
	case "sgenetwork.sge.reward.RewardPayloadCommon.receiver":
		panic(fmt.Errorf("field receiver of message sgenetwork.sge.reward.RewardPayloadCommon is not mutable"))
	case "sgenetwork.sge.reward.RewardPayloadCommon.source_uid":
		panic(fmt.Errorf("field source_uid of message sgenetwork.sge.reward.RewardPayloadCommon is not mutable"))
	case "sgenetwork.sge.reward.RewardPayloadCommon.meta":
		panic(fmt.Errorf("field meta of message sgenetwork.sge.reward.RewardPayloadCommon is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.RewardPayloadCommon"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.RewardPayloadCommon does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_RewardPayloadCommon) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.RewardPayloadCommon.receiver":
		return protoreflect.ValueOfString("")
	case "sgenetwork.sge.reward.RewardPayloadCommon.source_uid":
		return protoreflect.ValueOfString("")
	case "sgenetwork.sge.reward.RewardPayloadCommon.meta":
		return protoreflect.ValueOfString("")
	case "sgenetwork.sge.reward.RewardPayloadCommon.kyc_data":
		m := new(_type.KycDataPayload)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.RewardPayloadCommon"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.RewardPayloadCommon does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_RewardPayloadCommon) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sgenetwork.sge.reward.RewardPayloadCommon", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_RewardPayloadCommon) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RewardPayloadCommon) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_RewardPayloadCommon) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_RewardPayloadCommon) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*RewardPayloadCommon)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Receiver)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.SourceUid)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Meta)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.KycData != nil {
			l = options.Size(x.KycData)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*RewardPayloadCommon)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.KycData != nil {
			encoded, err := options.Marshal(x.KycData)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Meta) > 0 {
			i -= len(x.Meta)
			copy(dAtA[i:], x.Meta)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Meta)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.SourceUid) > 0 {
			i -= len(x.SourceUid)
			copy(dAtA[i:], x.SourceUid)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SourceUid)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Receiver) > 0 {
			i -= len(x.Receiver)
			copy(dAtA[i:], x.Receiver)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Receiver)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*RewardPayloadCommon)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RewardPayloadCommon: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RewardPayloadCommon: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Receiver = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SourceUid", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SourceUid = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Meta", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Meta = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KycData", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.KycData == nil {
					x.KycData = &_type.KycDataPayload{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.KycData); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GrantSignupRewardPayload        protoreflect.MessageDescriptor
	fd_GrantSignupRewardPayload_common protoreflect.FieldDescriptor
)

func init() {
	file_sgenetwork_sge_reward_ticket_proto_init()
	md_GrantSignupRewardPayload = File_sgenetwork_sge_reward_ticket_proto.Messages().ByName("GrantSignupRewardPayload")
	fd_GrantSignupRewardPayload_common = md_GrantSignupRewardPayload.Fields().ByName("common")
}

var _ protoreflect.Message = (*fastReflection_GrantSignupRewardPayload)(nil)

type fastReflection_GrantSignupRewardPayload GrantSignupRewardPayload

func (x *GrantSignupRewardPayload) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GrantSignupRewardPayload)(x)
}

func (x *GrantSignupRewardPayload) slowProtoReflect() protoreflect.Message {
	mi := &file_sgenetwork_sge_reward_ticket_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GrantSignupRewardPayload_messageType fastReflection_GrantSignupRewardPayload_messageType
var _ protoreflect.MessageType = fastReflection_GrantSignupRewardPayload_messageType{}

type fastReflection_GrantSignupRewardPayload_messageType struct{}

func (x fastReflection_GrantSignupRewardPayload_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GrantSignupRewardPayload)(nil)
}
func (x fastReflection_GrantSignupRewardPayload_messageType) New() protoreflect.Message {
	return new(fastReflection_GrantSignupRewardPayload)
}
func (x fastReflection_GrantSignupRewardPayload_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GrantSignupRewardPayload
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GrantSignupRewardPayload) Descriptor() protoreflect.MessageDescriptor {
	return md_GrantSignupRewardPayload
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GrantSignupRewardPayload) Type() protoreflect.MessageType {
	return _fastReflection_GrantSignupRewardPayload_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GrantSignupRewardPayload) New() protoreflect.Message {
	return new(fastReflection_GrantSignupRewardPayload)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GrantSignupRewardPayload) Interface() protoreflect.ProtoMessage {
	return (*GrantSignupRewardPayload)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GrantSignupRewardPayload) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Common != nil {
		value := protoreflect.ValueOfMessage(x.Common.ProtoReflect())
		if !f(fd_GrantSignupRewardPayload_common, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GrantSignupRewardPayload) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.GrantSignupRewardPayload.common":
		return x.Common != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.GrantSignupRewardPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.GrantSignupRewardPayload does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GrantSignupRewardPayload) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.GrantSignupRewardPayload.common":
		x.Common = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.GrantSignupRewardPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.GrantSignupRewardPayload does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GrantSignupRewardPayload) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sgenetwork.sge.reward.GrantSignupRewardPayload.common":
		value := x.Common
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.GrantSignupRewardPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.GrantSignupRewardPayload does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GrantSignupRewardPayload) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.GrantSignupRewardPayload.common":
		x.Common = value.Message().Interface().(*RewardPayloadCommon)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.GrantSignupRewardPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.GrantSignupRewardPayload does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GrantSignupRewardPayload) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.GrantSignupRewardPayload.common":
		if x.Common == nil {
			x.Common = new(RewardPayloadCommon)
		}
		return protoreflect.ValueOfMessage(x.Common.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.GrantSignupRewardPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.GrantSignupRewardPayload does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GrantSignupRewardPayload) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.GrantSignupRewardPayload.common":
		m := new(RewardPayloadCommon)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.GrantSignupRewardPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.GrantSignupRewardPayload does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GrantSignupRewardPayload) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sgenetwork.sge.reward.GrantSignupRewardPayload", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GrantSignupRewardPayload) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GrantSignupRewardPayload) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GrantSignupRewardPayload) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GrantSignupRewardPayload) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GrantSignupRewardPayload)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Common != nil {
			l = options.Size(x.Common)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GrantSignupRewardPayload)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Common != nil {
			encoded, err := options.Marshal(x.Common)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GrantSignupRewardPayload)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GrantSignupRewardPayload: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GrantSignupRewardPayload: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Common", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Common == nil {
					x.Common = &RewardPayloadCommon{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Common); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GrantSignupReferrerRewardPayload         protoreflect.MessageDescriptor
	fd_GrantSignupReferrerRewardPayload_common  protoreflect.FieldDescriptor
	fd_GrantSignupReferrerRewardPayload_referee protoreflect.FieldDescriptor
)

func init() {
	file_sgenetwork_sge_reward_ticket_proto_init()
	md_GrantSignupReferrerRewardPayload = File_sgenetwork_sge_reward_ticket_proto.Messages().ByName("GrantSignupReferrerRewardPayload")
	fd_GrantSignupReferrerRewardPayload_common = md_GrantSignupReferrerRewardPayload.Fields().ByName("common")
	fd_GrantSignupReferrerRewardPayload_referee = md_GrantSignupReferrerRewardPayload.Fields().ByName("referee")
}

var _ protoreflect.Message = (*fastReflection_GrantSignupReferrerRewardPayload)(nil)

type fastReflection_GrantSignupReferrerRewardPayload GrantSignupReferrerRewardPayload

func (x *GrantSignupReferrerRewardPayload) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GrantSignupReferrerRewardPayload)(x)
}

func (x *GrantSignupReferrerRewardPayload) slowProtoReflect() protoreflect.Message {
	mi := &file_sgenetwork_sge_reward_ticket_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GrantSignupReferrerRewardPayload_messageType fastReflection_GrantSignupReferrerRewardPayload_messageType
var _ protoreflect.MessageType = fastReflection_GrantSignupReferrerRewardPayload_messageType{}

type fastReflection_GrantSignupReferrerRewardPayload_messageType struct{}

func (x fastReflection_GrantSignupReferrerRewardPayload_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GrantSignupReferrerRewardPayload)(nil)
}
func (x fastReflection_GrantSignupReferrerRewardPayload_messageType) New() protoreflect.Message {
	return new(fastReflection_GrantSignupReferrerRewardPayload)
}
func (x fastReflection_GrantSignupReferrerRewardPayload_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GrantSignupReferrerRewardPayload
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GrantSignupReferrerRewardPayload) Descriptor() protoreflect.MessageDescriptor {
	return md_GrantSignupReferrerRewardPayload
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GrantSignupReferrerRewardPayload) Type() protoreflect.MessageType {
	return _fastReflection_GrantSignupReferrerRewardPayload_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GrantSignupReferrerRewardPayload) New() protoreflect.Message {
	return new(fastReflection_GrantSignupReferrerRewardPayload)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GrantSignupReferrerRewardPayload) Interface() protoreflect.ProtoMessage {
	return (*GrantSignupReferrerRewardPayload)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GrantSignupReferrerRewardPayload) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Common != nil {
		value := protoreflect.ValueOfMessage(x.Common.ProtoReflect())
		if !f(fd_GrantSignupReferrerRewardPayload_common, value) {
			return
		}
	}
	if x.Referee != "" {
		value := protoreflect.ValueOfString(x.Referee)
		if !f(fd_GrantSignupReferrerRewardPayload_referee, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GrantSignupReferrerRewardPayload) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.GrantSignupReferrerRewardPayload.common":
		return x.Common != nil
	case "sgenetwork.sge.reward.GrantSignupReferrerRewardPayload.referee":
		return x.Referee != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.GrantSignupReferrerRewardPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.GrantSignupReferrerRewardPayload does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GrantSignupReferrerRewardPayload) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.GrantSignupReferrerRewardPayload.common":
		x.Common = nil
	case "sgenetwork.sge.reward.GrantSignupReferrerRewardPayload.referee":
		x.Referee = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.GrantSignupReferrerRewardPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.GrantSignupReferrerRewardPayload does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GrantSignupReferrerRewardPayload) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sgenetwork.sge.reward.GrantSignupReferrerRewardPayload.common":
		value := x.Common
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "sgenetwork.sge.reward.GrantSignupReferrerRewardPayload.referee":
		value := x.Referee
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.GrantSignupReferrerRewardPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.GrantSignupReferrerRewardPayload does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GrantSignupReferrerRewardPayload) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.GrantSignupReferrerRewardPayload.common":
		x.Common = value.Message().Interface().(*RewardPayloadCommon)
	case "sgenetwork.sge.reward.GrantSignupReferrerRewardPayload.referee":
		x.Referee = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.GrantSignupReferrerRewardPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.GrantSignupReferrerRewardPayload does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GrantSignupReferrerRewardPayload) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.GrantSignupReferrerRewardPayload.common":
		if x.Common == nil {
			x.Common = new(RewardPayloadCommon)
		}
		return protoreflect.ValueOfMessage(x.Common.ProtoReflect())
	case "sgenetwork.sge.reward.GrantSignupReferrerRewardPayload.referee":
		panic(fmt.Errorf("field referee of message sgenetwork.sge.reward.GrantSignupReferrerRewardPayload is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.GrantSignupReferrerRewardPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.GrantSignupReferrerRewardPayload does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GrantSignupReferrerRewardPayload) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.GrantSignupReferrerRewardPayload.common":
		m := new(RewardPayloadCommon)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "sgenetwork.sge.reward.GrantSignupReferrerRewardPayload.referee":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.GrantSignupReferrerRewardPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.GrantSignupReferrerRewardPayload does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GrantSignupReferrerRewardPayload) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sgenetwork.sge.reward.GrantSignupReferrerRewardPayload", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GrantSignupReferrerRewardPayload) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GrantSignupReferrerRewardPayload) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GrantSignupReferrerRewardPayload) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GrantSignupReferrerRewardPayload) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GrantSignupReferrerRewardPayload)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Common != nil {
			l = options.Size(x.Common)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Referee)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GrantSignupReferrerRewardPayload)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Referee) > 0 {
			i -= len(x.Referee)
			copy(dAtA[i:], x.Referee)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Referee)))
			i--
			dAtA[i] = 0x12
		}
		if x.Common != nil {
			encoded, err := options.Marshal(x.Common)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GrantSignupReferrerRewardPayload)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GrantSignupReferrerRewardPayload: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GrantSignupReferrerRewardPayload: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Common", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Common == nil {
					x.Common = &RewardPayloadCommon{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Common); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Referee", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Referee = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GrantSignupAffiliatorRewardPayload            protoreflect.MessageDescriptor
	fd_GrantSignupAffiliatorRewardPayload_common     protoreflect.FieldDescriptor
	fd_GrantSignupAffiliatorRewardPayload_affiliatee protoreflect.FieldDescriptor
)

func init() {
	file_sgenetwork_sge_reward_ticket_proto_init()
	md_GrantSignupAffiliatorRewardPayload = File_sgenetwork_sge_reward_ticket_proto.Messages().ByName("GrantSignupAffiliatorRewardPayload")
	fd_GrantSignupAffiliatorRewardPayload_common = md_GrantSignupAffiliatorRewardPayload.Fields().ByName("common")
	fd_GrantSignupAffiliatorRewardPayload_affiliatee = md_GrantSignupAffiliatorRewardPayload.Fields().ByName("affiliatee")
}

var _ protoreflect.Message = (*fastReflection_GrantSignupAffiliatorRewardPayload)(nil)

type fastReflection_GrantSignupAffiliatorRewardPayload GrantSignupAffiliatorRewardPayload

func (x *GrantSignupAffiliatorRewardPayload) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GrantSignupAffiliatorRewardPayload)(x)
}

func (x *GrantSignupAffiliatorRewardPayload) slowProtoReflect() protoreflect.Message {
	mi := &file_sgenetwork_sge_reward_ticket_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GrantSignupAffiliatorRewardPayload_messageType fastReflection_GrantSignupAffiliatorRewardPayload_messageType
var _ protoreflect.MessageType = fastReflection_GrantSignupAffiliatorRewardPayload_messageType{}

type fastReflection_GrantSignupAffiliatorRewardPayload_messageType struct{}

func (x fastReflection_GrantSignupAffiliatorRewardPayload_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GrantSignupAffiliatorRewardPayload)(nil)
}
func (x fastReflection_GrantSignupAffiliatorRewardPayload_messageType) New() protoreflect.Message {
	return new(fastReflection_GrantSignupAffiliatorRewardPayload)
}
func (x fastReflection_GrantSignupAffiliatorRewardPayload_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GrantSignupAffiliatorRewardPayload
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GrantSignupAffiliatorRewardPayload) Descriptor() protoreflect.MessageDescriptor {
	return md_GrantSignupAffiliatorRewardPayload
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GrantSignupAffiliatorRewardPayload) Type() protoreflect.MessageType {
	return _fastReflection_GrantSignupAffiliatorRewardPayload_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GrantSignupAffiliatorRewardPayload) New() protoreflect.Message {
	return new(fastReflection_GrantSignupAffiliatorRewardPayload)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GrantSignupAffiliatorRewardPayload) Interface() protoreflect.ProtoMessage {
	return (*GrantSignupAffiliatorRewardPayload)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GrantSignupAffiliatorRewardPayload) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Common != nil {
		value := protoreflect.ValueOfMessage(x.Common.ProtoReflect())
		if !f(fd_GrantSignupAffiliatorRewardPayload_common, value) {
			return
		}
	}
	if x.Affiliatee != "" {
		value := protoreflect.ValueOfString(x.Affiliatee)
		if !f(fd_GrantSignupAffiliatorRewardPayload_affiliatee, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GrantSignupAffiliatorRewardPayload) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload.common":
		return x.Common != nil
	case "sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload.affiliatee":
		return x.Affiliatee != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GrantSignupAffiliatorRewardPayload) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload.common":
		x.Common = nil
	case "sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload.affiliatee":
		x.Affiliatee = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GrantSignupAffiliatorRewardPayload) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload.common":
		value := x.Common
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload.affiliatee":
		value := x.Affiliatee
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GrantSignupAffiliatorRewardPayload) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload.common":
		x.Common = value.Message().Interface().(*RewardPayloadCommon)
	case "sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload.affiliatee":
		x.Affiliatee = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GrantSignupAffiliatorRewardPayload) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload.common":
		if x.Common == nil {
			x.Common = new(RewardPayloadCommon)
		}
		return protoreflect.ValueOfMessage(x.Common.ProtoReflect())
	case "sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload.affiliatee":
		panic(fmt.Errorf("field affiliatee of message sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GrantSignupAffiliatorRewardPayload) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload.common":
		m := new(RewardPayloadCommon)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload.affiliatee":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GrantSignupAffiliatorRewardPayload) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GrantSignupAffiliatorRewardPayload) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GrantSignupAffiliatorRewardPayload) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GrantSignupAffiliatorRewardPayload) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GrantSignupAffiliatorRewardPayload) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GrantSignupAffiliatorRewardPayload)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Common != nil {
			l = options.Size(x.Common)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Affiliatee)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GrantSignupAffiliatorRewardPayload)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Affiliatee) > 0 {
			i -= len(x.Affiliatee)
			copy(dAtA[i:], x.Affiliatee)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Affiliatee)))
			i--
			dAtA[i] = 0x12
		}
		if x.Common != nil {
			encoded, err := options.Marshal(x.Common)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GrantSignupAffiliatorRewardPayload)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GrantSignupAffiliatorRewardPayload: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GrantSignupAffiliatorRewardPayload: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Common", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Common == nil {
					x.Common = &RewardPayloadCommon{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Common); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Affiliatee", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Affiliatee = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GrantBetBonusRewardPayload         protoreflect.MessageDescriptor
	fd_GrantBetBonusRewardPayload_common  protoreflect.FieldDescriptor
	fd_GrantBetBonusRewardPayload_bet_uid protoreflect.FieldDescriptor
)

func init() {
	file_sgenetwork_sge_reward_ticket_proto_init()
	md_GrantBetBonusRewardPayload = File_sgenetwork_sge_reward_ticket_proto.Messages().ByName("GrantBetBonusRewardPayload")
	fd_GrantBetBonusRewardPayload_common = md_GrantBetBonusRewardPayload.Fields().ByName("common")
	fd_GrantBetBonusRewardPayload_bet_uid = md_GrantBetBonusRewardPayload.Fields().ByName("bet_uid")
}

var _ protoreflect.Message = (*fastReflection_GrantBetBonusRewardPayload)(nil)

type fastReflection_GrantBetBonusRewardPayload GrantBetBonusRewardPayload

func (x *GrantBetBonusRewardPayload) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GrantBetBonusRewardPayload)(x)
}

func (x *GrantBetBonusRewardPayload) slowProtoReflect() protoreflect.Message {
	mi := &file_sgenetwork_sge_reward_ticket_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GrantBetBonusRewardPayload_messageType fastReflection_GrantBetBonusRewardPayload_messageType
var _ protoreflect.MessageType = fastReflection_GrantBetBonusRewardPayload_messageType{}

type fastReflection_GrantBetBonusRewardPayload_messageType struct{}

func (x fastReflection_GrantBetBonusRewardPayload_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GrantBetBonusRewardPayload)(nil)
}
func (x fastReflection_GrantBetBonusRewardPayload_messageType) New() protoreflect.Message {
	return new(fastReflection_GrantBetBonusRewardPayload)
}
func (x fastReflection_GrantBetBonusRewardPayload_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GrantBetBonusRewardPayload
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GrantBetBonusRewardPayload) Descriptor() protoreflect.MessageDescriptor {
	return md_GrantBetBonusRewardPayload
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GrantBetBonusRewardPayload) Type() protoreflect.MessageType {
	return _fastReflection_GrantBetBonusRewardPayload_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GrantBetBonusRewardPayload) New() protoreflect.Message {
	return new(fastReflection_GrantBetBonusRewardPayload)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GrantBetBonusRewardPayload) Interface() protoreflect.ProtoMessage {
	return (*GrantBetBonusRewardPayload)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GrantBetBonusRewardPayload) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Common != nil {
		value := protoreflect.ValueOfMessage(x.Common.ProtoReflect())
		if !f(fd_GrantBetBonusRewardPayload_common, value) {
			return
		}
	}
	if x.BetUid != "" {
		value := protoreflect.ValueOfString(x.BetUid)
		if !f(fd_GrantBetBonusRewardPayload_bet_uid, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GrantBetBonusRewardPayload) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.GrantBetBonusRewardPayload.common":
		return x.Common != nil
	case "sgenetwork.sge.reward.GrantBetBonusRewardPayload.bet_uid":
		return x.BetUid != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.GrantBetBonusRewardPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.GrantBetBonusRewardPayload does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GrantBetBonusRewardPayload) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.GrantBetBonusRewardPayload.common":
		x.Common = nil
	case "sgenetwork.sge.reward.GrantBetBonusRewardPayload.bet_uid":
		x.BetUid = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.GrantBetBonusRewardPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.GrantBetBonusRewardPayload does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GrantBetBonusRewardPayload) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sgenetwork.sge.reward.GrantBetBonusRewardPayload.common":
		value := x.Common
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "sgenetwork.sge.reward.GrantBetBonusRewardPayload.bet_uid":
		value := x.BetUid
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.GrantBetBonusRewardPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.GrantBetBonusRewardPayload does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GrantBetBonusRewardPayload) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.GrantBetBonusRewardPayload.common":
		x.Common = value.Message().Interface().(*RewardPayloadCommon)
	case "sgenetwork.sge.reward.GrantBetBonusRewardPayload.bet_uid":
		x.BetUid = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.GrantBetBonusRewardPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.GrantBetBonusRewardPayload does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GrantBetBonusRewardPayload) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.GrantBetBonusRewardPayload.common":
		if x.Common == nil {
			x.Common = new(RewardPayloadCommon)
		}
		return protoreflect.ValueOfMessage(x.Common.ProtoReflect())
	case "sgenetwork.sge.reward.GrantBetBonusRewardPayload.bet_uid":
		panic(fmt.Errorf("field bet_uid of message sgenetwork.sge.reward.GrantBetBonusRewardPayload is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.GrantBetBonusRewardPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.GrantBetBonusRewardPayload does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GrantBetBonusRewardPayload) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.GrantBetBonusRewardPayload.common":
		m := new(RewardPayloadCommon)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "sgenetwork.sge.reward.GrantBetBonusRewardPayload.bet_uid":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.GrantBetBonusRewardPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.GrantBetBonusRewardPayload does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GrantBetBonusRewardPayload) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sgenetwork.sge.reward.GrantBetBonusRewardPayload", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GrantBetBonusRewardPayload) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GrantBetBonusRewardPayload) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GrantBetBonusRewardPayload) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GrantBetBonusRewardPayload) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GrantBetBonusRewardPayload)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Common != nil {
			l = options.Size(x.Common)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BetUid)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GrantBetBonusRewardPayload)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.BetUid) > 0 {
			i -= len(x.BetUid)
			copy(dAtA[i:], x.BetUid)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BetUid)))
			i--
			dAtA[i] = 0x12
		}
		if x.Common != nil {
			encoded, err := options.Marshal(x.Common)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GrantBetBonusRewardPayload)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GrantBetBonusRewardPayload: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GrantBetBonusRewardPayload: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Common", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Common == nil {
					x.Common = &RewardPayloadCommon{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Common); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BetUid", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BetUid = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_CreatePromoterPayload      protoreflect.MessageDescriptor
	fd_CreatePromoterPayload_uid  protoreflect.FieldDescriptor
	fd_CreatePromoterPayload_conf protoreflect.FieldDescriptor
)

func init() {
	file_sgenetwork_sge_reward_ticket_proto_init()
	md_CreatePromoterPayload = File_sgenetwork_sge_reward_ticket_proto.Messages().ByName("CreatePromoterPayload")
	fd_CreatePromoterPayload_uid = md_CreatePromoterPayload.Fields().ByName("uid")
	fd_CreatePromoterPayload_conf = md_CreatePromoterPayload.Fields().ByName("conf")
}

var _ protoreflect.Message = (*fastReflection_CreatePromoterPayload)(nil)

type fastReflection_CreatePromoterPayload CreatePromoterPayload

func (x *CreatePromoterPayload) ProtoReflect() protoreflect.Message {
	return (*fastReflection_CreatePromoterPayload)(x)
}

func (x *CreatePromoterPayload) slowProtoReflect() protoreflect.Message {
	mi := &file_sgenetwork_sge_reward_ticket_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_CreatePromoterPayload_messageType fastReflection_CreatePromoterPayload_messageType
var _ protoreflect.MessageType = fastReflection_CreatePromoterPayload_messageType{}

type fastReflection_CreatePromoterPayload_messageType struct{}

func (x fastReflection_CreatePromoterPayload_messageType) Zero() protoreflect.Message {
	return (*fastReflection_CreatePromoterPayload)(nil)
}
func (x fastReflection_CreatePromoterPayload_messageType) New() protoreflect.Message {
	return new(fastReflection_CreatePromoterPayload)
}
func (x fastReflection_CreatePromoterPayload_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_CreatePromoterPayload
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_CreatePromoterPayload) Descriptor() protoreflect.MessageDescriptor {
	return md_CreatePromoterPayload
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_CreatePromoterPayload) Type() protoreflect.MessageType {
	return _fastReflection_CreatePromoterPayload_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_CreatePromoterPayload) New() protoreflect.Message {
	return new(fastReflection_CreatePromoterPayload)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_CreatePromoterPayload) Interface() protoreflect.ProtoMessage {
	return (*CreatePromoterPayload)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_CreatePromoterPayload) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Uid != "" {
		value := protoreflect.ValueOfString(x.Uid)
		if !f(fd_CreatePromoterPayload_uid, value) {
			return
		}
	}
	if x.Conf != nil {
		value := protoreflect.ValueOfMessage(x.Conf.ProtoReflect())
		if !f(fd_CreatePromoterPayload_conf, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_CreatePromoterPayload) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.CreatePromoterPayload.uid":
		return x.Uid != ""
	case "sgenetwork.sge.reward.CreatePromoterPayload.conf":
		return x.Conf != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.CreatePromoterPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.CreatePromoterPayload does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CreatePromoterPayload) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.CreatePromoterPayload.uid":
		x.Uid = ""
	case "sgenetwork.sge.reward.CreatePromoterPayload.conf":
		x.Conf = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.CreatePromoterPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.CreatePromoterPayload does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_CreatePromoterPayload) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sgenetwork.sge.reward.CreatePromoterPayload.uid":
		value := x.Uid
		return protoreflect.ValueOfString(value)
	case "sgenetwork.sge.reward.CreatePromoterPayload.conf":
		value := x.Conf
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.CreatePromoterPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.CreatePromoterPayload does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CreatePromoterPayload) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.CreatePromoterPayload.uid":
		x.Uid = value.Interface().(string)
	case "sgenetwork.sge.reward.CreatePromoterPayload.conf":
		x.Conf = value.Message().Interface().(*PromoterConf)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.CreatePromoterPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.CreatePromoterPayload does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CreatePromoterPayload) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.CreatePromoterPayload.conf":
		if x.Conf == nil {
			x.Conf = new(PromoterConf)
		}
		return protoreflect.ValueOfMessage(x.Conf.ProtoReflect())
	case "sgenetwork.sge.reward.CreatePromoterPayload.uid":
		panic(fmt.Errorf("field uid of message sgenetwork.sge.reward.CreatePromoterPayload is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.CreatePromoterPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.CreatePromoterPayload does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_CreatePromoterPayload) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.CreatePromoterPayload.uid":
		return protoreflect.ValueOfString("")
	case "sgenetwork.sge.reward.CreatePromoterPayload.conf":
		m := new(PromoterConf)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.CreatePromoterPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.CreatePromoterPayload does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_CreatePromoterPayload) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sgenetwork.sge.reward.CreatePromoterPayload", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_CreatePromoterPayload) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CreatePromoterPayload) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_CreatePromoterPayload) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_CreatePromoterPayload) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*CreatePromoterPayload)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Uid)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Conf != nil {
			l = options.Size(x.Conf)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*CreatePromoterPayload)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Conf != nil {
			encoded, err := options.Marshal(x.Conf)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Uid) > 0 {
			i -= len(x.Uid)
			copy(dAtA[i:], x.Uid)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Uid)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*CreatePromoterPayload)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CreatePromoterPayload: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CreatePromoterPayload: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Uid = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Conf", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Conf == nil {
					x.Conf = &PromoterConf{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Conf); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SetPromoterConfPayload      protoreflect.MessageDescriptor
	fd_SetPromoterConfPayload_conf protoreflect.FieldDescriptor
)

func init() {
	file_sgenetwork_sge_reward_ticket_proto_init()
	md_SetPromoterConfPayload = File_sgenetwork_sge_reward_ticket_proto.Messages().ByName("SetPromoterConfPayload")
	fd_SetPromoterConfPayload_conf = md_SetPromoterConfPayload.Fields().ByName("conf")
}

var _ protoreflect.Message = (*fastReflection_SetPromoterConfPayload)(nil)

type fastReflection_SetPromoterConfPayload SetPromoterConfPayload

func (x *SetPromoterConfPayload) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SetPromoterConfPayload)(x)
}

func (x *SetPromoterConfPayload) slowProtoReflect() protoreflect.Message {
	mi := &file_sgenetwork_sge_reward_ticket_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SetPromoterConfPayload_messageType fastReflection_SetPromoterConfPayload_messageType
var _ protoreflect.MessageType = fastReflection_SetPromoterConfPayload_messageType{}

type fastReflection_SetPromoterConfPayload_messageType struct{}

func (x fastReflection_SetPromoterConfPayload_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SetPromoterConfPayload)(nil)
}
func (x fastReflection_SetPromoterConfPayload_messageType) New() protoreflect.Message {
	return new(fastReflection_SetPromoterConfPayload)
}
func (x fastReflection_SetPromoterConfPayload_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SetPromoterConfPayload
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SetPromoterConfPayload) Descriptor() protoreflect.MessageDescriptor {
	return md_SetPromoterConfPayload
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SetPromoterConfPayload) Type() protoreflect.MessageType {
	return _fastReflection_SetPromoterConfPayload_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SetPromoterConfPayload) New() protoreflect.Message {
	return new(fastReflection_SetPromoterConfPayload)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SetPromoterConfPayload) Interface() protoreflect.ProtoMessage {
	return (*SetPromoterConfPayload)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SetPromoterConfPayload) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Conf != nil {
		value := protoreflect.ValueOfMessage(x.Conf.ProtoReflect())
		if !f(fd_SetPromoterConfPayload_conf, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SetPromoterConfPayload) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.SetPromoterConfPayload.conf":
		return x.Conf != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.SetPromoterConfPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.SetPromoterConfPayload does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetPromoterConfPayload) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.SetPromoterConfPayload.conf":
		x.Conf = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.SetPromoterConfPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.SetPromoterConfPayload does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SetPromoterConfPayload) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sgenetwork.sge.reward.SetPromoterConfPayload.conf":
		value := x.Conf
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.SetPromoterConfPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.SetPromoterConfPayload does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetPromoterConfPayload) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.SetPromoterConfPayload.conf":
		x.Conf = value.Message().Interface().(*PromoterConf)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.SetPromoterConfPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.SetPromoterConfPayload does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetPromoterConfPayload) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.SetPromoterConfPayload.conf":
		if x.Conf == nil {
			x.Conf = new(PromoterConf)
		}
		return protoreflect.ValueOfMessage(x.Conf.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.SetPromoterConfPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.SetPromoterConfPayload does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SetPromoterConfPayload) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sgenetwork.sge.reward.SetPromoterConfPayload.conf":
		m := new(PromoterConf)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.reward.SetPromoterConfPayload"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.reward.SetPromoterConfPayload does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SetPromoterConfPayload) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sgenetwork.sge.reward.SetPromoterConfPayload", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SetPromoterConfPayload) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetPromoterConfPayload) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SetPromoterConfPayload) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SetPromoterConfPayload) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SetPromoterConfPayload)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Conf != nil {
			l = options.Size(x.Conf)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SetPromoterConfPayload)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Conf != nil {
			encoded, err := options.Marshal(x.Conf)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SetPromoterConfPayload)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetPromoterConfPayload: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetPromoterConfPayload: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Conf", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Conf == nil {
					x.Conf = &PromoterConf{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Conf); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: sgenetwork/sge/reward/ticket.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateCampaignPayload is the type for campaign creation payload.
type CreateCampaignPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// promoter is the address of campaign promoter.
	// Funds for the campaign would be deducted from this account.
	Promoter string `protobuf:"bytes,1,opt,name=promoter,proto3" json:"promoter,omitempty"`
	// start_ts is the start timestamp of the campaign.
	StartTs uint64 `protobuf:"varint,2,opt,name=start_ts,json=startTs,proto3" json:"start_ts,omitempty"`
	// end_ts is the end timestamp of the campaign.
	EndTs uint64 `protobuf:"varint,3,opt,name=end_ts,json=endTs,proto3" json:"end_ts,omitempty"`
	// category is the category of the campaign.
	Category RewardCategory `protobuf:"varint,4,opt,name=category,proto3,enum=sgenetwork.sge.reward.RewardCategory" json:"category,omitempty"`
	// reward_type is the type of reward.
	RewardType RewardType `protobuf:"varint,5,opt,name=reward_type,json=rewardType,proto3,enum=sgenetwork.sge.reward.RewardType" json:"reward_type,omitempty"`
	// Reward amount
	RewardAmountType RewardAmountType `protobuf:"varint,6,opt,name=reward_amount_type,json=rewardAmountType,proto3,enum=sgenetwork.sge.reward.RewardAmountType" json:"reward_amount_type,omitempty"`
	// reward_amount is the amount of reward.
	RewardAmount *RewardAmount `protobuf:"bytes,7,opt,name=reward_amount,json=rewardAmount,proto3" json:"reward_amount,omitempty"`
	// is_active is the flag to check if the campaign is active or not.
	IsActive bool `protobuf:"varint,8,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// meta is the metadata of the campaign.
	// It is a stringified base64 encoded json.
	Meta string `protobuf:"bytes,10,opt,name=meta,proto3" json:"meta,omitempty"`
	// cap_count is the maximum allowed grant for a certain account.
	CapCount uint64 `protobuf:"varint,11,opt,name=cap_count,json=capCount,proto3" json:"cap_count,omitempty"`
	// constraints is the constrains of a campaign.
	Constraints *CampaignConstraints `protobuf:"bytes,12,opt,name=constraints,proto3" json:"constraints,omitempty"`
}

func (x *CreateCampaignPayload) Reset() {
	*x = CreateCampaignPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sgenetwork_sge_reward_ticket_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCampaignPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCampaignPayload) ProtoMessage() {}

// Deprecated: Use CreateCampaignPayload.ProtoReflect.Descriptor instead.
func (*CreateCampaignPayload) Descriptor() ([]byte, []int) {
	return file_sgenetwork_sge_reward_ticket_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCampaignPayload) GetPromoter() string {
	if x != nil {
		return x.Promoter
	}
	return ""
}

func (x *CreateCampaignPayload) GetStartTs() uint64 {
	if x != nil {
		return x.StartTs
	}
	return 0
}

func (x *CreateCampaignPayload) GetEndTs() uint64 {
	if x != nil {
		return x.EndTs
	}
	return 0
}

func (x *CreateCampaignPayload) GetCategory() RewardCategory {
	if x != nil {
		return x.Category
	}
	return RewardCategory_REWARD_CATEGORY_UNSPECIFIED
}

func (x *CreateCampaignPayload) GetRewardType() RewardType {
	if x != nil {
		return x.RewardType
	}
	return RewardType_REWARD_TYPE_UNSPECIFIED
}

func (x *CreateCampaignPayload) GetRewardAmountType() RewardAmountType {
	if x != nil {
		return x.RewardAmountType
	}
	return RewardAmountType_REWARD_AMOUNT_TYPE_UNSPECIFIED
}

func (x *CreateCampaignPayload) GetRewardAmount() *RewardAmount {
	if x != nil {
		return x.RewardAmount
	}
	return nil
}

func (x *CreateCampaignPayload) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *CreateCampaignPayload) GetMeta() string {
	if x != nil {
		return x.Meta
	}
	return ""
}

func (x *CreateCampaignPayload) GetCapCount() uint64 {
	if x != nil {
		return x.CapCount
	}
	return 0
}

func (x *CreateCampaignPayload) GetConstraints() *CampaignConstraints {
	if x != nil {
		return x.Constraints
	}
	return nil
}

// UpdateCampaignPayload is the type for campaign update payload.
type UpdateCampaignPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// end_ts is the end timestamp of the campaign.
	EndTs uint64 `protobuf:"varint,1,opt,name=end_ts,json=endTs,proto3" json:"end_ts,omitempty"`
	// is_active is the flag to check if the campaign is active or not.
	IsActive bool `protobuf:"varint,2,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (x *UpdateCampaignPayload) Reset() {
	*x = UpdateCampaignPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sgenetwork_sge_reward_ticket_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCampaignPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCampaignPayload) ProtoMessage() {}

// Deprecated: Use UpdateCampaignPayload.ProtoReflect.Descriptor instead.
func (*UpdateCampaignPayload) Descriptor() ([]byte, []int) {
	return file_sgenetwork_sge_reward_ticket_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateCampaignPayload) GetEndTs() uint64 {
	if x != nil {
		return x.EndTs
	}
	return 0
}

func (x *UpdateCampaignPayload) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

// WithdrawFundsPayload is the type for campaign withdraw funds payload.
type WithdrawFundsPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// promoter is the address of campaign promoter.
	// Funds would be transferred to this account.
	Promoter string `protobuf:"bytes,1,opt,name=promoter,proto3" json:"promoter,omitempty"`
}

func (x *WithdrawFundsPayload) Reset() {
	*x = WithdrawFundsPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sgenetwork_sge_reward_ticket_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawFundsPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawFundsPayload) ProtoMessage() {}

// Deprecated: Use WithdrawFundsPayload.ProtoReflect.Descriptor instead.
func (*WithdrawFundsPayload) Descriptor() ([]byte, []int) {
	return file_sgenetwork_sge_reward_ticket_proto_rawDescGZIP(), []int{2}
}

func (x *WithdrawFundsPayload) GetPromoter() string {
	if x != nil {
		return x.Promoter
	}
	return ""
}

// RewardPayloadCommon
type RewardPayloadCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// receiver is the address of the account that receives the reward.
	Receiver string `protobuf:"bytes,1,opt,name=receiver,proto3" json:"receiver,omitempty"`
	// source_uid is the address of the source.
	// It is used to identify the source of the reward.
	// For example, the source uid of a referral signup reward is the address of
	// the referer.
	SourceUid string `protobuf:"bytes,2,opt,name=source_uid,proto3" json:"source_uid,omitempty"`
	// meta is the metadata of the campaign.
	// It is a stringified base64 encoded json.
	Meta string `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	// kyc_data contains the details of user kyc.
	KycData *_type.KycDataPayload `protobuf:"bytes,4,opt,name=kyc_data,json=kycData,proto3" json:"kyc_data,omitempty"`
}

func (x *RewardPayloadCommon) Reset() {
	*x = RewardPayloadCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sgenetwork_sge_reward_ticket_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardPayloadCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardPayloadCommon) ProtoMessage() {}

// Deprecated: Use RewardPayloadCommon.ProtoReflect.Descriptor instead.
func (*RewardPayloadCommon) Descriptor() ([]byte, []int) {
	return file_sgenetwork_sge_reward_ticket_proto_rawDescGZIP(), []int{3}
}

func (x *RewardPayloadCommon) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *RewardPayloadCommon) GetSourceUid() string {
	if x != nil {
		return x.SourceUid
	}
	return ""
}

func (x *RewardPayloadCommon) GetMeta() string {
	if x != nil {
		return x.Meta
	}
	return ""
}

func (x *RewardPayloadCommon) GetKycData() *_type.KycDataPayload {
	if x != nil {
		return x.KycData
	}
	return nil
}

// GrantSignupRewardPayload is the type for signup reward grant payload.
type GrantSignupRewardPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// common is the common properties of a reward
	Common *RewardPayloadCommon `protobuf:"bytes,2,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *GrantSignupRewardPayload) Reset() {
	*x = GrantSignupRewardPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sgenetwork_sge_reward_ticket_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantSignupRewardPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantSignupRewardPayload) ProtoMessage() {}

// Deprecated: Use GrantSignupRewardPayload.ProtoReflect.Descriptor instead.
func (*GrantSignupRewardPayload) Descriptor() ([]byte, []int) {
	return file_sgenetwork_sge_reward_ticket_proto_rawDescGZIP(), []int{4}
}

func (x *GrantSignupRewardPayload) GetCommon() *RewardPayloadCommon {
	if x != nil {
		return x.Common
	}
	return nil
}

// GrantSignupReferrerRewardPayload is the type for signup referrer reward grant
// payload.
type GrantSignupReferrerRewardPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// common is the common properties of a reward
	Common *RewardPayloadCommon `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	// referee is the address of the account that used this referrer address as
	// source_uid
	Referee string `protobuf:"bytes,2,opt,name=referee,proto3" json:"referee,omitempty"`
}

func (x *GrantSignupReferrerRewardPayload) Reset() {
	*x = GrantSignupReferrerRewardPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sgenetwork_sge_reward_ticket_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantSignupReferrerRewardPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantSignupReferrerRewardPayload) ProtoMessage() {}

// Deprecated: Use GrantSignupReferrerRewardPayload.ProtoReflect.Descriptor instead.
func (*GrantSignupReferrerRewardPayload) Descriptor() ([]byte, []int) {
	return file_sgenetwork_sge_reward_ticket_proto_rawDescGZIP(), []int{5}
}

func (x *GrantSignupReferrerRewardPayload) GetCommon() *RewardPayloadCommon {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GrantSignupReferrerRewardPayload) GetReferee() string {
	if x != nil {
		return x.Referee
	}
	return ""
}

// GrantSignupAffiliatorRewardPayload is the type for signup affiliator reward
// grant payload.
type GrantSignupAffiliatorRewardPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// common is the common properties of a reward
	Common *RewardPayloadCommon `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	// affiliatee is the address of the account that used this affiliator's
	// address as source_uid
	Affiliatee string `protobuf:"bytes,2,opt,name=affiliatee,proto3" json:"affiliatee,omitempty"`
}

func (x *GrantSignupAffiliatorRewardPayload) Reset() {
	*x = GrantSignupAffiliatorRewardPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sgenetwork_sge_reward_ticket_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantSignupAffiliatorRewardPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantSignupAffiliatorRewardPayload) ProtoMessage() {}

// Deprecated: Use GrantSignupAffiliatorRewardPayload.ProtoReflect.Descriptor instead.
func (*GrantSignupAffiliatorRewardPayload) Descriptor() ([]byte, []int) {
	return file_sgenetwork_sge_reward_ticket_proto_rawDescGZIP(), []int{6}
}

func (x *GrantSignupAffiliatorRewardPayload) GetCommon() *RewardPayloadCommon {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GrantSignupAffiliatorRewardPayload) GetAffiliatee() string {
	if x != nil {
		return x.Affiliatee
	}
	return ""
}

// GrantBetBonusRewardPayload is the type for bet bonus reward
// grant payload.
type GrantBetBonusRewardPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// common is the common properties of a reward
	Common *RewardPayloadCommon `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	// bet_uid is the list of uids
	BetUid string `protobuf:"bytes,2,opt,name=bet_uid,proto3" json:"bet_uid,omitempty"`
}

func (x *GrantBetBonusRewardPayload) Reset() {
	*x = GrantBetBonusRewardPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sgenetwork_sge_reward_ticket_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantBetBonusRewardPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantBetBonusRewardPayload) ProtoMessage() {}

// Deprecated: Use GrantBetBonusRewardPayload.ProtoReflect.Descriptor instead.
func (*GrantBetBonusRewardPayload) Descriptor() ([]byte, []int) {
	return file_sgenetwork_sge_reward_ticket_proto_rawDescGZIP(), []int{7}
}

func (x *GrantBetBonusRewardPayload) GetCommon() *RewardPayloadCommon {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GrantBetBonusRewardPayload) GetBetUid() string {
	if x != nil {
		return x.BetUid
	}
	return ""
}

// CreatePromoterPayload is the payload for the promoter create.
type CreatePromoterPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// uid is the uid of the promoter to be created
	Uid  string        `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Conf *PromoterConf `protobuf:"bytes,2,opt,name=conf,proto3" json:"conf,omitempty"`
}

func (x *CreatePromoterPayload) Reset() {
	*x = CreatePromoterPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sgenetwork_sge_reward_ticket_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePromoterPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePromoterPayload) ProtoMessage() {}

// Deprecated: Use CreatePromoterPayload.ProtoReflect.Descriptor instead.
func (*CreatePromoterPayload) Descriptor() ([]byte, []int) {
	return file_sgenetwork_sge_reward_ticket_proto_rawDescGZIP(), []int{8}
}

func (x *CreatePromoterPayload) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *CreatePromoterPayload) GetConf() *PromoterConf {
	if x != nil {
		return x.Conf
	}
	return nil
}

// SetPromoterConfPayload is the payload for the promoter configuration change.
type SetPromoterConfPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conf *PromoterConf `protobuf:"bytes,1,opt,name=conf,proto3" json:"conf,omitempty"`
}

func (x *SetPromoterConfPayload) Reset() {
	*x = SetPromoterConfPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sgenetwork_sge_reward_ticket_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPromoterConfPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPromoterConfPayload) ProtoMessage() {}

// Deprecated: Use SetPromoterConfPayload.ProtoReflect.Descriptor instead.
func (*SetPromoterConfPayload) Descriptor() ([]byte, []int) {
	return file_sgenetwork_sge_reward_ticket_proto_rawDescGZIP(), []int{9}
}

func (x *SetPromoterConfPayload) GetConf() *PromoterConf {
	if x != nil {
		return x.Conf
	}
	return nil
}

var File_sgenetwork_sge_reward_ticket_proto protoreflect.FileDescriptor

var file_sgenetwork_sge_reward_ticket_proto_rawDesc = []byte{
	0x0a, 0x22, 0x73, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x73, 0x67, 0x65,
	0x2f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x73, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x73, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x1a, 0x19, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x73, 0x67,
	0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x73, 0x67, 0x65, 0x2f, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x2f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x24, 0x73, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x73,
	0x67, 0x65, 0x2f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x73, 0x67, 0x65, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x73, 0x67, 0x65, 0x2f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2f,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x73, 0x67,
	0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x73, 0x67, 0x65, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x2f, 0x6b, 0x79, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc3, 0x04, 0x0a, 0x15,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x34, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x54, 0x73, 0x12, 0x41, 0x0a,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x25, 0x2e, 0x73, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x73, 0x67, 0x65,
	0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x42, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x73, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x55, 0x0a, 0x12, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x27, 0x2e, 0x73, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x73, 0x67,
	0x65, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x73, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x70, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x61, 0x70, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x67, 0x65, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x73, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x73, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74,
	0x73, 0x22, 0x4b, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x54,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x4c,
	0x0a, 0x14, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x34, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x72, 0x22, 0xdc, 0x01, 0x0a,
	0x13, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0a, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1b,
	0xe2, 0xde, 0x1f, 0x09, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x49, 0x44, 0xea, 0xde, 0x1f,
	0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x52, 0x0a, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x08, 0x6b,
	0x79, 0x63, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x73, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x73, 0x67, 0x65, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x4b, 0x79, 0x63, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x07, 0x6b, 0x79, 0x63, 0x44, 0x61, 0x74, 0x61, 0x22, 0x64, 0x0a, 0x18, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x48, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x67, 0x65, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x73, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x22, 0xa0, 0x01, 0x0a, 0x20, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x75,
	0x70, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x48, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x73, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x12, 0x32, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x22, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x69,
	0x67, 0x6e, 0x75, 0x70, 0x41, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x48, 0x0a, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x67,
	0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x73, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0a, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61,
	0x74, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x0a, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x65, 0x65, 0x22,
	0x97, 0x01, 0x0a, 0x1a, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x42, 0x65, 0x74, 0x42, 0x6f, 0x6e, 0x75,
	0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x48,
	0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x73, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x73, 0x67, 0x65, 0x2e,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00,
	0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x07, 0x62, 0x65, 0x74, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xe2, 0xde, 0x1f, 0x06, 0x42,
	0x65, 0x74, 0x55, 0x49, 0x44, 0xea, 0xde, 0x1f, 0x07, 0x62, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64,
	0x52, 0x07, 0x62, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x22, 0x78, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x20, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0e, 0xe2, 0xde, 0x1f, 0x03, 0x55, 0x49, 0x44, 0xea, 0xde, 0x1f, 0x03, 0x75, 0x69, 0x64, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x73, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x04, 0x63,
	0x6f, 0x6e, 0x66, 0x22, 0x57, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x3d, 0x0a,
	0x04, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x67,
	0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x73, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x42, 0xd4, 0x01, 0x0a,
	0x19, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x73, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x42, 0x0b, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x67, 0x65, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2f, 0x73, 0x67, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x67, 0x65, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x73, 0x67, 0x65, 0x2f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0xa2,
	0x02, 0x03, 0x53, 0x53, 0x52, 0xaa, 0x02, 0x15, 0x53, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x53, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0xca, 0x02, 0x15,
	0x53, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5c, 0x53, 0x67, 0x65, 0x5c, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0xe2, 0x02, 0x21, 0x53, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5c, 0x53, 0x67, 0x65, 0x5c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x17, 0x53, 0x67, 0x65, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x3a, 0x3a, 0x53, 0x67, 0x65, 0x3a, 0x3a, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sgenetwork_sge_reward_ticket_proto_rawDescOnce sync.Once
	file_sgenetwork_sge_reward_ticket_proto_rawDescData = file_sgenetwork_sge_reward_ticket_proto_rawDesc
)

func file_sgenetwork_sge_reward_ticket_proto_rawDescGZIP() []byte {
	file_sgenetwork_sge_reward_ticket_proto_rawDescOnce.Do(func() {
		file_sgenetwork_sge_reward_ticket_proto_rawDescData = protoimpl.X.CompressGZIP(file_sgenetwork_sge_reward_ticket_proto_rawDescData)
	})
	return file_sgenetwork_sge_reward_ticket_proto_rawDescData
}

var file_sgenetwork_sge_reward_ticket_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_sgenetwork_sge_reward_ticket_proto_goTypes = []interface{}{
	(*CreateCampaignPayload)(nil),              // 0: sgenetwork.sge.reward.CreateCampaignPayload
	(*UpdateCampaignPayload)(nil),              // 1: sgenetwork.sge.reward.UpdateCampaignPayload
	(*WithdrawFundsPayload)(nil),               // 2: sgenetwork.sge.reward.WithdrawFundsPayload
	(*RewardPayloadCommon)(nil),                // 3: sgenetwork.sge.reward.RewardPayloadCommon
	(*GrantSignupRewardPayload)(nil),           // 4: sgenetwork.sge.reward.GrantSignupRewardPayload
	(*GrantSignupReferrerRewardPayload)(nil),   // 5: sgenetwork.sge.reward.GrantSignupReferrerRewardPayload
	(*GrantSignupAffiliatorRewardPayload)(nil), // 6: sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload
	(*GrantBetBonusRewardPayload)(nil),         // 7: sgenetwork.sge.reward.GrantBetBonusRewardPayload
	(*CreatePromoterPayload)(nil),              // 8: sgenetwork.sge.reward.CreatePromoterPayload
	(*SetPromoterConfPayload)(nil),             // 9: sgenetwork.sge.reward.SetPromoterConfPayload
	(RewardCategory)(0),                        // 10: sgenetwork.sge.reward.RewardCategory
	(RewardType)(0),                            // 11: sgenetwork.sge.reward.RewardType
	(RewardAmountType)(0),                      // 12: sgenetwork.sge.reward.RewardAmountType
	(*RewardAmount)(nil),                       // 13: sgenetwork.sge.reward.RewardAmount
	(*CampaignConstraints)(nil),                // 14: sgenetwork.sge.reward.CampaignConstraints
	(*_type.KycDataPayload)(nil),               // 15: sgenetwork.sge.type.KycDataPayload
	(*PromoterConf)(nil),                       // 16: sgenetwork.sge.reward.PromoterConf
}
var file_sgenetwork_sge_reward_ticket_proto_depIdxs = []int32{
	10, // 0: sgenetwork.sge.reward.CreateCampaignPayload.category:type_name -> sgenetwork.sge.reward.RewardCategory
	11, // 1: sgenetwork.sge.reward.CreateCampaignPayload.reward_type:type_name -> sgenetwork.sge.reward.RewardType
	12, // 2: sgenetwork.sge.reward.CreateCampaignPayload.reward_amount_type:type_name -> sgenetwork.sge.reward.RewardAmountType
	13, // 3: sgenetwork.sge.reward.CreateCampaignPayload.reward_amount:type_name -> sgenetwork.sge.reward.RewardAmount
	14, // 4: sgenetwork.sge.reward.CreateCampaignPayload.constraints:type_name -> sgenetwork.sge.reward.CampaignConstraints
	15, // 5: sgenetwork.sge.reward.RewardPayloadCommon.kyc_data:type_name -> sgenetwork.sge.type.KycDataPayload
	3,  // 6: sgenetwork.sge.reward.GrantSignupRewardPayload.common:type_name -> sgenetwork.sge.reward.RewardPayloadCommon
	3,  // 7: sgenetwork.sge.reward.GrantSignupReferrerRewardPayload.common:type_name -> sgenetwork.sge.reward.RewardPayloadCommon
	3,  // 8: sgenetwork.sge.reward.GrantSignupAffiliatorRewardPayload.common:type_name -> sgenetwork.sge.reward.RewardPayloadCommon
	3,  // 9: sgenetwork.sge.reward.GrantBetBonusRewardPayload.common:type_name -> sgenetwork.sge.reward.RewardPayloadCommon
	16, // 10: sgenetwork.sge.reward.CreatePromoterPayload.conf:type_name -> sgenetwork.sge.reward.PromoterConf
	16, // 11: sgenetwork.sge.reward.SetPromoterConfPayload.conf:type_name -> sgenetwork.sge.reward.PromoterConf
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_sgenetwork_sge_reward_ticket_proto_init() }
func file_sgenetwork_sge_reward_ticket_proto_init() {
	if File_sgenetwork_sge_reward_ticket_proto != nil {
		return
	}
	file_sgenetwork_sge_reward_campaign_proto_init()
	file_sgenetwork_sge_reward_promoter_proto_init()
	file_sgenetwork_sge_reward_reward_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sgenetwork_sge_reward_ticket_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCampaignPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sgenetwork_sge_reward_ticket_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCampaignPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sgenetwork_sge_reward_ticket_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawFundsPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sgenetwork_sge_reward_ticket_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardPayloadCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sgenetwork_sge_reward_ticket_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantSignupRewardPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sgenetwork_sge_reward_ticket_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantSignupReferrerRewardPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sgenetwork_sge_reward_ticket_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantSignupAffiliatorRewardPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sgenetwork_sge_reward_ticket_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantBetBonusRewardPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sgenetwork_sge_reward_ticket_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePromoterPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sgenetwork_sge_reward_ticket_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPromoterConfPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sgenetwork_sge_reward_ticket_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sgenetwork_sge_reward_ticket_proto_goTypes,
		DependencyIndexes: file_sgenetwork_sge_reward_ticket_proto_depIdxs,
		MessageInfos:      file_sgenetwork_sge_reward_ticket_proto_msgTypes,
	}.Build()
	File_sgenetwork_sge_reward_ticket_proto = out.File
	file_sgenetwork_sge_reward_ticket_proto_rawDesc = nil
	file_sgenetwork_sge_reward_ticket_proto_goTypes = nil
	file_sgenetwork_sge_reward_ticket_proto_depIdxs = nil
}
