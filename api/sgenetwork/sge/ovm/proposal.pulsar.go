// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package ovm

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_PublicKeysChangeProposal_4_list)(nil)

type _PublicKeysChangeProposal_4_list struct {
	list *[]*Vote
}

func (x *_PublicKeysChangeProposal_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_PublicKeysChangeProposal_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_PublicKeysChangeProposal_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Vote)
	(*x.list)[i] = concreteValue
}

func (x *_PublicKeysChangeProposal_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Vote)
	*x.list = append(*x.list, concreteValue)
}

func (x *_PublicKeysChangeProposal_4_list) AppendMutable() protoreflect.Value {
	v := new(Vote)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_PublicKeysChangeProposal_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_PublicKeysChangeProposal_4_list) NewElement() protoreflect.Value {
	v := new(Vote)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_PublicKeysChangeProposal_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_PublicKeysChangeProposal               protoreflect.MessageDescriptor
	fd_PublicKeysChangeProposal_id            protoreflect.FieldDescriptor
	fd_PublicKeysChangeProposal_creator       protoreflect.FieldDescriptor
	fd_PublicKeysChangeProposal_modifications protoreflect.FieldDescriptor
	fd_PublicKeysChangeProposal_votes         protoreflect.FieldDescriptor
	fd_PublicKeysChangeProposal_start_ts      protoreflect.FieldDescriptor
	fd_PublicKeysChangeProposal_result        protoreflect.FieldDescriptor
	fd_PublicKeysChangeProposal_result_meta   protoreflect.FieldDescriptor
	fd_PublicKeysChangeProposal_finish_ts     protoreflect.FieldDescriptor
	fd_PublicKeysChangeProposal_status        protoreflect.FieldDescriptor
)

func init() {
	file_sgenetwork_sge_ovm_proposal_proto_init()
	md_PublicKeysChangeProposal = File_sgenetwork_sge_ovm_proposal_proto.Messages().ByName("PublicKeysChangeProposal")
	fd_PublicKeysChangeProposal_id = md_PublicKeysChangeProposal.Fields().ByName("id")
	fd_PublicKeysChangeProposal_creator = md_PublicKeysChangeProposal.Fields().ByName("creator")
	fd_PublicKeysChangeProposal_modifications = md_PublicKeysChangeProposal.Fields().ByName("modifications")
	fd_PublicKeysChangeProposal_votes = md_PublicKeysChangeProposal.Fields().ByName("votes")
	fd_PublicKeysChangeProposal_start_ts = md_PublicKeysChangeProposal.Fields().ByName("start_ts")
	fd_PublicKeysChangeProposal_result = md_PublicKeysChangeProposal.Fields().ByName("result")
	fd_PublicKeysChangeProposal_result_meta = md_PublicKeysChangeProposal.Fields().ByName("result_meta")
	fd_PublicKeysChangeProposal_finish_ts = md_PublicKeysChangeProposal.Fields().ByName("finish_ts")
	fd_PublicKeysChangeProposal_status = md_PublicKeysChangeProposal.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_PublicKeysChangeProposal)(nil)

type fastReflection_PublicKeysChangeProposal PublicKeysChangeProposal

func (x *PublicKeysChangeProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_PublicKeysChangeProposal)(x)
}

func (x *PublicKeysChangeProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_sgenetwork_sge_ovm_proposal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_PublicKeysChangeProposal_messageType fastReflection_PublicKeysChangeProposal_messageType
var _ protoreflect.MessageType = fastReflection_PublicKeysChangeProposal_messageType{}

type fastReflection_PublicKeysChangeProposal_messageType struct{}

func (x fastReflection_PublicKeysChangeProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_PublicKeysChangeProposal)(nil)
}
func (x fastReflection_PublicKeysChangeProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_PublicKeysChangeProposal)
}
func (x fastReflection_PublicKeysChangeProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_PublicKeysChangeProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_PublicKeysChangeProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_PublicKeysChangeProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_PublicKeysChangeProposal) Type() protoreflect.MessageType {
	return _fastReflection_PublicKeysChangeProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_PublicKeysChangeProposal) New() protoreflect.Message {
	return new(fastReflection_PublicKeysChangeProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_PublicKeysChangeProposal) Interface() protoreflect.ProtoMessage {
	return (*PublicKeysChangeProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_PublicKeysChangeProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_PublicKeysChangeProposal_id, value) {
			return
		}
	}
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_PublicKeysChangeProposal_creator, value) {
			return
		}
	}
	if x.Modifications != nil {
		value := protoreflect.ValueOfMessage(x.Modifications.ProtoReflect())
		if !f(fd_PublicKeysChangeProposal_modifications, value) {
			return
		}
	}
	if len(x.Votes) != 0 {
		value := protoreflect.ValueOfList(&_PublicKeysChangeProposal_4_list{list: &x.Votes})
		if !f(fd_PublicKeysChangeProposal_votes, value) {
			return
		}
	}
	if x.StartTs != int64(0) {
		value := protoreflect.ValueOfInt64(x.StartTs)
		if !f(fd_PublicKeysChangeProposal_start_ts, value) {
			return
		}
	}
	if x.Result != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Result))
		if !f(fd_PublicKeysChangeProposal_result, value) {
			return
		}
	}
	if x.ResultMeta != "" {
		value := protoreflect.ValueOfString(x.ResultMeta)
		if !f(fd_PublicKeysChangeProposal_result_meta, value) {
			return
		}
	}
	if x.FinishTs != int64(0) {
		value := protoreflect.ValueOfInt64(x.FinishTs)
		if !f(fd_PublicKeysChangeProposal_finish_ts, value) {
			return
		}
	}
	if x.Status != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Status))
		if !f(fd_PublicKeysChangeProposal_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_PublicKeysChangeProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.id":
		return x.Id != uint64(0)
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.creator":
		return x.Creator != ""
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.modifications":
		return x.Modifications != nil
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.votes":
		return len(x.Votes) != 0
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.start_ts":
		return x.StartTs != int64(0)
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.result":
		return x.Result != 0
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.result_meta":
		return x.ResultMeta != ""
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.finish_ts":
		return x.FinishTs != int64(0)
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.status":
		return x.Status != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.ovm.PublicKeysChangeProposal"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.ovm.PublicKeysChangeProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PublicKeysChangeProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.id":
		x.Id = uint64(0)
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.creator":
		x.Creator = ""
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.modifications":
		x.Modifications = nil
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.votes":
		x.Votes = nil
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.start_ts":
		x.StartTs = int64(0)
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.result":
		x.Result = 0
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.result_meta":
		x.ResultMeta = ""
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.finish_ts":
		x.FinishTs = int64(0)
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.status":
		x.Status = 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.ovm.PublicKeysChangeProposal"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.ovm.PublicKeysChangeProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_PublicKeysChangeProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.modifications":
		value := x.Modifications
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.votes":
		if len(x.Votes) == 0 {
			return protoreflect.ValueOfList(&_PublicKeysChangeProposal_4_list{})
		}
		listValue := &_PublicKeysChangeProposal_4_list{list: &x.Votes}
		return protoreflect.ValueOfList(listValue)
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.start_ts":
		value := x.StartTs
		return protoreflect.ValueOfInt64(value)
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.result":
		value := x.Result
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.result_meta":
		value := x.ResultMeta
		return protoreflect.ValueOfString(value)
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.finish_ts":
		value := x.FinishTs
		return protoreflect.ValueOfInt64(value)
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.status":
		value := x.Status
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.ovm.PublicKeysChangeProposal"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.ovm.PublicKeysChangeProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PublicKeysChangeProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.id":
		x.Id = value.Uint()
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.creator":
		x.Creator = value.Interface().(string)
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.modifications":
		x.Modifications = value.Message().Interface().(*PubkeysChangeProposalPayload)
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.votes":
		lv := value.List()
		clv := lv.(*_PublicKeysChangeProposal_4_list)
		x.Votes = *clv.list
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.start_ts":
		x.StartTs = value.Int()
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.result":
		x.Result = (ProposalResult)(value.Enum())
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.result_meta":
		x.ResultMeta = value.Interface().(string)
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.finish_ts":
		x.FinishTs = value.Int()
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.status":
		x.Status = (ProposalStatus)(value.Enum())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.ovm.PublicKeysChangeProposal"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.ovm.PublicKeysChangeProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PublicKeysChangeProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.modifications":
		if x.Modifications == nil {
			x.Modifications = new(PubkeysChangeProposalPayload)
		}
		return protoreflect.ValueOfMessage(x.Modifications.ProtoReflect())
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.votes":
		if x.Votes == nil {
			x.Votes = []*Vote{}
		}
		value := &_PublicKeysChangeProposal_4_list{list: &x.Votes}
		return protoreflect.ValueOfList(value)
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.id":
		panic(fmt.Errorf("field id of message sgenetwork.sge.ovm.PublicKeysChangeProposal is not mutable"))
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.creator":
		panic(fmt.Errorf("field creator of message sgenetwork.sge.ovm.PublicKeysChangeProposal is not mutable"))
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.start_ts":
		panic(fmt.Errorf("field start_ts of message sgenetwork.sge.ovm.PublicKeysChangeProposal is not mutable"))
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.result":
		panic(fmt.Errorf("field result of message sgenetwork.sge.ovm.PublicKeysChangeProposal is not mutable"))
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.result_meta":
		panic(fmt.Errorf("field result_meta of message sgenetwork.sge.ovm.PublicKeysChangeProposal is not mutable"))
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.finish_ts":
		panic(fmt.Errorf("field finish_ts of message sgenetwork.sge.ovm.PublicKeysChangeProposal is not mutable"))
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.status":
		panic(fmt.Errorf("field status of message sgenetwork.sge.ovm.PublicKeysChangeProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.ovm.PublicKeysChangeProposal"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.ovm.PublicKeysChangeProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_PublicKeysChangeProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.creator":
		return protoreflect.ValueOfString("")
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.modifications":
		m := new(PubkeysChangeProposalPayload)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.votes":
		list := []*Vote{}
		return protoreflect.ValueOfList(&_PublicKeysChangeProposal_4_list{list: &list})
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.start_ts":
		return protoreflect.ValueOfInt64(int64(0))
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.result":
		return protoreflect.ValueOfEnum(0)
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.result_meta":
		return protoreflect.ValueOfString("")
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.finish_ts":
		return protoreflect.ValueOfInt64(int64(0))
	case "sgenetwork.sge.ovm.PublicKeysChangeProposal.status":
		return protoreflect.ValueOfEnum(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sgenetwork.sge.ovm.PublicKeysChangeProposal"))
		}
		panic(fmt.Errorf("message sgenetwork.sge.ovm.PublicKeysChangeProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_PublicKeysChangeProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sgenetwork.sge.ovm.PublicKeysChangeProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_PublicKeysChangeProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PublicKeysChangeProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_PublicKeysChangeProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_PublicKeysChangeProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*PublicKeysChangeProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Modifications != nil {
			l = options.Size(x.Modifications)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Votes) > 0 {
			for _, e := range x.Votes {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.StartTs != 0 {
			n += 1 + runtime.Sov(uint64(x.StartTs))
		}
		if x.Result != 0 {
			n += 1 + runtime.Sov(uint64(x.Result))
		}
		l = len(x.ResultMeta)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.FinishTs != 0 {
			n += 1 + runtime.Sov(uint64(x.FinishTs))
		}
		if x.Status != 0 {
			n += 1 + runtime.Sov(uint64(x.Status))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*PublicKeysChangeProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Status))
			i--
			dAtA[i] = 0x48
		}
		if x.FinishTs != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.FinishTs))
			i--
			dAtA[i] = 0x40
		}
		if len(x.ResultMeta) > 0 {
			i -= len(x.ResultMeta)
			copy(dAtA[i:], x.ResultMeta)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ResultMeta)))
			i--
			dAtA[i] = 0x3a
		}
		if x.Result != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Result))
			i--
			dAtA[i] = 0x30
		}
		if x.StartTs != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.StartTs))
			i--
			dAtA[i] = 0x28
		}
		if len(x.Votes) > 0 {
			for iNdEx := len(x.Votes) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Votes[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if x.Modifications != nil {
			encoded, err := options.Marshal(x.Modifications)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0x12
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*PublicKeysChangeProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: PublicKeysChangeProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: PublicKeysChangeProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Modifications", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Modifications == nil {
					x.Modifications = &PubkeysChangeProposalPayload{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Modifications); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Votes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Votes = append(x.Votes, &Vote{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Votes[len(x.Votes)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StartTs", wireType)
				}
				x.StartTs = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.StartTs |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
				}
				x.Result = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Result |= ProposalResult(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ResultMeta", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ResultMeta = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FinishTs", wireType)
				}
				x.FinishTs = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.FinishTs |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				x.Status = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Status |= ProposalStatus(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: sgenetwork/sge/ovm/proposal.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ProposalResult is the enum type for the proposal result.
type ProposalResult int32

const (
	// unchosen value
	ProposalResult_PROPOSAL_RESULT_UNSPECIFIED ProposalResult = 0
	// approved
	ProposalResult_PROPOSAL_RESULT_APPROVED ProposalResult = 1
	// rejected
	ProposalResult_PROPOSAL_RESULT_REJECTED ProposalResult = 2
	// expired
	ProposalResult_PROPOSAL_RESULT_EXPIRED ProposalResult = 3
)

// Enum value maps for ProposalResult.
var (
	ProposalResult_name = map[int32]string{
		0: "PROPOSAL_RESULT_UNSPECIFIED",
		1: "PROPOSAL_RESULT_APPROVED",
		2: "PROPOSAL_RESULT_REJECTED",
		3: "PROPOSAL_RESULT_EXPIRED",
	}
	ProposalResult_value = map[string]int32{
		"PROPOSAL_RESULT_UNSPECIFIED": 0,
		"PROPOSAL_RESULT_APPROVED":    1,
		"PROPOSAL_RESULT_REJECTED":    2,
		"PROPOSAL_RESULT_EXPIRED":     3,
	}
)

func (x ProposalResult) Enum() *ProposalResult {
	p := new(ProposalResult)
	*p = x
	return p
}

func (x ProposalResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProposalResult) Descriptor() protoreflect.EnumDescriptor {
	return file_sgenetwork_sge_ovm_proposal_proto_enumTypes[0].Descriptor()
}

func (ProposalResult) Type() protoreflect.EnumType {
	return &file_sgenetwork_sge_ovm_proposal_proto_enumTypes[0]
}

func (x ProposalResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProposalResult.Descriptor instead.
func (ProposalResult) EnumDescriptor() ([]byte, []int) {
	return file_sgenetwork_sge_ovm_proposal_proto_rawDescGZIP(), []int{0}
}

// ProposalStatus is the enum type for the proposal status.
type ProposalStatus int32

const (
	// unchosen value
	ProposalStatus_PROPOSAL_STATUS_UNSPECIFIED ProposalStatus = 0
	// active
	ProposalStatus_PROPOSAL_STATUS_ACTIVE ProposalStatus = 1
	// finished
	ProposalStatus_PROPOSAL_STATUS_FINISHED ProposalStatus = 2
)

// Enum value maps for ProposalStatus.
var (
	ProposalStatus_name = map[int32]string{
		0: "PROPOSAL_STATUS_UNSPECIFIED",
		1: "PROPOSAL_STATUS_ACTIVE",
		2: "PROPOSAL_STATUS_FINISHED",
	}
	ProposalStatus_value = map[string]int32{
		"PROPOSAL_STATUS_UNSPECIFIED": 0,
		"PROPOSAL_STATUS_ACTIVE":      1,
		"PROPOSAL_STATUS_FINISHED":    2,
	}
)

func (x ProposalStatus) Enum() *ProposalStatus {
	p := new(ProposalStatus)
	*p = x
	return p
}

func (x ProposalStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProposalStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_sgenetwork_sge_ovm_proposal_proto_enumTypes[1].Descriptor()
}

func (ProposalStatus) Type() protoreflect.EnumType {
	return &file_sgenetwork_sge_ovm_proposal_proto_enumTypes[1]
}

func (x ProposalStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProposalStatus.Descriptor instead.
func (ProposalStatus) EnumDescriptor() ([]byte, []int) {
	return file_sgenetwork_sge_ovm_proposal_proto_rawDescGZIP(), []int{1}
}

// PublicKeysChangeProposal is the type for the proposal for additions and
// removals of pub keys.
type PublicKeysChangeProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id is the sequential id of the proposal generated by the blockchain.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// creator is the account address of the proposal creator.
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	// modifications contain the ticket payload of the proposal.
	Modifications *PubkeysChangeProposalPayload `protobuf:"bytes,3,opt,name=modifications,proto3" json:"modifications,omitempty"`
	// votes contains the votes of the proposal.
	Votes []*Vote `protobuf:"bytes,4,rep,name=votes,proto3" json:"votes,omitempty"`
	// start_ts is the block time that the proposal is set.
	StartTs int64 `protobuf:"varint,5,opt,name=start_ts,proto3" json:"start_ts,omitempty"`
	// result is the result of the finished proposal.
	Result ProposalResult `protobuf:"varint,6,opt,name=result,proto3,enum=sgenetwork.sge.ovm.ProposalResult" json:"result,omitempty"`
	// result_meta is the metadata related to the result of the finished proposal.
	ResultMeta string `protobuf:"bytes,7,opt,name=result_meta,json=resultMeta,proto3" json:"result_meta,omitempty"`
	// finish_ts is the block time that the proposal is set as finished.
	FinishTs int64 `protobuf:"varint,8,opt,name=finish_ts,proto3" json:"finish_ts,omitempty"`
	// status is the status of a proposal.
	Status ProposalStatus `protobuf:"varint,9,opt,name=status,proto3,enum=sgenetwork.sge.ovm.ProposalStatus" json:"status,omitempty"`
}

func (x *PublicKeysChangeProposal) Reset() {
	*x = PublicKeysChangeProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sgenetwork_sge_ovm_proposal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicKeysChangeProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKeysChangeProposal) ProtoMessage() {}

// Deprecated: Use PublicKeysChangeProposal.ProtoReflect.Descriptor instead.
func (*PublicKeysChangeProposal) Descriptor() ([]byte, []int) {
	return file_sgenetwork_sge_ovm_proposal_proto_rawDescGZIP(), []int{0}
}

func (x *PublicKeysChangeProposal) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PublicKeysChangeProposal) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *PublicKeysChangeProposal) GetModifications() *PubkeysChangeProposalPayload {
	if x != nil {
		return x.Modifications
	}
	return nil
}

func (x *PublicKeysChangeProposal) GetVotes() []*Vote {
	if x != nil {
		return x.Votes
	}
	return nil
}

func (x *PublicKeysChangeProposal) GetStartTs() int64 {
	if x != nil {
		return x.StartTs
	}
	return 0
}

func (x *PublicKeysChangeProposal) GetResult() ProposalResult {
	if x != nil {
		return x.Result
	}
	return ProposalResult_PROPOSAL_RESULT_UNSPECIFIED
}

func (x *PublicKeysChangeProposal) GetResultMeta() string {
	if x != nil {
		return x.ResultMeta
	}
	return ""
}

func (x *PublicKeysChangeProposal) GetFinishTs() int64 {
	if x != nil {
		return x.FinishTs
	}
	return 0
}

func (x *PublicKeysChangeProposal) GetStatus() ProposalStatus {
	if x != nil {
		return x.Status
	}
	return ProposalStatus_PROPOSAL_STATUS_UNSPECIFIED
}

var File_sgenetwork_sge_ovm_proposal_proto protoreflect.FileDescriptor

var file_sgenetwork_sge_ovm_proposal_proto_rawDesc = []byte{
	0x0a, 0x21, 0x73, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x73, 0x67, 0x65,
	0x2f, 0x6f, 0x76, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x12, 0x73, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x73, 0x67, 0x65, 0x2e, 0x6f, 0x76, 0x6d, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x73, 0x67, 0x65, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x73, 0x67, 0x65, 0x2f, 0x6f, 0x76, 0x6d, 0x2f, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x73, 0x67, 0x65, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x73, 0x67, 0x65, 0x2f, 0x6f, 0x76, 0x6d, 0x2f, 0x76, 0x6f,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf3, 0x03, 0x0a, 0x18, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x5c, 0x0a, 0x0d, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x73, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x73, 0x67,
	0x65, 0x2e, 0x6f, 0x76, 0x6d, 0x2e, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x73, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x73, 0x67, 0x65, 0x2e, 0x6f, 0x76, 0x6d, 0x2e, 0x56, 0x6f, 0x74, 0x65,
	0x52, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x17, 0xe2, 0xde, 0x1f, 0x07, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x53, 0xea, 0xde, 0x1f, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x73, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x73,
	0x67, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x73, 0x67, 0x65, 0x2e, 0x6f, 0x76,
	0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x09, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x5f, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x42, 0x19, 0xe2, 0xde,
	0x1f, 0x08, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x53, 0xea, 0xde, 0x1f, 0x09, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x73, 0x52, 0x09, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f,
	0x74, 0x73, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x73, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x73, 0x67, 0x65, 0x2e, 0x6f, 0x76, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x8a,
	0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53, 0x41, 0x4c, 0x5f, 0x52, 0x45,
	0x53, 0x55, 0x4c, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53, 0x41, 0x4c, 0x5f, 0x52,
	0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x1c, 0x0a, 0x18, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53, 0x41, 0x4c, 0x5f, 0x52, 0x45, 0x53,
	0x55, 0x4c, 0x54, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1b,
	0x0a, 0x17, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53, 0x41, 0x4c, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c,
	0x54, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x6b, 0x0a, 0x0e, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a,
	0x1b, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a,
	0x0a, 0x16, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x52,
	0x4f, 0x50, 0x4f, 0x53, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x49,
	0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x02, 0x42, 0xc4, 0x01, 0x0a, 0x16, 0x63, 0x6f, 0x6d,
	0x2e, 0x73, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x73, 0x67, 0x65, 0x2e,
	0x6f, 0x76, 0x6d, 0x42, 0x0d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x67, 0x65, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x73, 0x67, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f,
	0x73, 0x67, 0x65, 0x2f, 0x6f, 0x76, 0x6d, 0xa2, 0x02, 0x03, 0x53, 0x53, 0x4f, 0xaa, 0x02, 0x12,
	0x53, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x53, 0x67, 0x65, 0x2e, 0x4f,
	0x76, 0x6d, 0xca, 0x02, 0x12, 0x53, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5c,
	0x53, 0x67, 0x65, 0x5c, 0x4f, 0x76, 0x6d, 0xe2, 0x02, 0x1e, 0x53, 0x67, 0x65, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5c, 0x53, 0x67, 0x65, 0x5c, 0x4f, 0x76, 0x6d, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x14, 0x53, 0x67, 0x65, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x3a, 0x3a, 0x53, 0x67, 0x65, 0x3a, 0x3a, 0x4f, 0x76, 0x6d, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sgenetwork_sge_ovm_proposal_proto_rawDescOnce sync.Once
	file_sgenetwork_sge_ovm_proposal_proto_rawDescData = file_sgenetwork_sge_ovm_proposal_proto_rawDesc
)

func file_sgenetwork_sge_ovm_proposal_proto_rawDescGZIP() []byte {
	file_sgenetwork_sge_ovm_proposal_proto_rawDescOnce.Do(func() {
		file_sgenetwork_sge_ovm_proposal_proto_rawDescData = protoimpl.X.CompressGZIP(file_sgenetwork_sge_ovm_proposal_proto_rawDescData)
	})
	return file_sgenetwork_sge_ovm_proposal_proto_rawDescData
}

var file_sgenetwork_sge_ovm_proposal_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_sgenetwork_sge_ovm_proposal_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_sgenetwork_sge_ovm_proposal_proto_goTypes = []interface{}{
	(ProposalResult)(0),                  // 0: sgenetwork.sge.ovm.ProposalResult
	(ProposalStatus)(0),                  // 1: sgenetwork.sge.ovm.ProposalStatus
	(*PublicKeysChangeProposal)(nil),     // 2: sgenetwork.sge.ovm.PublicKeysChangeProposal
	(*PubkeysChangeProposalPayload)(nil), // 3: sgenetwork.sge.ovm.PubkeysChangeProposalPayload
	(*Vote)(nil),                         // 4: sgenetwork.sge.ovm.Vote
}
var file_sgenetwork_sge_ovm_proposal_proto_depIdxs = []int32{
	3, // 0: sgenetwork.sge.ovm.PublicKeysChangeProposal.modifications:type_name -> sgenetwork.sge.ovm.PubkeysChangeProposalPayload
	4, // 1: sgenetwork.sge.ovm.PublicKeysChangeProposal.votes:type_name -> sgenetwork.sge.ovm.Vote
	0, // 2: sgenetwork.sge.ovm.PublicKeysChangeProposal.result:type_name -> sgenetwork.sge.ovm.ProposalResult
	1, // 3: sgenetwork.sge.ovm.PublicKeysChangeProposal.status:type_name -> sgenetwork.sge.ovm.ProposalStatus
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_sgenetwork_sge_ovm_proposal_proto_init() }
func file_sgenetwork_sge_ovm_proposal_proto_init() {
	if File_sgenetwork_sge_ovm_proposal_proto != nil {
		return
	}
	file_sgenetwork_sge_ovm_ticket_proto_init()
	file_sgenetwork_sge_ovm_vote_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sgenetwork_sge_ovm_proposal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicKeysChangeProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sgenetwork_sge_ovm_proposal_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sgenetwork_sge_ovm_proposal_proto_goTypes,
		DependencyIndexes: file_sgenetwork_sge_ovm_proposal_proto_depIdxs,
		EnumInfos:         file_sgenetwork_sge_ovm_proposal_proto_enumTypes,
		MessageInfos:      file_sgenetwork_sge_ovm_proposal_proto_msgTypes,
	}.Build()
	File_sgenetwork_sge_ovm_proposal_proto = out.File
	file_sgenetwork_sge_ovm_proposal_proto_rawDesc = nil
	file_sgenetwork_sge_ovm_proposal_proto_goTypes = nil
	file_sgenetwork_sge_ovm_proposal_proto_depIdxs = nil
}
